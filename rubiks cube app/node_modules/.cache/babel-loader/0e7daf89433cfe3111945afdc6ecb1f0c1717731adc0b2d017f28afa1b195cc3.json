{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useMemo, createElement } from 'react';\nimport { Color } from 'three';\nconst Shadow = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      fog = false,\n      colorStop = 0.0,\n      color = 'black',\n      opacity = 0.5\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, [\"fog\", \"colorStop\", \"color\", \"opacity\"]);\n  const canvas = useMemo(() => {\n    let canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    let context = canvas.getContext('2d');\n    let gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1]\n  }), /*#__PURE__*/createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: opacity,\n    fog: fog\n  }, /*#__PURE__*/createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\nexport { Shadow };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}