{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\MyScene.js\",\n  _s = $RefreshSig$();\nimport * as THREE from \"three\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Canvas, useThree } from \"react-three-fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyScene = () => {\n  _s();\n  const orbitref = useRef();\n\n  // Access the Three.js scene\n  const {\n    gl,\n    camera\n  } = useThree();\n  useEffect(() => {\n    // Disable rotation initially\n    orbitref.current.enableRotate = false;\n\n    // Function to enable/disable rotation\n    const toggleRotation = enable => {\n      orbitref.current.enableRotate = enable;\n      // Force a render update\n      gl.render(scene, camera);\n    };\n\n    // Toggle rotation after a delay (for demonstration purposes)\n    setTimeout(() => {\n      toggleRotation(true);\n    }, 1000);\n\n    // Clean up\n    return () => {\n      // Dispose of controls if needed\n      orbitref.current.dispose();\n    };\n  }, [gl, camera]);\n  return /*#__PURE__*/_jsxDEV(\"orbitControls\", {\n    ref: orbitref,\n    args: [camera, gl.domElement]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n_s(MyScene, \"GzxC1lakjsmYDF8PWA6AQzmPkXQ=\", false, function () {\n  return [useThree];\n});\n_c = MyScene;\nexport default MyScene;\nvar _c;\n$RefreshReg$(_c, \"MyScene\");","map":{"version":3,"names":["THREE","React","useRef","useEffect","useState","Canvas","useThree","jsxDEV","_jsxDEV","MyScene","_s","orbitref","gl","camera","current","enableRotate","toggleRotation","enable","render","scene","setTimeout","dispose","ref","args","domElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/MyScene.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Canvas, useThree } from \"react-three-fiber\";\r\n\r\nconst MyScene = () => {\r\n    const orbitref = useRef();\r\n  \r\n    // Access the Three.js scene\r\n    const { gl, camera } = useThree();\r\n  \r\n    useEffect(() => {\r\n      // Disable rotation initially\r\n      orbitref.current.enableRotate = false;\r\n  \r\n      // Function to enable/disable rotation\r\n      const toggleRotation = (enable) => {\r\n        orbitref.current.enableRotate = enable;\r\n        // Force a render update\r\n        gl.render(scene, camera);\r\n      };\r\n  \r\n      // Toggle rotation after a delay (for demonstration purposes)\r\n      setTimeout(() => {\r\n        toggleRotation(true);\r\n      }, 1000);\r\n  \r\n      // Clean up\r\n      return () => {\r\n        // Dispose of controls if needed\r\n        orbitref.current.dispose();\r\n      };\r\n    }, [gl, camera]);\r\n  \r\n    return <orbitControls ref={orbitref} args={[camera, gl.domElement]} />;\r\n  };\r\n  \r\n  export default MyScene;"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,CAAC;;EAEzB;EACA,MAAM;IAAEU,EAAE;IAAEC;EAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAEjCH,SAAS,CAAC,MAAM;IACd;IACAQ,QAAQ,CAACG,OAAO,CAACC,YAAY,GAAG,KAAK;;IAErC;IACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;MACjCN,QAAQ,CAACG,OAAO,CAACC,YAAY,GAAGE,MAAM;MACtC;MACAL,EAAE,CAACM,MAAM,CAACC,KAAK,EAAEN,MAAM,CAAC;IAC1B,CAAC;;IAED;IACAO,UAAU,CAAC,MAAM;MACfJ,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACX;MACAL,QAAQ,CAACG,OAAO,CAACO,OAAO,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACT,EAAE,EAAEC,MAAM,CAAC,CAAC;EAEhB,oBAAOL,OAAA;IAAec,GAAG,EAAEX,QAAS;IAACY,IAAI,EAAE,CAACV,MAAM,EAAED,EAAE,CAACY,UAAU;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAAClB,EAAA,CA9BED,OAAO;EAAA,QAIcH,QAAQ;AAAA;AAAAuB,EAAA,GAJ7BpB,OAAO;AAgCX,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}