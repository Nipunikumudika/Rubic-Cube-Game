{"ast":null,"code":"// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\n// // import RubiksCubeModel from \"./RubiksCubeModel\";\n\n// // import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// // import { Canvas, useFrame } from \"react-three-fiber\";\n// // import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// // import { useLoader } from \"react-three-fiber\";\n\n// // const CameraController = () => {\n// //   const [rotateCamera, setRotateCamera] = useState(false);\n// //   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n// //   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n// //   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n// //   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n// //   const handleDocumentClick = (event) => {\n// //     // Replace 'model' with the actual class or id of your model\n// //     if (!event.target.closest('.model')) {\n// //       // Clicked outside the model, enable camera rotation\n// //       setRotateCamera(true);\n\n// //       // Implement your camera rotation logic here\n// //       console.log('Rotate the camera');\n// //     } else {\n// //       // Clicked inside the model, disable camera rotation\n// //       setRotateCamera(false);\n// //       console.log('No Rotate the camera');\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     // Attach event listener to the document for clicks\n// //     document.addEventListener('click', handleDocumentClick);\n\n// //     // Cleanup the event listener when the component unmounts\n// //     return () => {\n// //       document.removeEventListener('click', handleDocumentClick);\n// //     };\n// //   }, []); // Empty dependency array to run the effect once on mount\n\n// //   return (\n// //     <>\n// //    <Canvas className=\"model\">\n// //       <ambientLight />\n// //      <Suspense fallback={null}>\n// //         <RubiksCubeModel nodesSubset={nodesSubset1} />\n// //         <RubiksCubeModel nodesSubset={nodesSubset2} />\n// //         <RubiksCubeModel nodesSubset={nodesSubset3} />\n// //       </Suspense>\n// //       <pointLight position={[10, 10, 10]} />\n// //     </Canvas>\n// //    </>\n// //   );\n// // };\n\n// // export default CameraController;\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color(0x222222);\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.set(10, 8, 10);\nconst renderer = new THREE.WebGLRenderer({\n  canvas: document.querySelector(\"#canvas\")\n});\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(window.innerWidth, window.innerHeight);\nconst raycaster = new THREE.Raycaster();\nconst pointer = new THREE.Vector2();\nconst radStep = Math.PI / 2 / 50;\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enabled = false;\nconst pivot = new THREE.Object3D();\nconst cubes = [];\nlet draggable = {\n  isDragging: false,\n  cube: null,\n  direction: null,\n  position: null,\n  mouseX: 0,\n  mouseY: 0\n};\nlet pan = {\n  isPanning: false,\n  mouseX: 0,\n  mouseY: 0\n};\nconst cubesColors = [[[[0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x000000], [0x000000, 0xffd500, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x009b48], [0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x000000], [0x000000, 0xffd500, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x009b48], [0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x000000], [0x000000, 0xffd500, 0xb90000, 0x000000, 0xff5900, 0x000000]]], [[[0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000], [0x000000, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48], [0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000], [0x000000, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48], [0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000], [0x000000, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000]]], [[[0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000], [0xffffff, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48], [0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000], [0xffffff, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48], [0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000], [0xffffff, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000]]]];\nconst onMouseDown = event => {\n  pointer.x = event.clientX / window.innerWidth * 2 - 1;\n  pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n  raycaster.setFromCamera(pointer, camera);\n  const intersects = raycaster.intersectObjects(cubes, false);\n  if (draggable.intersect == null) {\n    draggable.intersect = intersects[0];\n  }\n  if (intersects.length > 0) {\n    controls.enabled = false;\n    draggable.isDragging = true;\n    draggable.mouseX = event.clientX;\n    draggable.mouseY = event.clientY;\n    draggable.cube = intersects[0].object;\n    const intersectPoint = new THREE.Vector3(...intersects[0].point.toArray().map(c => +c.toFixed(3)));\n    const objPos = new THREE.Vector3(...intersects[0].object.position.toArray().map(c => +c.toFixed(3)));\n    if (intersectPoint.z == objPos.z + 1) {\n      draggable.direction = \"front\";\n    } else if (intersectPoint.y == objPos.y + 1) {\n      draggable.direction = \"top\";\n    } else if (intersectPoint.x == objPos.x + 1) {\n      draggable.direction = \"side\";\n    }\n  } else if (!controls.enabled) {\n    pan.isPanning = true;\n    pan.mouseX = event.clientX;\n    pan.mouseY = event.clientY;\n  }\n};\nconst onMouseUp = () => {\n  draggable.isDragging = false;\n  pan.isPanning = false;\n};\nconst onMouseMove = event => {\n  if (draggable.isDragging) {\n    if (event.clientY > draggable.mouseY + 50 || event.clientY < draggable.mouseY - 50) {\n      if (draggable.direction == \"side\") {\n        doRotation(\"z\", Math.sign(event.clientY - draggable.mouseY) * -1, draggable.cube);\n        draggable.isDragging = false;\n      } else if (draggable.direction == \"front\") {\n        doRotation(\"x\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n        draggable.isDragging = false;\n      }\n    } else if (event.clientX > draggable.mouseX + 20 && event.clientY < draggable.mouseY - 20 || event.clientX < draggable.mouseX - 20 && event.clientY > draggable.mouseY + 20) {\n      if (draggable.direction == \"top\") {\n        doRotation(\"x\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n        draggable.isDragging = false;\n      } else {\n        doRotation(\"y\", Math.sign(event.clientX - draggable.mouseX), draggable.cube);\n        draggable.isDragging = false;\n      }\n    } else if (event.clientX < draggable.mouseX - 20 && event.clientY < draggable.mouseY - 20 || event.clientX > draggable.mouseX + 20 && event.clientY > draggable.mouseY + 20) {\n      if (draggable.direction == \"top\") {\n        doRotation(\"z\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n        draggable.isDragging = false;\n      } else {\n        doRotation(\"y\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n        draggable.isDragging = false;\n      }\n    }\n  } else if (pan.isPanning) {\n    if (event.clientX > pan.mouseX + 20 || event.clientX < pan.mouseX - 20) {\n      for (let i = 0; i < 27; i++) {\n        pivot.attach(cubes[i]);\n      }\n      rotateOnAxis(\"y\", Math.sign(event.clientX - pan.mouseX));\n      pan.isPanning = false;\n    } else if (event.clientY > pan.mouseY + 20 || event.clientY < pan.mouseY - 20) {\n      for (let i = 0; i < 27; i++) {\n        pivot.attach(cubes[i]);\n      }\n      if (event.clientX > window.innerWidth / 2) {\n        rotateOnAxis(\"z\", Math.sign(event.clientY - pan.mouseY) * -1);\n      } else {\n        rotateOnAxis(\"x\", Math.sign(event.clientY - pan.mouseY));\n      }\n      pan.isPanning = false;\n    }\n  }\n};\nfunction createCubes() {\n  let cubeIndex = 0;\n  const geometry = new THREE.BoxGeometry(2, 2, 2);\n  function getMaterial(colors) {\n    const mat = [];\n    for (let i = 0; i < 6; i++) {\n      mat[i] = new THREE.MeshStandardMaterial({\n        color: colors[i]\n      });\n    }\n    return mat;\n  }\n  for (let x = -1; x <= 1; x += 1) {\n    for (let y = -1; y <= 1; y += 1) {\n      for (let z = -1; z <= 1; z += 1) {\n        const mat = getMaterial(cubesColors[x + 1][y + 1][z + 1]);\n        const cube = new THREE.Mesh(geometry, mat);\n        cube.position.set(x * 2.1, y * 2.1, z * 2.1);\n        cube.userData.index = cubeIndex;\n        cubeIndex++;\n        cubes.push(cube);\n        scene.add(cube);\n      }\n    }\n  }\n}\nfunction doRotation(axis, direction, cube) {\n  for (let i = 0; i < 27; i++) {\n    if (Math.abs(cubes[i].position[axis] - cube.position[axis]) < 1) {\n      pivot.attach(cubes[i]);\n    }\n  }\n  rotateOnAxis(axis, direction);\n}\nfunction rotateOnAxis(axis, direction, angle = Math.PI / 2, done = 0) {\n  if (done >= angle) {\n    let len = pivot.children.length;\n    for (let i = 0; i < len; i++) {\n      scene.attach(pivot.children[0]);\n    }\n    pivot.rotation.set(0, 0, 0);\n    return;\n  }\n  done += radStep;\n  switch (axis) {\n    case \"x\":\n      {\n        pivot.rotateX(radStep * direction);\n        break;\n      }\n    case \"y\":\n      {\n        pivot.rotateY(radStep * direction);\n        break;\n      }\n    case \"z\":\n      {\n        pivot.rotateZ(radStep * direction);\n        break;\n      }\n  }\n  requestAnimationFrame(() => rotateOnAxis(axis, direction, angle, done));\n}\nfunction start() {\n  createCubes();\n  window.addEventListener(\"pointerdown\", onMouseDown);\n  window.addEventListener(\"pointermove\", onMouseMove);\n  window.addEventListener(\"pointerup\", onMouseUp);\n  window.addEventListener('resize', function () {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }, false);\n  const ambient = new THREE.AmbientLight(0xffffff, 0.69);\n  const front = new THREE.DirectionalLight(0xffffff, 0.36);\n  const back = new THREE.DirectionalLight(0xffffff, 0);\n  front.position.set(1.5, 5, 3);\n  back.position.set(-1.5, -5, -3);\n  scene.add(ambient, front, back);\n  scene.add(pivot);\n  animate();\n}\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\ndocument.getElementById(\"scramble\").addEventListener(\"click\", async () => {\n  let arr = [\"x\", \"y\", \"z\"];\n  for (let i = 0; i < 15; i++) {\n    let axis = arr[Math.floor(Math.random() * 3)];\n    let direction = Math.round(Math.random()) * 2 - 1;\n    let cube = Math.floor(Math.random() * 27);\n    doRotation(axis, direction, cubes[cube]);\n    await new Promise(r => setTimeout(r, 500));\n  }\n});\nstart();","map":{"version":3,"names":["THREE","OrbitControls","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","raycaster","Raycaster","pointer","Vector2","radStep","Math","PI","controls","domElement","enabled","pivot","Object3D","cubes","draggable","isDragging","cube","direction","mouseX","mouseY","pan","isPanning","cubesColors","onMouseDown","event","x","clientX","y","clientY","setFromCamera","intersects","intersectObjects","intersect","length","object","intersectPoint","Vector3","point","toArray","map","c","toFixed","objPos","z","onMouseUp","onMouseMove","doRotation","sign","i","attach","rotateOnAxis","createCubes","cubeIndex","geometry","BoxGeometry","getMaterial","colors","mat","MeshStandardMaterial","color","Mesh","userData","index","push","add","axis","abs","angle","done","len","children","rotation","rotateX","rotateY","rotateZ","requestAnimationFrame","start","addEventListener","aspect","updateProjectionMatrix","ambient","AmbientLight","front","DirectionalLight","back","animate","render","getElementById","arr","floor","random","round","Promise","r","setTimeout"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n \n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\n// // import RubiksCubeModel from \"./RubiksCubeModel\";\n\n\n// // import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// // import { Canvas, useFrame } from \"react-three-fiber\";\n// // import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// // import { useLoader } from \"react-three-fiber\";\n\n// // const CameraController = () => {\n// //   const [rotateCamera, setRotateCamera] = useState(false);\n// //   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n// //   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n// //   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n// //   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n// //   const handleDocumentClick = (event) => {\n// //     // Replace 'model' with the actual class or id of your model\n// //     if (!event.target.closest('.model')) {\n// //       // Clicked outside the model, enable camera rotation\n// //       setRotateCamera(true);\n\n// //       // Implement your camera rotation logic here\n// //       console.log('Rotate the camera');\n// //     } else {\n// //       // Clicked inside the model, disable camera rotation\n// //       setRotateCamera(false);\n// //       console.log('No Rotate the camera');\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     // Attach event listener to the document for clicks\n// //     document.addEventListener('click', handleDocumentClick);\n\n// //     // Cleanup the event listener when the component unmounts\n// //     return () => {\n// //       document.removeEventListener('click', handleDocumentClick);\n// //     };\n// //   }, []); // Empty dependency array to run the effect once on mount\n\n// //   return (\n// //     <>\n// //    <Canvas className=\"model\">\n// //       <ambientLight />\n// //      <Suspense fallback={null}>\n// //         <RubiksCubeModel nodesSubset={nodesSubset1} />\n// //         <RubiksCubeModel nodesSubset={nodesSubset2} />\n// //         <RubiksCubeModel nodesSubset={nodesSubset3} />\n// //       </Suspense>\n// //       <pointLight position={[10, 10, 10]} />\n// //     </Canvas>\n// //    </>\n// //   );\n// // };\n\n// // export default CameraController;\n\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color(0x222222);\n\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.set(10, 8, 10);\n\nconst renderer = new THREE.WebGLRenderer({ canvas: document.querySelector(\"#canvas\") });\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(window.innerWidth, window.innerHeight);\n\nconst raycaster = new THREE.Raycaster();\nconst pointer = new THREE.Vector2();\n\nconst radStep = Math.PI / 2 / 50;\n\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enabled = false;\n\nconst pivot = new THREE.Object3D();\n\nconst cubes = [];\nlet draggable = {\n    isDragging: false,\n    cube: null,\n    direction: null,\n    position: null,\n    mouseX: 0,\n    mouseY: 0,\n};\n\nlet pan = {\n    isPanning: false,\n    mouseX: 0,\n    mouseY: 0\n};\n\nconst cubesColors = [\n    [\n        [\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x000000 ],\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x000000 ],\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\n        ]\n    ],\n    [\n        [\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 ],\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000 ],\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\n        ]\n    ],\n    [\n        [\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 ],\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000 ],\n        ],\n        [\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000 ],\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\n        ]\n    ],\n];\n\nconst onMouseDown = event => {\n    pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\n    pointer.y = - (event.clientY / window.innerHeight) * 2 + 1;\n\n    raycaster.setFromCamera(pointer, camera);\n\n    const intersects = raycaster.intersectObjects(cubes, false);\n\n    if (draggable.intersect == null) {\n        draggable.intersect = intersects[0];\n    }\n\n    if (intersects.length > 0) {\n        controls.enabled = false;\n\n        draggable.isDragging = true;\n        draggable.mouseX = event.clientX;\n        draggable.mouseY = event.clientY;\n\n        draggable.cube = intersects[0].object;\n\n        const intersectPoint = new THREE.Vector3(...intersects[0].point.toArray().map(c => +(c.toFixed(3))));\n        const objPos = new THREE.Vector3(...intersects[0].object.position.toArray().map(c => +(c.toFixed(3))));\n\n        if (intersectPoint.z == objPos.z + 1) {\n            draggable.direction = \"front\";\n        }\n        else if (intersectPoint.y == objPos.y + 1) {\n            draggable.direction = \"top\";\n        }\n        else if (intersectPoint.x == objPos.x + 1) {\n            draggable.direction = \"side\";\n        }\n    }\n    else if(!controls.enabled){\n        pan.isPanning = true;\n        pan.mouseX = event.clientX;\n        pan.mouseY = event.clientY;\n    }\n}\n\nconst onMouseUp = () => {\n    draggable.isDragging = false;\n    pan.isPanning = false;\n}\n\nconst onMouseMove = event => {\n    if (draggable.isDragging) {\n        if (event.clientY > draggable.mouseY + 50 || event.clientY < draggable.mouseY - 50) {\n            if (draggable.direction == \"side\") {\n                doRotation(\"z\", Math.sign(event.clientY - draggable.mouseY) * -1, draggable.cube);\n                draggable.isDragging = false;\n            }\n            else if (draggable.direction == \"front\") {\n                doRotation(\"x\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n                draggable.isDragging = false;\n            }\n        }\n        else if ((event.clientX > draggable.mouseX + 20 && event.clientY < draggable.mouseY - 20) ||\n                 (event.clientX < draggable.mouseX - 20 && event.clientY > draggable.mouseY + 20)) {\n            if (draggable.direction == \"top\") {\n                doRotation(\"x\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n                draggable.isDragging = false;\n            }\n            else {\n                doRotation(\"y\", Math.sign(event.clientX - draggable.mouseX), draggable.cube);\n                draggable.isDragging = false;\n            }\n        }\n        else if ((event.clientX < draggable.mouseX - 20 && event.clientY < draggable.mouseY - 20) ||\n                 (event.clientX > draggable.mouseX + 20 && event.clientY > draggable.mouseY + 20)) {\n            if (draggable.direction == \"top\") {\n                doRotation(\"z\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n                draggable.isDragging = false;\n            }\n            else {\n                doRotation(\"y\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n                draggable.isDragging = false;\n            }\n        }\n    }\n    else if(pan.isPanning) {\n        if(event.clientX > pan.mouseX + 20 || event.clientX < pan.mouseX - 20) {\n            for(let i = 0; i < 27; i++) {\n                pivot.attach(cubes[i]);\n            }\n\n            rotateOnAxis(\"y\", Math.sign(event.clientX - pan.mouseX));\n\n            pan.isPanning = false;\n        }\n        else if(event.clientY > pan.mouseY + 20 || event.clientY < pan.mouseY - 20) {\n            for(let i = 0; i < 27; i++) {\n                pivot.attach(cubes[i]);\n            }\n\n            if(event.clientX > window.innerWidth / 2) {\n                rotateOnAxis(\"z\", Math.sign(event.clientY - pan.mouseY) * -1); \n            } \n            else {\n                rotateOnAxis(\"x\", Math.sign(event.clientY - pan.mouseY));\n            }\n\n            pan.isPanning = false;\n        }\n    }\n}\n\nfunction createCubes() {\n    let cubeIndex = 0;\n\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n\n    function getMaterial(colors) {\n        const mat = [];\n        for(let i = 0; i < 6; i++) {\n            mat[i] = new THREE.MeshStandardMaterial({color: colors[i]});\n        }\n        return mat;\n    }\n\n    for (let x = -1; x <= 1; x += 1) {\n        for (let y = -1; y <= 1; y += 1) {\n            for (let z = -1; z <= 1; z += 1) {                \n                const mat = getMaterial(cubesColors[x + 1][y + 1][z + 1]);\n                const cube = new THREE.Mesh(geometry, mat);\n                \n                cube.position.set(x * 2.1, y * 2.1, z * 2.1);\n                cube.userData.index = cubeIndex;\n                cubeIndex++;\n\n                cubes.push(cube);\n                scene.add(cube);\n            }\n        }\n    }\n}\n\nfunction doRotation(axis, direction, cube) {\n    \n    for(let i = 0; i < 27; i++) {\n        if(Math.abs(cubes[i].position[axis] - cube.position[axis]) < 1) {\n            pivot.attach(cubes[i]);\n        }\n    }\n\n    rotateOnAxis(axis, direction);\n}\n\nfunction rotateOnAxis(axis, direction, angle = Math.PI / 2, done = 0) {\n    if (done >= angle) {\n        let len = pivot.children.length;\n        for (let i = 0; i < len; i++) {\n            scene.attach(pivot.children[0]);\n        }\n\n        pivot.rotation.set(0, 0, 0);\n\n        return;\n    }\n\n    done += radStep;\n\n    switch (axis) {\n        case \"x\": { pivot.rotateX(radStep * direction); break; }\n        case \"y\": { pivot.rotateY(radStep * direction); break; }\n        case \"z\": { pivot.rotateZ(radStep * direction); break; }\n    }\n\n    requestAnimationFrame(() => rotateOnAxis(axis, direction, angle, done));\n}\n\nfunction start() {\n    createCubes();\n\n    window.addEventListener(\"pointerdown\", onMouseDown);\n    window.addEventListener(\"pointermove\", onMouseMove);\n    window.addEventListener(\"pointerup\", onMouseUp);\n\n    window.addEventListener( 'resize', function(){\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n    \n        renderer.setSize( window.innerWidth, window.innerHeight );\n        \n    }, false);\n\n    const ambient = new THREE.AmbientLight(0xffffff, 0.69);\n    const front = new THREE.DirectionalLight(0xffffff, 0.36);\n    const back = new THREE.DirectionalLight(0xffffff, 0);\n\n    front.position.set(1.5, 5, 3);\n    back.position.set(-1.5, -5, -3);\n\n    scene.add(ambient, front, back);\n\n    scene.add(pivot);\n\n    animate();\n}\n\nfunction animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n}\n\ndocument.getElementById(\"scramble\").addEventListener(\"click\", async () => {\n    let arr = [\"x\", \"y\", \"z\"];\n    for(let i = 0; i < 15; i++)\n    {\n        let axis = arr[Math.floor(Math.random() * 3)];\n        let direction = Math.round(Math.random()) * 2 - 1;\n        let cube = Math.floor(Math.random() * 27);\n\n        doRotation(axis, direction, cubes[cube]);\n\n        await new Promise(r => setTimeout(r, 500));\n    }\n});\n\nstart();"],"mappings":"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AE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,CACJ,EACD,CACI,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,Q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"},"metadata":{},"sourceType":"module","externalDependencies":[]}