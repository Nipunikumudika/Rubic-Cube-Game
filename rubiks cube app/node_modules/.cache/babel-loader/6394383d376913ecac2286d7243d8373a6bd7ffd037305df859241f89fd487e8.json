{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const orbitControlsRef = useRef();\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n  const nodesSubset3 = useMemo(() => scene.children.slice(18, 21), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitControlsRef,\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1,\n          orbitControls: orbitControlsRef.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset2,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2,\n          orbitControls: orbitControlsRef.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"4RVKLyGkp7OfWXy+N6XefkOQy24=\", false, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation,\n  orbitControls\n}) => {\n  _s2();\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(null);\n  const handlePointerDown = event => {\n    //const currentRotation = orbitControls.getAzimuthalAngle();\n    // console.log(currentRotation);\n    console.log(\"down\");\n    startYRef.current = event.clientY;\n    window.addEventListener(\"pointermove\", handlePointerMove);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    console.log(\"move\");\n    const startY = startYRef.current;\n    if (startY !== null) {\n      deltaY = event.clientY - startY;\n    }\n  };\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    console.log(\"up\");\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n        //console.log(targetRot);\n        // console.log(canvas.current.rotation.z);\n      });\n      DraggingDown();\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n        console.log(cubeRef.current.rotation.z);\n      });\n      DraggingUp();\n      deltaY = 0;\n    }\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 30;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 30;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  useFrame(() => {\n    // Your animation logic here...\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    onPointerDown: handlePointerDown,\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node,\n      ref: ref => cubeRefs.current[index] = {\n        current: ref\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"f3xcM2CaDKd9A6+09Kky1f2FTUQ=\", false, function () {\n  return [useFrame];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useRef","useState","useEffect","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","orbitControlsRef","nodesSubset1","children","slice","nodesSubset2","nodesSubset3","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","ref","enableZoom","fallback","position","RubiksCubeModel","nodesSubset","setRotation","orbitControls","current","_c","_s2","cubeRefs","startYRef","handlePointerDown","event","console","log","clientY","window","addEventListener","handlePointerMove","handlePointerUp","stopPropagation","deltaY","startY","targetRot","removeEventListener","forEach","cubeRef","index","z","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","scale","onPointerDown","map","node","object","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport \"./App.css\";\n\nconst RubiksCube = () => {\n  const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const orbitControlsRef = useRef();\n\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9,18), [scene]); //two layers\n  const nodesSubset3 = useMemo(() => scene.children.slice(18,21), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <OrbitControls ref={orbitControlsRef} enableZoom={false} />\n      <Suspense fallback={null}>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset1}\n            rotation={rotationSubset1}\n            setRotation={setRotationSubset1}\n            orbitControls={orbitControlsRef.current}\n          />\n        </group>\n        <group position={[0, 0, 0]} rotation={rotationSubset2}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset2}\n            rotation={rotationSubset2}\n            setRotation={setRotationSubset2}\n            orbitControls={orbitControlsRef.current}\n          />\n        </group>\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nconst RubiksCubeModel = ({ nodesSubset, rotation, setRotation,orbitControls }) => {\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(null);\n\n  const handlePointerDown = (event) => {\n    //const currentRotation = orbitControls.getAzimuthalAngle();\n    // console.log(currentRotation);\n      console.log(\"down\");\n      startYRef.current = event.clientY;\n      window.addEventListener(\"pointermove\", handlePointerMove);\n      window.addEventListener(\"pointerup\", handlePointerUp);\n      event.stopPropagation();\n    \n  };\n\n  let deltaY;\n\n  const handlePointerMove = (event) => {\n      console.log(\"move\");\n      const startY = startYRef.current;\n      if (startY !== null) {\n        deltaY = event.clientY - startY;\n      }\n    \n  };\n  let targetRot=0;\n  const handlePointerUp =async () => {\n      console.log(\"up\");\n      window.removeEventListener(\"pointermove\", handlePointerMove);\n      window.removeEventListener(\"pointerup\", handlePointerUp);\n      if (deltaY > 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z + (Math.PI / 2);\n          //console.log(targetRot);\n          // console.log(canvas.current.rotation.z);\n        });\n        \n        DraggingDown();\n        deltaY = 0;\n      } else if (deltaY < 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z - (Math.PI / 2);\n          console.log(cubeRef.current.rotation.z);\n        });\n        \n        DraggingUp();\n        deltaY = 0;\n      }\n    \n  };\n\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 30;\n        await new Promise((resolve) => requestAnimationFrame(resolve));\n        await new Promise((resolve) => setTimeout(resolve, 1));\n      }\n    });\n  };\n\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 30;\n        await new Promise((resolve) => requestAnimationFrame(resolve));\n        await new Promise((resolve) => setTimeout(resolve, 1));\n      }\n    });\n  };\n\n  useFrame(() => {\n    // Your animation logic here...\n  });\n  \n  return (\n    <group scale={[0.3, 0.3, 0.3]} onPointerDown={handlePointerDown}>\n      {nodesSubset.map((node, index) => (\n        <primitive\n          key={index}\n          object={node}\n          ref={(ref) => (cubeRefs.current[index] = { current: ref })}\n        />\n      ))}\n    </group>\n  );\n};\n\nexport default RubiksCube;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}