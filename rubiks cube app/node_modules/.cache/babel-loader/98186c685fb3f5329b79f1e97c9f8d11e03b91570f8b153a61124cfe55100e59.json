{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport { Vector2, Raycaster } from \"three\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset,\n  drag,\n  onDragChange\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const orbitRef = useRef();\n  const startYRef = useRef(0);\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const groupRef = useRef();\n  const raycaster = new THREE.Raycaster();\n  const mouse = new THREE.Vector2();\n  const {\n    camera,\n    size\n  } = useThree();\n  let x, y, z;\n  const handlePointerDown = event => {\n    x = orbitRef.current.object.position.x;\n    y = orbitRef.current.object.position.y;\n    z = orbitRef.current.object.position.z;\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObjects(cubeRefs.current.map(ref => ref.current));\n    if (intersects.length > 0) {\n      const actualCoordinates = intersects[0].point;\n      const worldCoordinates = actualCoordinates.clone().applyMatrix4(groupRef.current.matrixWorld);\n\n      // console.log('World Coordinates:', worldCoordinates.y);\n    }\n\n    // console.log(y);\n    // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    startYRef.current = event.clientY;\n    onDragChange(false);\n    window.addEventListener(\"pointermove\", handlePointerMove, {\n      passive: true\n    });\n    window.addEventListener(\"pointerup\", handlePointerUp, {\n      passive: true\n    });\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    const startY = startYRef.current;\n    console.log(startY);\n    if (startY !== null) {\n      const endY = event.clientY;\n      console.log(endY);\n      // if(y>0){\n      //   console.log(\"okokokokoko\");\n      //   deltaY = endY - startY;\n      // }else{\n      //   console.log(\"nononooonoo\");\n      //   deltaY = startY - endY;\n      // }\n      deltaY = endY - startY;\n    }\n  };\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n      });\n      DraggingDown();\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n      });\n      DraggingUp();\n      deltaY = 0;\n    }\n    onDragChange(true);\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  useFrame(() => {\n    orbitRef.current.enabled = drag;\n    orbitRef.current.update();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      classname: \"group\",\n      ref: groupRef,\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[index] = {\n          current: ref\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"xE+AjGVbpijTeXu1am6oEE9vtRw=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","OrbitControls","useFrame","useThree","Vector2","Raycaster","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","drag","onDragChange","_s","cubeRefs","orbitRef","startYRef","initialRotation","Math","PI","groupRef","raycaster","mouse","camera","size","x","y","z","handlePointerDown","event","current","object","position","setFromCamera","intersects","intersectObjects","map","ref","length","actualCoordinates","point","worldCoordinates","clone","applyMatrix4","matrixWorld","clientY","window","addEventListener","handlePointerMove","passive","handlePointerUp","stopPropagation","deltaY","startY","console","log","endY","targetRot","removeEventListener","forEach","cubeRef","rotation","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","enabled","update","children","classname","scale","onPointerDown","node","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useFrame,useThree } from \"react-three-fiber\";\r\nimport { Vector2, Raycaster } from \"three\";\r\nimport * as THREE from 'three';\r\n\r\nconst RubiksCubeModel = ({ nodesSubset, drag, onDragChange }) => {\r\n  const cubeRefs = useRef([]);\r\n  const orbitRef = useRef();\r\n  const startYRef = useRef(0);\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const groupRef = useRef();\r\n  const raycaster = new THREE.Raycaster();\r\n  const mouse = new THREE.Vector2();\r\n  const { camera, size } = useThree();\r\nlet x,y,z;\r\n  const handlePointerDown = (event) => {\r\n   x= orbitRef.current.object.position.x\r\n   y= orbitRef.current.object.position.y\r\n   z= orbitRef.current.object.position.z\r\n\r\n   raycaster.setFromCamera(mouse, camera);\r\n\r\n  const intersects = raycaster.intersectObjects(cubeRefs.current.map(ref => ref.current));\r\n\r\n  if (intersects.length > 0) {\r\n    const actualCoordinates = intersects[0].point;\r\n\r\n    const worldCoordinates = actualCoordinates.clone().applyMatrix4(groupRef.current.matrixWorld);\r\n\r\n    // console.log('World Coordinates:', worldCoordinates.y);\r\n\r\n  }\r\n\r\n\r\n// console.log(y);\r\n    // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    startYRef.current = event.clientY;\r\n    onDragChange(false);\r\n    window.addEventListener(\"pointermove\", handlePointerMove, { passive: true });\r\n    window.addEventListener(\"pointerup\", handlePointerUp, { passive: true });\r\n    event.stopPropagation();\r\n  };\r\n\r\n  let deltaY;\r\n\r\n  const handlePointerMove = (event) => {\r\n\r\n    const startY = startYRef.current;\r\n    console.log(startY );\r\n    if (startY !== null) {\r\n      const endY = event.clientY\r\n      console.log(endY );\r\n      // if(y>0){\r\n      //   console.log(\"okokokokoko\");\r\n      //   deltaY = endY - startY;\r\n      // }else{\r\n      //   console.log(\"nononooonoo\");\r\n      //   deltaY = startY - endY;\r\n      // }\r\n      deltaY = endY - startY;\r\n    }\r\n  };\r\n\r\n  let targetRot = 0;\r\n\r\n  const handlePointerUp = async () => {\r\n    window.removeEventListener(\"pointermove\", handlePointerMove);\r\n    window.removeEventListener(\"pointerup\", handlePointerUp);\r\n    if (deltaY > 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n      });\r\n      DraggingDown();\r\n      deltaY = 0;\r\n    } else if (deltaY < 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n      });\r\n      DraggingUp();\r\n      deltaY = 0;\r\n    }\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingDown = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z += Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingUp = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z -= Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  useFrame(() => {\r\n    orbitRef.current.enabled = drag;\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group classname=\"group\"\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group>\r\n      <OrbitControls ref={orbitRef}  />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}