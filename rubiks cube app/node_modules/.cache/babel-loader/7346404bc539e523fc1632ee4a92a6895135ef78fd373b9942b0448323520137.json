{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\LargerCube.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LargeCube() {\n  _s();\n  const ref = useRef();\n  const [hoveredFace, setHoveredFace] = useState(null);\n  const [clicked, setClicked] = useState(false);\n  useFrame((state, delta) => ref.current.rotation.x += delta);\n  useImperativeHandle(fref, () => ref.current, []);\n  const handleClick = (event, faceIndex) => {\n    event.stopPropagation();\n    setClicked(!clicked);\n    // Perform actions based on the clicked face (faceIndex)\n    console.log(`Clicked on face ${faceIndex}: ${children[faceIndex].props.children}`);\n  };\n  const handlePointerMove = (event, faceIndex) => {\n    event.stopPropagation();\n    setHoveredFace(faceIndex);\n  };\n  const handlePointerOut = () => {\n    setHoveredFace(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ...props,\n    ref: ref,\n    scale: clicked ? 1.5 : 1,\n    onClick: event => handleClick(event, hoveredFace),\n    onPointerMove: event => handlePointerMove(event, hoveredFace),\n    onPointerOut: handlePointerOut,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), React.Children.map(children, (child, index) => /*#__PURE__*/_jsxDEV(context.Provider, {\n      value: hoveredFace === index,\n      children: child\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(LargeCube, \"uWfngLH5Qu3MCBz2Ai9lewN2ZZ8=\", false, function () {\n  return [useFrame];\n});\n_c = LargeCube;\nexport default LargeCube;\nvar _c;\n$RefreshReg$(_c, \"LargeCube\");","map":{"version":3,"names":["useRef","useFrame","THREE","jsxDEV","_jsxDEV","LargeCube","_s","ref","hoveredFace","setHoveredFace","useState","clicked","setClicked","state","delta","current","rotation","x","useImperativeHandle","fref","handleClick","event","faceIndex","stopPropagation","console","log","children","props","handlePointerMove","handlePointerOut","scale","onClick","onPointerMove","onPointerOut","fileName","_jsxFileName","lineNumber","columnNumber","React","Children","map","child","index","context","Provider","value","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/LargerCube.js"],"sourcesContent":["import { useRef } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport * as THREE from 'three';\r\n\r\nfunction LargeCube() {\r\n    const ref = useRef();\r\n  const [hoveredFace, setHoveredFace] = useState(null);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  useFrame((state, delta) => (ref.current.rotation.x += delta));\r\n\r\n  useImperativeHandle(fref, () => ref.current, []);\r\n\r\n  const handleClick = (event, faceIndex) => {\r\n    event.stopPropagation();\r\n    setClicked(!clicked);\r\n    // Perform actions based on the clicked face (faceIndex)\r\n    console.log(`Clicked on face ${faceIndex}: ${children[faceIndex].props.children}`);\r\n  };\r\n\r\n  const handlePointerMove = (event, faceIndex) => {\r\n    event.stopPropagation();\r\n    setHoveredFace(faceIndex);\r\n  };\r\n\r\n  const handlePointerOut = () => {\r\n    setHoveredFace(null);\r\n  };\r\n    return (\r\n        <mesh\r\n      {...props}\r\n      ref={ref}\r\n      scale={clicked ? 1.5 : 1}\r\n      onClick={(event) => handleClick(event, hoveredFace)}\r\n      onPointerMove={(event) => handlePointerMove(event, hoveredFace)}\r\n      onPointerOut={handlePointerOut}\r\n    >\r\n      <boxGeometry />\r\n      {React.Children.map(children, (child, index) => (\r\n        <context.Provider key={index} value={hoveredFace === index}>\r\n          {child}\r\n        </context.Provider>\r\n      ))}\r\n    </mesh>\r\n      );\r\n}\r\nexport default LargeCube;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC;EACtB,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAE7CT,QAAQ,CAAC,CAACY,KAAK,EAAEC,KAAK,KAAMP,GAAG,CAACQ,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAIH,KAAM,CAAC;EAE7DI,mBAAmB,CAACC,IAAI,EAAE,MAAMZ,GAAG,CAACQ,OAAO,EAAE,EAAE,CAAC;EAEhD,MAAMK,WAAW,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACxCD,KAAK,CAACE,eAAe,CAAC,CAAC;IACvBX,UAAU,CAAC,CAACD,OAAO,CAAC;IACpB;IACAa,OAAO,CAACC,GAAG,CAAE,mBAAkBH,SAAU,KAAII,QAAQ,CAACJ,SAAS,CAAC,CAACK,KAAK,CAACD,QAAS,EAAC,CAAC;EACpF,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAACP,KAAK,EAAEC,SAAS,KAAK;IAC9CD,KAAK,CAACE,eAAe,CAAC,CAAC;IACvBd,cAAc,CAACa,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACC,oBACIL,OAAA;IAAA,GACEuB,KAAK;IACTpB,GAAG,EAAEA,GAAI;IACTuB,KAAK,EAAEnB,OAAO,GAAG,GAAG,GAAG,CAAE;IACzBoB,OAAO,EAAGV,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEb,WAAW,CAAE;IACpDwB,aAAa,EAAGX,KAAK,IAAKO,iBAAiB,CAACP,KAAK,EAAEb,WAAW,CAAE;IAChEyB,YAAY,EAAEJ,gBAAiB;IAAAH,QAAA,gBAE/BtB,OAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,EACdC,KAAK,CAACC,QAAQ,CAACC,GAAG,CAACd,QAAQ,EAAE,CAACe,KAAK,EAAEC,KAAK,kBACzCtC,OAAA,CAACuC,OAAO,CAACC,QAAQ;MAAaC,KAAK,EAAErC,WAAW,KAAKkC,KAAM;MAAAhB,QAAA,EACxDe;IAAK,GADeC,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAAC/B,EAAA,CAzCQD,SAAS;EAAA,QAKhBJ,QAAQ;AAAA;AAAA6C,EAAA,GALDzC,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}