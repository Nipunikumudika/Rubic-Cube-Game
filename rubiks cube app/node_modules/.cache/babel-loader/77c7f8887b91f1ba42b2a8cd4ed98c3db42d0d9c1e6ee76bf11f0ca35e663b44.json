{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = RubiksCube;\nconst RubiksCubeModel = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  console.log(scene.children[1]);\n  scene.scale.set(0.1, 0.1, 0.1);\n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n\n  // Assuming the cubes are organized in layers (3x3x3 cubes per layer)\n  const layers = [];\n  let currentIndex = 0;\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      for (let k = 0; k < 3; k++) {\n        const cube = scene.children[currentIndex];\n        if (!layers[i]) {\n          layers[i] = [];\n        }\n        if (!layers[i][j]) {\n          layers[i][j] = [];\n        }\n        layers[i][j][k] = cube;\n        currentIndex++;\n      }\n    }\n  }\n\n  // Rotate only the second layer (adjust as needed)\n  layers[1].forEach(row => {\n    row.forEach(cube => {\n      cube.rotation.y += 0.01; // Adjust rotation speed as needed\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: layers.map((row, i) => row.map((col, j) => col.map((cube, k) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: cube\n    }, `${i}-${j}-${k}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 82\n    }, this))))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_s(RubiksCubeModel, \"KrIghLvv3RhOhm/RzUg6KZbU0T0=\", false, function () {\n  return [useLoader];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","Canvas","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","children","fileName","_jsxFileName","lineNumber","columnNumber","enableZoom","fallback","RubiksCubeModel","position","_c","_s","scene","console","log","scale","set","rotation","Math","PI","layers","currentIndex","i","j","k","cube","forEach","row","y","map","col","object","_c2","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\nconst RubiksCube = () => {\n  return (\n    <Canvas>\n      <ambientLight />\n      <OrbitControls enableZoom={false} />\n      <Suspense fallback={null}>\n        <RubiksCubeModel />\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nconst RubiksCubeModel = () => {\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  console.log(scene.children[1]);\n  scene.scale.set(0.1, 0.1, 0.1);\n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n\n  // Assuming the cubes are organized in layers (3x3x3 cubes per layer)\n  const layers = [];\n  let currentIndex = 0;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      for (let k = 0; k < 3; k++) {\n        const cube = scene.children[currentIndex];\n        if (!layers[i]) {\n          layers[i] = [];\n        }\n        if (!layers[i][j]) {\n          layers[i][j] = [];\n        }\n        layers[i][j][k] = cube;\n        currentIndex++;\n      }\n    }\n  }\n\n  // Rotate only the second layer (adjust as needed)\n  layers[1].forEach(row => {\n    row.forEach(cube => {\n      cube.rotation.y += 0.01; // Adjust rotation speed as needed\n    });\n  });\n\n  return <group>{layers.map((row, i) => row.map((col, j) => col.map((cube, k) => <primitive key={`${i}-${j}-${k}`} object={cube} />)))}</group>;\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}