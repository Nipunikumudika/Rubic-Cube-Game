{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect, useState } from \"react\";\n// // import { OrbitControls } from \"@react-three/drei\";\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// import { Canvas, useThree } from \"react-three-fiber\";\n// import * as THREE from \"three\";\n\n// const RubiksCubeModel = ({ nodesSubset }) => {\n//   const cubeRefs = useRef([]);\n//   const startYRef = useRef(0);\n//   const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n//   const groupRef = useRef();\n\n//   let controls;\n\n//   const CameraController = () => {\n//     const { camera, gl } = useThree();\n//     const [enableRotate, setEnableRotate] = useState(true);\n\n//     useEffect(\n//       () => {\n//         controls = new OrbitControls(camera, gl.domElement);\n\n//         controls.minDistance = 3;\n//         controls.maxDistance = 20;\n//         return () => {\n//           controls.dispose();\n//         };\n//       },\n//       [camera, gl,enableRotate]\n//     );\n//     return null;\n//   };\n\n//   const handlePointerDown = (event) => {\n//     controls.enableRotate = false;\n//     console.log(\"down\");\n//     startYRef.current = event.clientY;\n//     if (event.target.tagName === \"CANVAS\") {\n//       console.log(\"outside true\");\n//     } else {\n//       console.log(\"inside false\");\n//     }\n\n//     window.addEventListener(\"pointermove\", handlePointerMove);\n//     window.addEventListener(\"pointerup\", handlePointerUp);\n//     event.stopPropagation();\n//   };\n\n//   let deltaY;\n\n//   const handlePointerMove = (event) => {\n//     console.log(\"move\");\n//     const startY = startYRef.current;\n//     if (startY !== null) {\n//       deltaY = event.clientY - startY;\n//     }\n//   };\n\n//   let targetRot = 0;\n\n//   const handlePointerUp = async () => {\n//     console.log(\"up\");\n//     window.removeEventListener(\"pointermove\", handlePointerMove);\n//     window.removeEventListener(\"pointerup\", handlePointerUp);\n//     if (deltaY > 0) {\n//       cubeRefs.current.forEach((cubeRef, index) => {\n//         targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n//       });\n\n//       DraggingDown();\n//       deltaY = 0;\n//     } else if (deltaY < 0) {\n//       cubeRefs.current.forEach((cubeRef, index) => {\n//         targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n//         console.log(cubeRef.current.rotation.z);\n//       });\n\n//       DraggingUp();\n//       deltaY = 0;\n//     }\n//   };\n\n//   const DraggingDown = async () => {\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n//         cubeRef.current.rotation.z += Math.PI / 10;\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\n//         await new Promise((resolve) => setTimeout(resolve, 1));\n//       }\n//     });\n//   };\n\n//   const DraggingUp = async () => {\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n//         cubeRef.current.rotation.z -= Math.PI / 10;\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\n//         await new Promise((resolve) => setTimeout(resolve, 1));\n//       }\n//     });\n//   };\n\n//   return (\n//     <>\n//       <group\n//         ref={groupRef}\n//         scale={[0.3, 0.3, 0.3]}\n//         rotation={initialRotation}\n//         onPointerDown={handlePointerDown}\n//       >\n//         {nodesSubset.map((node, index) => (\n//           <primitive\n//             key={index}\n//             object={node}\n//             ref={(ref) => (cubeRefs.current[index] = { current: ref })}\n//           />\n//         ))}\n//       </group>\n//       <CameraController />\n//     </>\n//   );\n// };\n\n// export default RubiksCubeModel;\n\nimport { useState, useEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraController = () => {\n  _s();\n  const {\n    camera,\n    gl\n  } = useThree();\n  const [enableRotate, setEnableRotate] = useState(true);\n  useEffect(() => {\n    const controls = new OrbitControls(camera, gl.domElement);\n    controls.minDistance = 3;\n    controls.maxDistance = 20;\n    controls.enableRotate = enableRotate;\n    return () => {\n      controls.dispose();\n    };\n  }, [camera, gl, enableRotate]);\n  const handleToggleRotate = () => {\n    setEnableRotate(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleRotate,\n      children: enableRotate ? 'Disable Rotation' : 'Enable Rotation'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CameraController, \"qy1u1Ny5mtmM0cQPXubBgbaTpm8=\", false, function () {\n  return [useThree];\n});\n_c = CameraController;\nexport default CameraController;\nvar _c;\n$RefreshReg$(_c, \"CameraController\");","map":{"version":3,"names":["useState","useEffect","useThree","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraController","_s","camera","gl","enableRotate","setEnableRotate","controls","domElement","minDistance","maxDistance","dispose","handleToggleRotate","prev","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["// import React, { useRef, useEffect, useState } from \"react\";\r\n// // import { OrbitControls } from \"@react-three/drei\";\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n// import { Canvas, useThree } from \"react-three-fiber\";\r\n// import * as THREE from \"three\";\r\n\r\n// const RubiksCubeModel = ({ nodesSubset }) => {\r\n//   const cubeRefs = useRef([]);\r\n//   const startYRef = useRef(0);\r\n//   const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n//   const groupRef = useRef();\r\n\r\n//   let controls;\r\n\r\n//   const CameraController = () => {\r\n//     const { camera, gl } = useThree();\r\n//     const [enableRotate, setEnableRotate] = useState(true);\r\n\r\n//     useEffect(\r\n//       () => {\r\n//         controls = new OrbitControls(camera, gl.domElement);\r\n  \r\n//         controls.minDistance = 3;\r\n//         controls.maxDistance = 20;\r\n//         return () => {\r\n//           controls.dispose();\r\n//         };\r\n//       },\r\n//       [camera, gl,enableRotate]\r\n//     );\r\n//     return null;\r\n//   };\r\n\r\n//   const handlePointerDown = (event) => {\r\n//     controls.enableRotate = false;\r\n//     console.log(\"down\");\r\n//     startYRef.current = event.clientY;\r\n//     if (event.target.tagName === \"CANVAS\") {\r\n//       console.log(\"outside true\");\r\n//     } else {\r\n//       console.log(\"inside false\");\r\n//     }\r\n\r\n//     window.addEventListener(\"pointermove\", handlePointerMove);\r\n//     window.addEventListener(\"pointerup\", handlePointerUp);\r\n//     event.stopPropagation();\r\n//   };\r\n\r\n//   let deltaY;\r\n\r\n//   const handlePointerMove = (event) => {\r\n//     console.log(\"move\");\r\n//     const startY = startYRef.current;\r\n//     if (startY !== null) {\r\n//       deltaY = event.clientY - startY;\r\n//     }\r\n//   };\r\n\r\n//   let targetRot = 0;\r\n\r\n//   const handlePointerUp = async () => {\r\n//     console.log(\"up\");\r\n//     window.removeEventListener(\"pointermove\", handlePointerMove);\r\n//     window.removeEventListener(\"pointerup\", handlePointerUp);\r\n//     if (deltaY > 0) {\r\n//       cubeRefs.current.forEach((cubeRef, index) => {\r\n//         targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n//       });\r\n\r\n//       DraggingDown();\r\n//       deltaY = 0;\r\n//     } else if (deltaY < 0) {\r\n//       cubeRefs.current.forEach((cubeRef, index) => {\r\n//         targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n//         console.log(cubeRef.current.rotation.z);\r\n//       });\r\n\r\n//       DraggingUp();\r\n//       deltaY = 0;\r\n//     }\r\n//   };\r\n\r\n//   const DraggingDown = async () => {\r\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\r\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n//         cubeRef.current.rotation.z += Math.PI / 10;\r\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\r\n//         await new Promise((resolve) => setTimeout(resolve, 1));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   const DraggingUp = async () => {\r\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\r\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n//         cubeRef.current.rotation.z -= Math.PI / 10;\r\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\r\n//         await new Promise((resolve) => setTimeout(resolve, 1));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <group\r\n//         ref={groupRef}\r\n//         scale={[0.3, 0.3, 0.3]}\r\n//         rotation={initialRotation}\r\n//         onPointerDown={handlePointerDown}\r\n//       >\r\n//         {nodesSubset.map((node, index) => (\r\n//           <primitive\r\n//             key={index}\r\n//             object={node}\r\n//             ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n//           />\r\n//         ))}\r\n//       </group>\r\n//       <CameraController />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default RubiksCubeModel;\r\n\r\n\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useThree } from 'react-three-fiber';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst CameraController = () => {\r\n  const { camera, gl } = useThree();\r\n  const [enableRotate, setEnableRotate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const controls = new OrbitControls(camera, gl.domElement);\r\n\r\n    controls.minDistance = 3;\r\n    controls.maxDistance = 20;\r\n    controls.enableRotate = enableRotate;\r\n\r\n    return () => {\r\n      controls.dispose();\r\n    };\r\n  }, [camera, gl, enableRotate]);\r\n\r\n  const handleToggleRotate = () => {\r\n    setEnableRotate((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleToggleRotate}>\r\n        {enableRotate ? 'Disable Rotation' : 'Enable Rotation'}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CameraController;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,aAAa,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1E,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC,MAAM;IAAEC;EAAG,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACjC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,IAAIX,aAAa,CAACO,MAAM,EAAEC,EAAE,CAACI,UAAU,CAAC;IAEzDD,QAAQ,CAACE,WAAW,GAAG,CAAC;IACxBF,QAAQ,CAACG,WAAW,GAAG,EAAE;IACzBH,QAAQ,CAACF,YAAY,GAAGA,YAAY;IAEpC,OAAO,MAAM;MACXE,QAAQ,CAACI,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACR,MAAM,EAAEC,EAAE,EAAEC,YAAY,CAAC,CAAC;EAE9B,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/BN,eAAe,CAAEO,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAQiB,OAAO,EAAEH,kBAAmB;MAAAE,QAAA,EACjCT,YAAY,GAAG,kBAAkB,GAAG;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC,gBACT,CAAC;AAEP,CAAC;AAACjB,EAAA,CA3BID,gBAAgB;EAAA,QACGN,QAAQ;AAAA;AAAAyB,EAAA,GAD3BnB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}