{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { useDrag } from 'react-use-gesture';\nimport { Html } from 'drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingObject = () => {\n  _s();\n  const meshRef = useRef();\n  const bind = useDrag(({\n    offset: [x, y]\n  }) => {\n    // Calculate the rotation based on mouse drag\n    const rotationFactor = 0.005;\n    const rotationY = x * rotationFactor;\n    const rotationX = y * rotationFactor;\n\n    // Apply the rotation to the mesh\n    meshRef.current.rotation.x += rotationX;\n    meshRef.current.rotation.y += rotationY;\n  });\n  useFrame(() => {\n    // Optionally, you can update the object's state or perform other animations here\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    ...bind(),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Html, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '10px',\n          left: '10px'\n        },\n        children: \"Drag outside the object to rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingObject, \"nD9WT7KyZmqd6u/RvLS5D+OdZis=\", false, function () {\n  return [useDrag, useFrame];\n});\n_c = RotatingObject;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RotatingObject, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatingObject\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","useDrag","Html","jsxDEV","_jsxDEV","RotatingObject","_s","meshRef","bind","offset","x","y","rotationFactor","rotationY","rotationX","current","rotation","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","style","position","top","left","_c","App","camera","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n \n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\n\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { useDrag } from 'react-use-gesture';\nimport { Html } from 'drei';\n\nconst RotatingObject = () => {\n  const meshRef = useRef();\n\n  const bind = useDrag(({ offset: [x, y] }) => {\n    // Calculate the rotation based on mouse drag\n    const rotationFactor = 0.005;\n    const rotationY = x * rotationFactor;\n    const rotationX = y * rotationFactor;\n\n    // Apply the rotation to the mesh\n    meshRef.current.rotation.x += rotationX;\n    meshRef.current.rotation.y += rotationY;\n  });\n\n  useFrame(() => {\n    // Optionally, you can update the object's state or perform other animations here\n  });\n\n  return (\n    <mesh ref={meshRef} {...bind()}>\n      {/* Your 3D object geometry and material go here */}\n      <boxGeometry args={[1, 1, 1]} />\n      <meshBasicMaterial color=\"blue\" />\n      <Html>\n        <div style={{ position: 'absolute', top: '10px', left: '10px' }}>\n          Drag outside the object to rotate\n        </div>\n      </Html>\n    </mesh>\n  );\n};\n\nconst App = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 5] }}>\n      <ambientLight />\n      <RotatingObject />\n    </Canvas>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AACpD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,MAAM,CAAC,CAAC;EAExB,MAAMU,IAAI,GAAGP,OAAO,CAAC,CAAC;IAAEQ,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC;EAAE,CAAC,KAAK;IAC3C;IACA,MAAMC,cAAc,GAAG,KAAK;IAC5B,MAAMC,SAAS,GAAGH,CAAC,GAAGE,cAAc;IACpC,MAAME,SAAS,GAAGH,CAAC,GAAGC,cAAc;;IAEpC;IACAL,OAAO,CAACQ,OAAO,CAACC,QAAQ,CAACN,CAAC,IAAII,SAAS;IACvCP,OAAO,CAACQ,OAAO,CAACC,QAAQ,CAACL,CAAC,IAAIE,SAAS;EACzC,CAAC,CAAC;EAEFb,QAAQ,CAAC,MAAM;IACb;EAAA,CACD,CAAC;EAEF,oBACEI,OAAA;IAAMa,GAAG,EAAEV,OAAQ;IAAA,GAAKC,IAAI,CAAC,CAAC;IAAAU,QAAA,gBAE5Bd,OAAA;MAAae,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCnB,OAAA;MAAmBoB,KAAK,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCnB,OAAA,CAACF,IAAI;MAAAgB,QAAA,eACHd,OAAA;QAAKqB,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAO,CAAE;QAAAV,QAAA,EAAC;MAEjE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACjB,EAAA,CA9BID,cAAc;EAAA,QAGLJ,OAAO,EAWpBD,QAAQ;AAAA;AAAA6B,EAAA,GAdJxB,cAAc;AAgCpB,MAAMyB,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACE1B,OAAA,CAACL,MAAM;IAACgC,MAAM,EAAE;MAAEL,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAE;IAAAR,QAAA,gBACtCd,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAChBnB,OAAA,CAACC,cAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEb,CAAC;AAACS,GAAA,GAPIF,GAAG;AAST,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}