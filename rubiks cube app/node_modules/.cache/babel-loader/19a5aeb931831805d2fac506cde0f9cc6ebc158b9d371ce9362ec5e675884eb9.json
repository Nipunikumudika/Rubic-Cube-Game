{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\LargerCube.js\";\nimport React from \"react\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textures = [\n// Replace these arrays with your own 2D texture data\n[[1, 1], [0, 0]], [[0, 1], [1, 0]], [[1, 0], [0, 1]], [[0, 0], [1, 1]], [[1, 1], [1, 0]], [[0, 1], [0, 0]]];\nfunction TexturedCube() {\n  const materials = textures.map(texture => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = texture[0].length;\n    canvas.height = texture.length;\n    texture.forEach((row, rowIndex) => {\n      row.forEach((pixel, colIndex) => {\n        context.fillStyle = pixel ? '#00FF00' : '#000000';\n        context.fillRect(colIndex, rowIndex, 1, 1);\n      });\n    });\n    const textureMap = new THREE.CanvasTexture(canvas);\n    return new THREE.MeshBasicMaterial({\n      map: textureMap\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      attach: \"geometry\",\n      args: [1.82, 1.82, 1.82]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), materials.map((material, index) => /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      attachArray: \"material\",\n      ...material\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = TexturedCube;\nexport default TexturedCube;\nvar _c;\n$RefreshReg$(_c, \"TexturedCube\");","map":{"version":3,"names":["React","THREE","jsxDEV","_jsxDEV","textures","TexturedCube","materials","map","texture","canvas","document","createElement","context","getContext","width","length","height","forEach","row","rowIndex","pixel","colIndex","fillStyle","fillRect","textureMap","CanvasTexture","MeshBasicMaterial","children","attach","args","fileName","_jsxFileName","lineNumber","columnNumber","material","index","attachArray","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/LargerCube.js"],"sourcesContent":["import React from \"react\";\r\nimport * as THREE from 'three';\r\n\r\nconst textures = [\r\n  // Replace these arrays with your own 2D texture data\r\n  [[1, 1], [0, 0]],\r\n  [[0, 1], [1, 0]],\r\n  [[1, 0], [0, 1]],\r\n  [[0, 0], [1, 1]],\r\n  [[1, 1], [1, 0]],\r\n  [[0, 1], [0, 0]],\r\n];\r\n\r\nfunction TexturedCube() {\r\n  const materials = textures.map((texture) => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    canvas.width = texture[0].length;\r\n    canvas.height = texture.length;\r\n\r\n    texture.forEach((row, rowIndex) => {\r\n      row.forEach((pixel, colIndex) => {\r\n        context.fillStyle = pixel ? '#00FF00' : '#000000';\r\n        context.fillRect(colIndex, rowIndex, 1, 1);\r\n      });\r\n    });\r\n\r\n    const textureMap = new THREE.CanvasTexture(canvas);\r\n    return new THREE.MeshBasicMaterial({ map: textureMap });\r\n  });\r\n\r\n  return (\r\n    <mesh>\r\n      <boxGeometry attach=\"geometry\" args={[1.82, 1.82, 1.82]} />\r\n      {materials.map((material, index) => (\r\n        <meshBasicMaterial attachArray=\"material\" key={index} {...material}/>\r\n      ))}\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default TexturedCube;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAG;AACf;AACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACjB;AAED,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;IAC1C,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACvCJ,MAAM,CAACK,KAAK,GAAGN,OAAO,CAAC,CAAC,CAAC,CAACO,MAAM;IAChCN,MAAM,CAACO,MAAM,GAAGR,OAAO,CAACO,MAAM;IAE9BP,OAAO,CAACS,OAAO,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;MACjCD,GAAG,CAACD,OAAO,CAAC,CAACG,KAAK,EAAEC,QAAQ,KAAK;QAC/BT,OAAO,CAACU,SAAS,GAAGF,KAAK,GAAG,SAAS,GAAG,SAAS;QACjDR,OAAO,CAACW,QAAQ,CAACF,QAAQ,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMK,UAAU,GAAG,IAAIvB,KAAK,CAACwB,aAAa,CAAChB,MAAM,CAAC;IAClD,OAAO,IAAIR,KAAK,CAACyB,iBAAiB,CAAC;MAAEnB,GAAG,EAAEiB;IAAW,CAAC,CAAC;EACzD,CAAC,CAAC;EAEF,oBACErB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAayB,MAAM,EAAC,UAAU;MAACC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1D3B,SAAS,CAACC,GAAG,CAAC,CAAC2B,QAAQ,EAAEC,KAAK,kBAC7BhC,OAAA;MAAmBiC,WAAW,EAAC,UAAU;MAAA,GAAiBF;IAAQ,GAAnBC,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAACI,EAAA,GA1BQhC,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}