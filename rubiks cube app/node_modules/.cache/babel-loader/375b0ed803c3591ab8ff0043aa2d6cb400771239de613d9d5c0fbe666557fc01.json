{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\LargerCube.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LargeCube() {\n  _s();\n  const groupRef = React.useRef();\n  useFrame(() => {\n    // You can add animation or updates here if needed\n  });\n  const numCubes = 10; // Adjust this value as needed\n  const cubeSize = 1.8;\n  const spacing = 2; // Adjust the spacing between cubes as needed\n\n  const cubes = [];\n  for (let i = 0; i < numCubes; i++) {\n    for (let j = 0; j < numCubes; j++) {\n      for (let k = 0; k < numCubes; k++) {\n        const key = i * numCubes * numCubes + j * numCubes + k;\n        const position = [i * spacing - numCubes / 2 * spacing, j * spacing - numCubes / 2 * spacing, k * spacing - numCubes / 2 * spacing];\n        cubes.push( /*#__PURE__*/_jsxDEV(\"mesh\", {\n          position: position,\n          children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n            attach: \"geometry\",\n            args: [cubeSize, cubeSize, cubeSize]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n            attach: \"material\",\n            color: \"#6be092\",\n            wireframe: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: cubes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(LargeCube, \"6IJMYK8+MXZFwT7izzQ7Jqot7FY=\", false, function () {\n  return [useFrame];\n});\n_c = LargeCube;\nexport default LargeCube;\nvar _c;\n$RefreshReg$(_c, \"LargeCube\");","map":{"version":3,"names":["React","useFrame","THREE","jsxDEV","_jsxDEV","LargeCube","_s","groupRef","useRef","numCubes","cubeSize","spacing","cubes","i","j","k","key","position","push","children","attach","args","fileName","_jsxFileName","lineNumber","columnNumber","color","wireframe","ref","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/LargerCube.js"],"sourcesContent":["import React from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport * as THREE from 'three';\r\n\r\nfunction LargeCube() {\r\n  const groupRef = React.useRef();\r\n\r\n  useFrame(() => {\r\n    // You can add animation or updates here if needed\r\n  });\r\n\r\n  const numCubes = 10; // Adjust this value as needed\r\n  const cubeSize = 1.8;\r\n  const spacing = 2; // Adjust the spacing between cubes as needed\r\n\r\n  const cubes = [];\r\n\r\n  for (let i = 0; i < numCubes; i++) {\r\n    for (let j = 0; j < numCubes; j++) {\r\n      for (let k = 0; k < numCubes; k++) {\r\n        const key = i * numCubes * numCubes + j * numCubes + k;\r\n        const position = [\r\n          i * spacing - (numCubes / 2) * spacing,\r\n          j * spacing - (numCubes / 2) * spacing,\r\n          k * spacing - (numCubes / 2) * spacing,\r\n        ];\r\n\r\n        cubes.push(\r\n          <mesh key={key} position={position}>\r\n            <boxGeometry attach=\"geometry\" args={[cubeSize, cubeSize, cubeSize]} />\r\n            <meshStandardMaterial attach=\"material\" color=\"#6be092\" wireframe={true} />\r\n          </mesh>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return <group ref={groupRef}>{cubes}</group>;\r\n}\r\n\r\nexport default LargeCube;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAM,CAAC,CAAC;EAE/BP,QAAQ,CAAC,MAAM;IACb;EAAA,CACD,CAAC;EAEF,MAAMQ,QAAQ,GAAG,EAAE,CAAC,CAAC;EACrB,MAAMC,QAAQ,GAAG,GAAG;EACpB,MAAMC,OAAO,GAAG,CAAC,CAAC,CAAC;;EAEnB,MAAMC,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,EAAEK,CAAC,EAAE,EAAE;MACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,EAAEM,CAAC,EAAE,EAAE;QACjC,MAAMC,GAAG,GAAGH,CAAC,GAAGJ,QAAQ,GAAGA,QAAQ,GAAGK,CAAC,GAAGL,QAAQ,GAAGM,CAAC;QACtD,MAAME,QAAQ,GAAG,CACfJ,CAAC,GAAGF,OAAO,GAAIF,QAAQ,GAAG,CAAC,GAAIE,OAAO,EACtCG,CAAC,GAAGH,OAAO,GAAIF,QAAQ,GAAG,CAAC,GAAIE,OAAO,EACtCI,CAAC,GAAGJ,OAAO,GAAIF,QAAQ,GAAG,CAAC,GAAIE,OAAO,CACvC;QAEDC,KAAK,CAACM,IAAI,eACRd,OAAA;UAAgBa,QAAQ,EAAEA,QAAS;UAAAE,QAAA,gBACjCf,OAAA;YAAagB,MAAM,EAAC,UAAU;YAACC,IAAI,EAAE,CAACX,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvErB,OAAA;YAAsBgB,MAAM,EAAC,UAAU;YAACM,KAAK,EAAC,SAAS;YAACC,SAAS,EAAE;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAFlET,GAAG;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACR,CAAC;MACH;IACF;EACF;EAEA,oBAAOrB,OAAA;IAAOwB,GAAG,EAAErB,QAAS;IAAAY,QAAA,EAAEP;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC9C;AAACnB,EAAA,CAlCQD,SAAS;EAAA,QAGhBJ,QAAQ;AAAA;AAAA4B,EAAA,GAHDxB,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}