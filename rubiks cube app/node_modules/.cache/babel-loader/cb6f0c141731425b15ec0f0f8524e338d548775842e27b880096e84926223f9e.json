{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { Suspense, useMemo, useState } from \"react\";\n// import { Canvas } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n// import \"./App.css\";\n// import { useLoader } from \"react-three-fiber\";\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\n// import * as THREE from 'three';\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n//   const [drag, setDrag] = useState(true);\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\n//   const generateNodesSubset = useMemo(() => {\n//     const subsets = [];\n\n//     for (let i = 0; i <= 26; i++) {\n//       subsets.push(scene.children.slice(i, i + 1));\n//     }\n//     return subsets;\n//   }, [scene]);\n\n//   const handleDragChange = (newDrag) => {\n//     setDrag(newDrag);\n//   };\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         {generateNodesSubset.map((nodesSubset, index) => (\n//           <RubiksCubeModel\n//             index={index}\n//             key={index}\n//             nodesSubset={nodesSubset}\n//             drag={drag}\n//             onDragChange={handleDragChange}\n//             mouseDownPlane={handleMouseDown}\n//             mouseUpPlane={handleMouseUp}\n//             mouseDownCube={handleMouseDownCube}\n//             set={set}\n//             xyzdirection={xyzdirection}\n//             direction={direction}\n//           />\n//         ))}\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n// export default RubiksCube;\n\n// App.js\nimport React, { useState } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport Cube from './Cube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [rotations, setRotations] = useState([0, 0, 0]);\n  const handleRotateX = () => {\n    setRotations([rotations[0] + Math.PI / 2, rotations[1], rotations[2]]);\n  };\n  const handleRotateY = () => {\n    setRotations([rotations[0], rotations[1] + Math.PI / 2, rotations[2]]);\n  };\n  const handleRotateZ = () => {\n    setRotations([rotations[0], rotations[1], rotations[2] + Math.PI / 2]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cube, {\n        rotation: rotations,\n        position: [0, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRotateX,\n        children: \"Rotate X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRotateY,\n        children: \"Rotate Y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRotateZ,\n        children: \"Rotate Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nLhNq/JG/asjK4m2eMxWLgxNIOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Canvas","Cube","jsxDEV","_jsxDEV","App","_s","rotations","setRotations","handleRotateX","Math","PI","handleRotateY","handleRotateZ","children","fileName","_jsxFileName","lineNumber","columnNumber","position","rotation","onClick","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useState } from \"react\";\r\n// import { Canvas } from \"react-three-fiber\";\r\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\r\n// import RubiksCubeModel from \"./RubiksCubeModel\";\r\n// import \"./App.css\";\r\n// import { useLoader } from \"react-three-fiber\";\r\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\r\n// import * as THREE from 'three';\r\n\r\n// const RubiksCube = () => {\r\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\r\n//   const [drag, setDrag] = useState(true);\r\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\r\n//   const generateNodesSubset = useMemo(() => {\r\n//     const subsets = [];\r\n    \r\n\r\n//     for (let i = 0; i <= 26; i++) {\r\n//       subsets.push(scene.children.slice(i, i + 1));\r\n//     }\r\n//     return subsets;\r\n//   }, [scene]);\r\n\r\n//   const handleDragChange = (newDrag) => {\r\n//     setDrag(newDrag);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <Canvas>\r\n//       <ambientLight />\r\n//       <Suspense fallback={null}>\r\n//         {generateNodesSubset.map((nodesSubset, index) => (\r\n//           <RubiksCubeModel\r\n//             index={index}\r\n//             key={index}\r\n//             nodesSubset={nodesSubset}\r\n//             drag={drag}\r\n//             onDragChange={handleDragChange}\r\n//             mouseDownPlane={handleMouseDown}\r\n//             mouseUpPlane={handleMouseUp}\r\n//             mouseDownCube={handleMouseDownCube}\r\n//             set={set}\r\n//             xyzdirection={xyzdirection}\r\n//             direction={direction}\r\n//           />\r\n//         ))}\r\n//       </Suspense>\r\n//       <pointLight position={[10, 10, 10]} />\r\n//     </Canvas>\r\n//   );\r\n// };\r\n// export default RubiksCube;\r\n\r\n\r\n// App.js\r\nimport React, { useState } from 'react';\r\nimport { Canvas } from 'react-three-fiber';\r\nimport Cube from './Cube';\r\n\r\nconst App = () => {\r\n  const [rotations, setRotations] = useState([0, 0, 0]);\r\n\r\n  const handleRotateX = () => {\r\n    setRotations([rotations[0] + Math.PI / 2, rotations[1], rotations[2]]);\r\n  };\r\n\r\n  const handleRotateY = () => {\r\n    setRotations([rotations[0], rotations[1] + Math.PI / 2, rotations[2]]);\r\n  };\r\n\r\n  const handleRotateZ = () => {\r\n    setRotations([rotations[0], rotations[1], rotations[2] + Math.PI / 2]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Canvas>\r\n        <ambientLight />\r\n        <pointLight position={[10, 10, 10]} />\r\n        <Cube rotation={rotations} position={[0, 0, 0]} />\r\n      </Canvas>\r\n      <div>\r\n        <button onClick={handleRotateX}>Rotate X</button>\r\n        <button onClick={handleRotateY}>Rotate Y</button>\r\n        <button onClick={handleRotateZ}>Rotate Z</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}