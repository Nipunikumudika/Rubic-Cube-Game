{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CubeGroup = ({\n  children,\n  rotationEnabled\n}) => {\n  _s();\n  const groupRef = useRef();\n\n  // Disable rotation when rotation is not enabled\n  useFrame(() => {\n    if (rotationEnabled) {\n      groupRef.current.rotation.x += 0.01;\n      groupRef.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(CubeGroup, \"6IJMYK8+MXZFwT7izzQ7Jqot7FY=\", false, function () {\n  return [useFrame];\n});\n_c = CubeGroup;\nconst RubiksCubeModel = ({\n  setsRotations\n}) => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const {\n    scene\n  } = useThree();\n  scene.scale.set(0.3, 0.3, 0.3);\n\n  // Create an array of refs for each set (cube)\n  const cubeRefs = _s2(Array.from({\n    length: 27\n  }, _s2(() => {\n    _s2();\n    return useRef();\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n\n  // Apply rotations to each set\n  useFrame(() => {\n    setsRotations.forEach((rotation, setIndex) => {\n      const cubeRef = cubeRefs[setIndex];\n      if (cubeRef.current) {\n        cubeRef.current.rotation.set(rotation[0], rotation[1], rotation[2]);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cubeRefs.map((cubeRef, index) => /*#__PURE__*/_jsxDEV(CubeGroup, {\n      rotationEnabled: setsRotations.length === 0,\n      ref: cubeRef\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s3(RubiksCubeModel, \"dwOJrB9xTsm2CHScepCi8k4o0ls=\", false, function () {\n  return [useThree, useFrame];\n});\n_c2 = RubiksCubeModel;\nconst RubiksCube = () => {\n  _s4();\n  const [setsRotations, setSetsRotations] = useState([]);\n\n  // Function to handle set rotations\n  const rotateSet = () => {\n    const newRotation = [Math.PI / 2, 0, 0]; // Replace with your rotation logic\n\n    // Update setsRotations state\n    setSetsRotations([...setsRotations, newRotation]);\n  };\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n      setsRotations: setsRotations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rotateSet,\n      children: \"Rotate Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s4(RubiksCube, \"Dyq04dobcYA3IiIrHKg6xe0G5jU=\");\n_c3 = RubiksCube;\nexport default RubiksCube;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CubeGroup\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");\n$RefreshReg$(_c3, \"RubiksCube\");","map":{"version":3,"names":["React","useRef","useState","Canvas","useThree","useFrame","OrbitControls","GLTFLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","CubeGroup","children","rotationEnabled","_s","groupRef","current","rotation","x","y","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","RubiksCubeModel","setsRotations","_s3","_s2","$RefreshSig$","scene","scale","set","cubeRefs","Array","from","length","forEach","setIndex","cubeRef","map","index","enableZoom","_c2","RubiksCube","_s4","setSetsRotations","rotateSet","newRotation","Math","PI","position","onClick","_c3","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Canvas, useThree, useFrame } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\n\nconst CubeGroup = ({ children, rotationEnabled }) => {\n  const groupRef = useRef();\n\n  // Disable rotation when rotation is not enabled\n  useFrame(() => {\n    if (rotationEnabled) {\n      groupRef.current.rotation.x += 0.01;\n      groupRef.current.rotation.y += 0.01;\n    }\n  });\n\n  return <group ref={groupRef}>{children}</group>;\n};\n\nconst RubiksCubeModel = ({ setsRotations }) => {\n  const { scene } = useThree();\n  scene.scale.set(0.3, 0.3, 0.3);\n\n  // Create an array of refs for each set (cube)\n  const cubeRefs = Array.from({ length: 27 }, () => useRef());\n\n  // Apply rotations to each set\n  useFrame(() => {\n    setsRotations.forEach((rotation, setIndex) => {\n      const cubeRef = cubeRefs[setIndex];\n\n      if (cubeRef.current) {\n        cubeRef.current.rotation.set(rotation[0], rotation[1], rotation[2]);\n      }\n    });\n  });\n\n  return (\n    <>\n      {cubeRefs.map((cubeRef, index) => (\n        <CubeGroup key={index} rotationEnabled={setsRotations.length === 0} ref={cubeRef}>\n          {/* Include your cube objects here */}\n          {/* Example: <mesh position={[0, 0, 0]}><boxGeometry /><meshBasicMaterial color=\"red\" /></mesh> */}\n        </CubeGroup>\n      ))}\n\n      <OrbitControls enableZoom={false} />\n    </>\n  );\n};\n\nconst RubiksCube = () => {\n  const [setsRotations, setSetsRotations] = useState([]);\n\n  // Function to handle set rotations\n  const rotateSet = () => {\n    const newRotation = [Math.PI / 2, 0, 0]; // Replace with your rotation logic\n\n    // Update setsRotations state\n    setSetsRotations([...setsRotations, newRotation]);\n  };\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <RubiksCubeModel setsRotations={setsRotations} />\n      <pointLight position={[10, 10, 10]} />\n\n      <button onClick={rotateSet}>Rotate Set</button>\n    </Canvas>\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}