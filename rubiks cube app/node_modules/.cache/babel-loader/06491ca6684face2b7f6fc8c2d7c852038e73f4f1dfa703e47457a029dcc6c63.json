{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\Cube.js\",\n  _s = $RefreshSig$();\n// Cube.js\nimport React, { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cubie = ({\n  position,\n  rotation\n}) => {\n  _s();\n  const cubieRef = useRef();\n  useFrame(() => {\n    cubieRef.current.rotation.x = rotation[0];\n    cubieRef.current.rotation.y = rotation[1];\n    cubieRef.current.rotation.z = rotation[2];\n  });\n\n  // Define colors for each face\n  const faceColors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff8000, 0xffffff];\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: position,\n    children: [...Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: cubieRef,\n      children: [/*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: faceColors[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [0.9, 0.9, 0.9]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Cubie, \"0EHa9LTSCL9tSrxX7gQv4GGqdJo=\", false, function () {\n  return [useFrame];\n});\n_c = Cubie;\nconst Cube = () => {\n  const numCubies = 3;\n  const cubies = [];\n  for (let x = 0; x < numCubies; x++) {\n    for (let y = 0; y < numCubies; y++) {\n      for (let z = 0; z < numCubies; z++) {\n        cubies.push( /*#__PURE__*/_jsxDEV(Cubie, {\n          position: [x - 1, y - 1, z - 1] // Adjust positions to form a 3x3x3 cube\n          ,\n          rotation: [0, 0, 0]\n        }, `${x}-${y}-${z}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cubies\n  }, void 0, false);\n};\n_c2 = Cube;\nexport default Cube;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cubie\");\n$RefreshReg$(_c2, \"Cube\");","map":{"version":3,"names":["React","useRef","useFrame","jsxDEV","_jsxDEV","Fragment","_Fragment","Cubie","position","rotation","_s","cubieRef","current","x","y","z","faceColors","children","Array","map","_","index","ref","color","fileName","_jsxFileName","lineNumber","columnNumber","args","_c","Cube","numCubies","cubies","push","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/Cube.js"],"sourcesContent":["// Cube.js\r\nimport React, { useRef } from 'react';\r\nimport { useFrame } from 'react-three-fiber';\r\n\r\nconst Cubie = ({ position, rotation }) => {\r\n  const cubieRef = useRef();\r\n\r\n  useFrame(() => {\r\n    cubieRef.current.rotation.x = rotation[0];\r\n    cubieRef.current.rotation.y = rotation[1];\r\n    cubieRef.current.rotation.z = rotation[2];\r\n  });\r\n\r\n  // Define colors for each face\r\n  const faceColors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff8000, 0xffffff];\r\n\r\n  return (\r\n    <group position={position}>\r\n      {[...Array(6)].map((_, index) => (\r\n        <mesh key={index} ref={cubieRef}>\r\n          <meshStandardMaterial color={faceColors[index]} />\r\n          <boxGeometry args={[0.9, 0.9, 0.9]} />\r\n        </mesh>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nconst Cube = () => {\r\n  const numCubies = 3;\r\n  const cubies = [];\r\n\r\n  for (let x = 0; x < numCubies; x++) {\r\n    for (let y = 0; y < numCubies; y++) {\r\n      for (let z = 0; z < numCubies; z++) {\r\n        cubies.push(\r\n          <Cubie\r\n            key={`${x}-${y}-${z}`}\r\n            position={[x - 1, y - 1, z - 1]} // Adjust positions to form a 3x3x3 cube\r\n            rotation={[0, 0, 0]}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>{cubies}</>;\r\n};\r\n\r\nexport default Cube;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzBC,QAAQ,CAAC,MAAM;IACbS,QAAQ,CAACC,OAAO,CAACH,QAAQ,CAACI,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;IACzCE,QAAQ,CAACC,OAAO,CAACH,QAAQ,CAACK,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;IACzCE,QAAQ,CAACC,OAAO,CAACH,QAAQ,CAACM,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;;EAEF;EACA,MAAMO,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAE/E,oBACEZ,OAAA;IAAOI,QAAQ,EAAEA,QAAS;IAAAS,QAAA,EACvB,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC1BjB,OAAA;MAAkBkB,GAAG,EAAEX,QAAS;MAAAM,QAAA,gBAC9Bb,OAAA;QAAsBmB,KAAK,EAAEP,UAAU,CAACK,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDvB,OAAA;QAAawB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAF7BN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACjB,EAAA,CAtBIH,KAAK;EAAA,QAGTL,QAAQ;AAAA;AAAA2B,EAAA,GAHJtB,KAAK;AAwBX,MAAMuB,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,MAAM,GAAG,EAAE;EAEjB,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,SAAS,EAAElB,CAAC,EAAE,EAAE;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,SAAS,EAAEjB,CAAC,EAAE,EAAE;MAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,SAAS,EAAEhB,CAAC,EAAE,EAAE;QAClCiB,MAAM,CAACC,IAAI,eACT7B,OAAA,CAACG,KAAK;UAEJC,QAAQ,EAAE,CAACK,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAE,CAAC;UAAA;UACjCN,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAAE,GAFd,GAAEI,CAAE,IAAGC,CAAE,IAAGC,CAAE,EAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGtB,CACH,CAAC;MACH;IACF;EACF;EAEA,oBAAOvB,OAAA,CAAAE,SAAA;IAAAW,QAAA,EAAGe;EAAM,gBAAG,CAAC;AACtB,CAAC;AAACE,GAAA,GAnBIJ,IAAI;AAqBV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}