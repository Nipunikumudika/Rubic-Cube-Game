{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, Suspense } from 'react';\nimport { Canvas, useThree, extend } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\n// Extend three.js with the OrbitControls\n// extend({ OrbitControls });\n\n// const RubiksCube = () => {\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RotatablePart = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const part = useRef();\n\n  // Accessing the first child of the scene\n  const firstChild = scene.children[0];\n\n  // Set the rotation and scale for the part you want to rotate\n  // firstChild.rotation.set(0, 0, 0);\n  // firstChild.scale.set(1, 1, 1);\n\n  scene.scale.set(0.3, 0.3, 0.3);\n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(RotatablePart, \"8RyzBs9WNYuhjd+wq0lNrhD8mlo=\", false, function () {\n  return [useLoader];\n});\n_c = RotatablePart;\nconst RubiksCubeModel = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RotatablePart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      target: [0, 0, 0],\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatablePart\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","Suspense","Canvas","useThree","extend","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","RotatablePart","_s","scene","part","firstChild","children","scale","set","rotation","Math","PI","object","fileName","_jsxFileName","lineNumber","columnNumber","_c","RubiksCubeModel","target","enableZoom","_c2","RubiksCube","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { useRef, Suspense } from 'react';\nimport { Canvas, useThree, extend } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\n// Extend three.js with the OrbitControls\n// extend({ OrbitControls });\n\n// const RubiksCube = () => {\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\nconst RotatablePart = () => {\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const part = useRef();\n\n  // Accessing the first child of the scene\n  const firstChild = scene.children[0];\n\n  // Set the rotation and scale for the part you want to rotate\n  // firstChild.rotation.set(0, 0, 0);\n  // firstChild.scale.set(1, 1, 1);\n\n  scene.scale.set(0.3, 0.3, 0.3); \n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n  return <primitive object={scene} />;\n};\n\nconst RubiksCubeModel = () => {\n  return (\n    <>\n      <RotatablePart />\n      \n      <OrbitControls target={[0, 0, 0]} enableZoom={false}/>\n    </>\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AAC5D,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,WAAW;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAACD,UAAU,EAAE,iBAAiB,CAAC;EAC1D,MAAMU,IAAI,GAAGf,MAAM,CAAC,CAAC;;EAErB;EACA,MAAMgB,UAAU,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;;EAEpC;EACA;EACA;;EAEAH,KAAK,CAACI,KAAK,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC9BL,KAAK,CAACM,QAAQ,CAACD,GAAG,CAACE,IAAI,CAACC,EAAE,GAAG,CAAC,EAAED,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAC/C,oBAAOb,OAAA;IAAWc,MAAM,EAAET;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAACd,EAAA,CAdID,aAAa;EAAA,QACCN,SAAS;AAAA;AAAAsB,EAAA,GADvBhB,aAAa;AAgBnB,MAAMiB,eAAe,GAAGA,CAAA,KAAM;EAC5B,oBACEpB,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACG,aAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjBlB,OAAA,CAACF,aAAa;MAACuB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACC,UAAU,EAAE;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACtD,CAAC;AAEP,CAAC;AAACK,GAAA,GARIH,eAAe;AAUrB,eAAeI,UAAU;AAAC,IAAAL,EAAA,EAAAI,GAAA;AAAAE,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}