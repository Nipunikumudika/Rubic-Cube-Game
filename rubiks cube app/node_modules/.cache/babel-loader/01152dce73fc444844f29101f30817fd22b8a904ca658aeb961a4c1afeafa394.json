{"ast":null,"code":"// // Cube.js\n// import React, { useRef } from 'react';\n// import { useFrame } from 'react-three-fiber';\n\n// const Cubie = ({ position, rotation }) => {\n//   const cubieRef = useRef();\n\n//   useFrame(() => {\n//     cubieRef.current.rotation.x = rotation[0];\n//     cubieRef.current.rotation.y = rotation[1];\n//     cubieRef.current.rotation.z = rotation[2];\n//   });\n\n//   // Define colors for each face\n//   const faceColors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff8000, 0xffffff];\n\n//   return (\n//     <group position={position}>\n//       {[...Array(6)].map((_, index) => (\n//         <mesh key={index} ref={cubieRef}>\n//           <meshStandardMaterial color={faceColors[index]} />\n//           <boxGeometry args={[0.9, 0.9, 0.9]} />\n//         </mesh>\n//       ))}\n//     </group>\n//   );\n// };\n\n// const Cube = () => {\n//   const numCubies = 3;\n//   const cubies = [];\n\n//   for (let x = 0; x < numCubies; x++) {\n//     for (let y = 0; y < numCubies; y++) {\n//       for (let z = 0; z < numCubies; z++) {\n//         cubies.push(\n//           <Cubie\n//             key={`${x}-${y}-${z}`}\n//             position={[x - 1, y - 1, z - 1]} // Adjust positions to form a 3x3x3 cube\n//             rotation={[0, 0, 0]}\n//           />\n//         );\n//       }\n//     }\n//   }\n\n//   return <>{cubies}</>;\n// };\n\n// export default Cube;","map":{"version":3,"names":[],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/Cube.js"],"sourcesContent":["// // Cube.js\r\n// import React, { useRef } from 'react';\r\n// import { useFrame } from 'react-three-fiber';\r\n\r\n// const Cubie = ({ position, rotation }) => {\r\n//   const cubieRef = useRef();\r\n\r\n//   useFrame(() => {\r\n//     cubieRef.current.rotation.x = rotation[0];\r\n//     cubieRef.current.rotation.y = rotation[1];\r\n//     cubieRef.current.rotation.z = rotation[2];\r\n//   });\r\n\r\n//   // Define colors for each face\r\n//   const faceColors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff8000, 0xffffff];\r\n\r\n//   return (\r\n//     <group position={position}>\r\n//       {[...Array(6)].map((_, index) => (\r\n//         <mesh key={index} ref={cubieRef}>\r\n//           <meshStandardMaterial color={faceColors[index]} />\r\n//           <boxGeometry args={[0.9, 0.9, 0.9]} />\r\n//         </mesh>\r\n//       ))}\r\n//     </group>\r\n//   );\r\n// };\r\n\r\n// const Cube = () => {\r\n//   const numCubies = 3;\r\n//   const cubies = [];\r\n\r\n//   for (let x = 0; x < numCubies; x++) {\r\n//     for (let y = 0; y < numCubies; y++) {\r\n//       for (let z = 0; z < numCubies; z++) {\r\n//         cubies.push(\r\n//           <Cubie\r\n//             key={`${x}-${y}-${z}`}\r\n//             position={[x - 1, y - 1, z - 1]} // Adjust positions to form a 3x3x3 cube\r\n//             rotation={[0, 0, 0]}\r\n//           />\r\n//         );\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   return <>{cubies}</>;\r\n// };\r\n\r\n// export default Cube;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}