{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useRef, useEffect, useState } from \"react\";\n// import { OrbitControls } from \"@react-three/drei\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Canvas, useThree } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport { CameraControls } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(0);\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const groupRef = useRef();\n  const [rotateCamera, setRotateCamera] = useState(false);\n  let a = 1;\n  let controls;\n  const {\n    camera,\n    gl\n  } = useThree();\n  const CameraController = () => {\n    _s();\n    const handleDocumentClick = event => {\n      // Replace 'model' with the actual class or id of your model\n      if (!event.target.closest('.model')) {\n        // Clicked outside the model, enable camera rotation\n        setRotateCamera(true);\n        // controls.enabled=false;\n        // Implement your camera rotation logic here\n        console.log('Rotate the camera');\n      } else {\n        // Clicked inside the model, disable camera rotation\n        setRotateCamera(false);\n        console.log('No Rotate the camera');\n      }\n    };\n    useEffect(() => {\n      // Attach event listener to the document for clicks\n      document.addEventListener('click', handleDocumentClick);\n\n      // Cleanup the event listener when the component unmounts\n      return () => {\n        document.removeEventListener('click', handleDocumentClick);\n      };\n    }, []); // Empty dependency array to run the effect once on mount\n\n    useEffect(() => {\n      controls = new OrbitControls(camera, gl.domElement);\n      if (a == 0) {\n        controls.enabled = false;\n        console.log(\"okkkkkkkkkkkkkk\");\n      }\n      controls.minDistance = 3;\n      controls.maxDistance = 20;\n      return () => {\n        controls.dispose();\n      };\n    }, [camera, gl]);\n    return null;\n  };\n  _s(CameraController, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n  const handlePointerDown = event => {\n    if (controls) {\n      controls.enabled = false;\n      controls.dispose();\n      controls.update();\n    }\n    console.log(\"down\");\n    startYRef.current = event.clientY;\n    if (event.target.tagName === \"CANVAS\") {\n      console.log(\"outside true\");\n    } else {\n      console.log(\"inside false\");\n    }\n    window.addEventListener(\"pointermove\", handlePointerMove);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    console.log(\"move\");\n    const startY = startYRef.current;\n    if (startY !== null) {\n      deltaY = event.clientY - startY;\n    }\n  };\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    console.log(\"up\");\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n      });\n      DraggingDown();\n      // controls.enableRotate = true;\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n        console.log(cubeRef.current.rotation.z);\n      });\n      DraggingUp();\n      // controls.enableRotate = true;\n      deltaY = 0;\n    }\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      className: \"model\",\n      children: [/*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n        nodesSubset: nodesSubset1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n        nodesSubset: nodesSubset2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n        nodesSubset: nodesSubset3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraController, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(RubiksCubeModel, \"HpDdfCtFjBVxfteznT2om/CRRkE=\", false, function () {\n  return [useThree];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useRef","useEffect","useState","OrbitControls","Canvas","useThree","THREE","CameraControls","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","_s2","_s","$RefreshSig$","cubeRefs","startYRef","initialRotation","Math","PI","groupRef","rotateCamera","setRotateCamera","a","controls","camera","gl","CameraController","handleDocumentClick","event","target","closest","console","log","document","addEventListener","removeEventListener","domElement","enabled","minDistance","maxDistance","dispose","handlePointerDown","update","current","clientY","tagName","window","handlePointerMove","handlePointerUp","stopPropagation","deltaY","startY","targetRot","forEach","cubeRef","index","rotation","z","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","children","fallback","className","nodesSubset1","fileName","_jsxFileName","lineNumber","columnNumber","nodesSubset2","nodesSubset3","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { Suspense,useRef, useEffect, useState } from \"react\";\r\n// import { OrbitControls } from \"@react-three/drei\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { Canvas, useThree } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\nimport { CameraControls } from \"@react-three/drei\";\r\n\r\nconst RubiksCubeModel = ({ nodesSubset }) => {\r\n\r\n  const cubeRefs = useRef([]);\r\n  const startYRef = useRef(0);\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const groupRef = useRef();\r\n  const [rotateCamera, setRotateCamera] = useState(false);\r\nlet a=1;\r\n  let controls;\r\n  const { camera, gl } = useThree();\r\n  const CameraController = () => {\r\n  \r\n    \r\n    const handleDocumentClick = (event) => {\r\n      // Replace 'model' with the actual class or id of your model\r\n      if (!event.target.closest('.model')) {\r\n        // Clicked outside the model, enable camera rotation\r\n        setRotateCamera(true);\r\n        // controls.enabled=false;\r\n        // Implement your camera rotation logic here\r\n        console.log('Rotate the camera');\r\n      } else {\r\n        // Clicked inside the model, disable camera rotation\r\n        setRotateCamera(false);\r\n        console.log('No Rotate the camera');\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Attach event listener to the document for clicks\r\n      document.addEventListener('click', handleDocumentClick);\r\n  \r\n      // Cleanup the event listener when the component unmounts\r\n      return () => {\r\n        document.removeEventListener('click', handleDocumentClick);\r\n      };\r\n    }, []); // Empty dependency array to run the effect once on mount\r\n\r\n    \r\n\r\n    useEffect(\r\n      () => {\r\n        controls = new OrbitControls(camera, gl.domElement);\r\n        if(a==0){\r\n          controls.enabled=false;\r\n          console.log(\"okkkkkkkkkkkkkk\");\r\n        }\r\n        controls.minDistance = 3;\r\n        controls.maxDistance = 20;\r\n        return () => {\r\n          controls.dispose();\r\n        };\r\n      },\r\n      [camera, gl]\r\n    );\r\n    return null;\r\n  };\r\n\r\n  const handlePointerDown = (event) => {\r\n    if (controls) {\r\n      controls.enabled = false;\r\n      controls.dispose();\r\n      controls.update();\r\n    }\r\n\r\n \r\n    console.log(\"down\");\r\n    startYRef.current = event.clientY;\r\n    if (event.target.tagName === \"CANVAS\") {\r\n      console.log(\"outside true\");\r\n    } else {\r\n      console.log(\"inside false\");\r\n    }\r\n\r\n    window.addEventListener(\"pointermove\", handlePointerMove);\r\n    window.addEventListener(\"pointerup\", handlePointerUp);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  let deltaY;\r\n\r\n  const handlePointerMove = (event) => {\r\n    console.log(\"move\");\r\n    const startY = startYRef.current;\r\n    if (startY !== null) {\r\n      deltaY = event.clientY - startY;\r\n    }\r\n  };\r\n\r\n  let targetRot = 0;\r\n\r\n  const handlePointerUp = async () => {\r\n    console.log(\"up\");\r\n    window.removeEventListener(\"pointermove\", handlePointerMove);\r\n    window.removeEventListener(\"pointerup\", handlePointerUp);\r\n    if (deltaY > 0) {\r\n      cubeRefs.current.forEach((cubeRef, index) => {\r\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n      });\r\n\r\n      DraggingDown();\r\n      // controls.enableRotate = true;\r\n      deltaY = 0;\r\n    } else if (deltaY < 0) {\r\n      cubeRefs.current.forEach((cubeRef, index) => {\r\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n        console.log(cubeRef.current.rotation.z);\r\n      });\r\n\r\n      DraggingUp();\r\n      // controls.enableRotate = true;\r\n      deltaY = 0;\r\n    }\r\n  };\r\n\r\n  const DraggingDown = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z += Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n  };\r\n\r\n  const DraggingUp = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z -= Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <group\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n          className=\"model\"\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group> */}\r\n\r\n      <Suspense fallback={null} className=\"model\">\r\n         <RubiksCubeModel nodesSubset={nodesSubset1} />\r\n         <RubiksCubeModel nodesSubset={nodesSubset2} />\r\n         <RubiksCubeModel nodesSubset={nodesSubset3} />\r\n       </Suspense>\r\n      <CameraController />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}