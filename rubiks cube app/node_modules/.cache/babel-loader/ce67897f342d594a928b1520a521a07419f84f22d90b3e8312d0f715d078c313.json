{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Vector3 } from \"three\"; // Import Vector3 from three\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(null);\n  const canvasRef = useRef(null);\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const {\n    camera,\n    gl\n  } = useThree();\n  const orbitControlsRef = useRef();\n  useEffect(() => {\n    if (orbitControlsRef.current) {\n      orbitControlsRef.current.addEventListener(\"change\", () => {\n        const rotation = camera.rotation.toArray();\n        //console.log(\"Rotation changed:\", rotation);\n      });\n    }\n  }, [camera.rotation]);\n  let deltaY;\n  let targetRot = 0;\n  const handlePointerDown = event => {\n    const {\n      clientY\n    } = event;\n    const startScreenY = clientY;\n    window.addEventListener(\"pointermove\", moveEvent => {\n      const {\n        clientY: currentScreenY\n      } = moveEvent;\n      deltaY = currentScreenY - startScreenY;\n      // if (deltaY > 0) {\n      //     console.log(\"Dragging Downward\");\n      // } else if (deltaY < 0) {\n      //     console.log(\"Dragging Upward\");\n      // }\n    });\n    window.addEventListener(\"pointerup\", () => {\n      // window.removeEventListener(\"pointermove\");\n      // window.removeEventListener(\"pointerup\");\n      if (deltaY > 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n          //console.log(targetRot);\n          // console.log(canvas.current.rotation.z);\n        });\n        console.log(\"Dragging Downward\");\n        DraggingDown();\n        deltaY = 0;\n      } else if (deltaY < 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n          //console.log(cubeRef.current.rotation.z);\n        });\n        console.log(\"Dragging Upward\");\n        DraggingUp();\n        deltaY = 0;\n      }\n    });\n    event.stopPropagation();\n  };\n\n  // const handlePointerMove = (event) => {\n  //     console.log(\"move\");\n  //     const startY = startYRef.current;\n  //     if (startY !== null) {\n  //       deltaY = event.clientY - startY;\n  //     }\n\n  // };\n  // let targetRot=0;\n  // const handlePointerUp =async () => {\n  //     console.log(\"up\");\n  //     window.removeEventListener(\"pointermove\", handlePointerMove);\n  //     window.removeEventListener(\"pointerup\", handlePointerUp);\n  //     if (deltaY > 0) {\n  //       cubeRefs.current.forEach((cubeRef, index) => {\n  //         targetRot = cubeRef.current.rotation.z + (Math.PI / 2);\n  //         //console.log(targetRot);\n  //         // console.log(canvas.current.rotation.z);\n  //       });\n\n  //       DraggingDown();\n  //       deltaY = 0;\n  //     } else if (deltaY < 0) {\n  //       cubeRefs.current.forEach((cubeRef, index) => {\n  //         targetRot = cubeRef.current.rotation.z - (Math.PI / 2);\n  //         console.log(cubeRef.current.rotation.z);\n  //       });\n\n  //       DraggingUp();\n  //       deltaY = 0;\n  //     }\n\n  // };\n\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitControlsRef,\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[index] = {\n          current: ref\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"NgpoVqYD/nI3xgi2N6HlcIQgj88=\", false, function () {\n  return [useThree];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","useEffect","useFrame","useThree","OrbitControls","Vector3","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","_s","cubeRefs","startYRef","canvasRef","initialRotation","Math","PI","camera","gl","orbitControlsRef","current","addEventListener","rotation","toArray","deltaY","targetRot","handlePointerDown","event","clientY","startScreenY","window","moveEvent","currentScreenY","forEach","cubeRef","index","z","console","log","DraggingDown","DraggingUp","stopPropagation","abs","Promise","resolve","requestAnimationFrame","setTimeout","children","ref","enableZoom","fileName","_jsxFileName","lineNumber","columnNumber","scale","onPointerDown","map","node","object","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { Vector3 } from \"three\"; // Import Vector3 from three\r\n\r\nconst RubiksCubeModel = ({ nodesSubset }) => {\r\n  const cubeRefs = useRef([]);\r\n  const startYRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const { camera, gl } = useThree();\r\n  const orbitControlsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (orbitControlsRef.current) {\r\n      orbitControlsRef.current.addEventListener(\"change\", () => {\r\n        const rotation = camera.rotation.toArray();\r\n        //console.log(\"Rotation changed:\", rotation);\r\n      });\r\n    }\r\n  }, [camera.rotation]);\r\n\r\n  let deltaY;\r\n  let targetRot=0;\r\n\r\n  const handlePointerDown = (event) => {\r\n    const { clientY } = event;\r\n    const startScreenY = clientY;\r\n\r\n    window.addEventListener(\"pointermove\", (moveEvent) => {\r\n      const { clientY: currentScreenY } = moveEvent;\r\n      deltaY = currentScreenY - startScreenY;\r\n      // if (deltaY > 0) {\r\n      //     console.log(\"Dragging Downward\");\r\n      // } else if (deltaY < 0) {\r\n      //     console.log(\"Dragging Upward\");\r\n      // }\r\n    });\r\n\r\n    window.addEventListener(\"pointerup\", () => {\r\n      // window.removeEventListener(\"pointermove\");\r\n      // window.removeEventListener(\"pointerup\");\r\n      if (deltaY > 0) {\r\n        cubeRefs.current.forEach((cubeRef, index) => {\r\n          targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n          //console.log(targetRot);\r\n          // console.log(canvas.current.rotation.z);\r\n        });\r\n        console.log(\"Dragging Downward\");\r\n        DraggingDown();\r\n        deltaY = 0;\r\n      } else if (deltaY < 0) {\r\n        cubeRefs.current.forEach((cubeRef, index) => {\r\n          targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n          //console.log(cubeRef.current.rotation.z);\r\n        });\r\n        console.log(\"Dragging Upward\");\r\n        DraggingUp();\r\n        deltaY = 0;\r\n      }\r\n    });\r\n\r\n    event.stopPropagation();\r\n  };\r\n\r\n  // const handlePointerMove = (event) => {\r\n  //     console.log(\"move\");\r\n  //     const startY = startYRef.current;\r\n  //     if (startY !== null) {\r\n  //       deltaY = event.clientY - startY;\r\n  //     }\r\n\r\n  // };\r\n  // let targetRot=0;\r\n  // const handlePointerUp =async () => {\r\n  //     console.log(\"up\");\r\n  //     window.removeEventListener(\"pointermove\", handlePointerMove);\r\n  //     window.removeEventListener(\"pointerup\", handlePointerUp);\r\n  //     if (deltaY > 0) {\r\n  //       cubeRefs.current.forEach((cubeRef, index) => {\r\n  //         targetRot = cubeRef.current.rotation.z + (Math.PI / 2);\r\n  //         //console.log(targetRot);\r\n  //         // console.log(canvas.current.rotation.z);\r\n  //       });\r\n\r\n  //       DraggingDown();\r\n  //       deltaY = 0;\r\n  //     } else if (deltaY < 0) {\r\n  //       cubeRefs.current.forEach((cubeRef, index) => {\r\n  //         targetRot = cubeRef.current.rotation.z - (Math.PI / 2);\r\n  //         console.log(cubeRef.current.rotation.z);\r\n  //       });\r\n\r\n  //       DraggingUp();\r\n  //       deltaY = 0;\r\n  //     }\r\n\r\n  // };\r\n\r\n  const DraggingDown = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z += Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n  };\r\n\r\n  const DraggingUp = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z -= Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OrbitControls ref={orbitControlsRef} enableZoom={false} />\r\n      <group\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}