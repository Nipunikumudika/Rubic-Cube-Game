{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { Geometry, BufferGeometry } from 'three';\nimport { EdgeSplitModifier } from 'three/examples/jsm/modifiers/EdgeSplitModifier';\nfunction useEdgeSplit(cutOffAngle) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  useEffect(() => {\n    if (original.current && ref.current && modifier.current) {\n      let geometry = new Geometry();\n      if (original.current instanceof BufferGeometry) {\n        geometry.fromBufferGeometry(original.current);\n      } else {\n        geometry = original.current.clone();\n      }\n      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle]);\n  return ref;\n}\nexport { useEdgeSplit };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}