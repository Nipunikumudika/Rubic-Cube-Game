{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport { Vector2, Raycaster } from \"three\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset,\n  drag,\n  onDragChange\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const orbitRef = useRef();\n  const startYRef = useRef(0);\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const groupRef = useRef();\n  const [mouse, setMouse] = useState(new THREE.Vector2());\n  const [startY, setStartY] = useState(null);\n  const {\n    camera\n  } = useThree();\n  const [raycaster, setRaycaster] = useState(new THREE.Raycaster());\n  let x, y, z;\n  const handlePointerDown = event => {\n    x = orbitRef.current.object.position.x;\n    y = orbitRef.current.object.position.y;\n    z = orbitRef.current.object.position.z;\n    console.log(z);\n    setStartY(event.clientY);\n    setMouse(new Vector2(event.clientX / window.innerWidth * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1));\n    const intersects = raycaster.intersectObject(groupRef.current, true);\n    if (intersects.length > 0) {\n      // You can access the intersected face and object\n      const intersectedFace = intersects[0].face;\n      const intersectedObject = intersects[0].object;\n\n      // Perform actions based on the intersected face or object\n      console.log('Intersected Face:', intersectedFace);\n      console.log('Intersected Object:', intersectedObject);\n    }\n    startYRef.current = event.clientY;\n    onDragChange(false);\n    window.addEventListener(\"pointermove\", handlePointerMove, {\n      passive: true\n    });\n    window.addEventListener(\"pointerup\", handlePointerUp, {\n      passive: true\n    });\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    const startY = startYRef.current;\n    // console.log(startY );\n    if (startY !== null) {\n      const endY = event.clientY;\n      console.log(z);\n      // console.log(y);\n      if (z > -0.03) {\n        console.log(\"okokokokoko\");\n        deltaY = endY - startY;\n      } else {\n        console.log(\"nononooonoo\");\n        deltaY = startY - endY;\n      }\n      // deltaY = endY - startY;\n    }\n  };\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n      });\n      DraggingDown();\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n      });\n      DraggingUp();\n      deltaY = 0;\n    }\n    onDragChange(true);\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  useFrame(mouse => {\n    raycaster.setFromCamera(mouse, camera);\n    orbitRef.current.enabled = drag;\n    orbitRef.current.update();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      classname: \"group\",\n      ref: groupRef,\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [2, 2, 2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }, this), nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[index] = {\n          current: ref\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"ML5nUKtAizEA6kZAWf20WbZnVz0=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","useState","OrbitControls","useFrame","useThree","Vector2","Raycaster","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","drag","onDragChange","_s","cubeRefs","orbitRef","startYRef","initialRotation","Math","PI","groupRef","mouse","setMouse","startY","setStartY","camera","raycaster","setRaycaster","x","y","z","handlePointerDown","event","current","object","position","console","log","clientY","clientX","window","innerWidth","innerHeight","intersects","intersectObject","length","intersectedFace","face","intersectedObject","addEventListener","handlePointerMove","passive","handlePointerUp","stopPropagation","deltaY","endY","targetRot","removeEventListener","forEach","cubeRef","rotation","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","setFromCamera","enabled","update","children","classname","ref","scale","onPointerDown","args","fileName","_jsxFileName","lineNumber","columnNumber","visible","map","node","index","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useRef,useState } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useFrame,useThree } from \"react-three-fiber\";\r\nimport { Vector2, Raycaster } from \"three\";\r\nimport * as THREE from 'three';\r\n\r\nconst RubiksCubeModel = ({ nodesSubset, drag, onDragChange }) => {\r\n  const cubeRefs = useRef([]);\r\n  const orbitRef = useRef();\r\n  const startYRef = useRef(0);\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const groupRef = useRef();\r\n  const [mouse, setMouse] = useState(new THREE.Vector2());\r\n  const [startY, setStartY] = useState(null);\r\n  const { camera } = useThree();\r\n\r\n  const [raycaster, setRaycaster] = useState(new THREE.Raycaster());\r\n\r\nlet x,y,z;\r\n  const handlePointerDown = (event) => {\r\n   x= orbitRef.current.object.position.x\r\n   y= orbitRef.current.object.position.y\r\n   z= orbitRef.current.object.position.z\r\nconsole.log(z);\r\n  setStartY(event.clientY);\r\n\r\n  setMouse(new Vector2((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1));\r\n\r\n  const intersects = raycaster.intersectObject(groupRef.current, true);\r\n\r\n  if (intersects.length > 0) {\r\n    // You can access the intersected face and object\r\n    const intersectedFace = intersects[0].face;\r\n    const intersectedObject = intersects[0].object;\r\n\r\n    // Perform actions based on the intersected face or object\r\n    console.log('Intersected Face:', intersectedFace);\r\n    console.log('Intersected Object:', intersectedObject);\r\n  }\r\n\r\n    startYRef.current = event.clientY;\r\n    onDragChange(false);\r\n    window.addEventListener(\"pointermove\", handlePointerMove, { passive: true });\r\n    window.addEventListener(\"pointerup\", handlePointerUp, { passive: true });\r\n    event.stopPropagation();\r\n  };\r\n\r\n  let deltaY;\r\n\r\n  const handlePointerMove = (event) => {\r\n\r\n    const startY = startYRef.current;\r\n    // console.log(startY );\r\n    if (startY !== null) {\r\n      const endY = event.clientY\r\n      console.log(z );\r\n      // console.log(y);\r\n      if(z>-0.03){\r\n        console.log(\"okokokokoko\");\r\n        deltaY = endY - startY;\r\n      }else{\r\n        console.log(\"nononooonoo\");\r\n        deltaY = startY - endY;\r\n      }\r\n      // deltaY = endY - startY;\r\n    }\r\n  };\r\n\r\n  let targetRot = 0;\r\n\r\n  const handlePointerUp = async () => {\r\n    window.removeEventListener(\"pointermove\", handlePointerMove);\r\n    window.removeEventListener(\"pointerup\", handlePointerUp);\r\n    if (deltaY > 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n      });\r\n      DraggingDown();\r\n      deltaY = 0;\r\n    } else if (deltaY < 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n      });\r\n      DraggingUp();\r\n      deltaY = 0;\r\n    }\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingDown = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z += Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingUp = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z -= Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  useFrame((mouse) => {\r\n    raycaster.setFromCamera(mouse, camera);\r\n    orbitRef.current.enabled = drag;\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group classname=\"group\"\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n         <mesh>\r\n    <boxGeometry args={[2, 2, 2]} />\r\n    <meshBasicMaterial visible={true} />\r\n  </mesh>\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group>\r\n      <OrbitControls ref={orbitRef}  />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}