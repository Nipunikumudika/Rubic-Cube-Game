{"ast":null,"code":"var _s = $RefreshSig$();\n// mouseEventHandlers.js\nimport { useState } from \"react\";\nconst set1 = [1, 4, 7, 10, 13, 16, 30, 33, 36, 39, 42, 45];\nconst set2 = [2, 5, 8,, 11, 14, 17, 29, 32, 35, 38, 41, 44];\nconst set3 = [3, 6, 9, 12, 15, 18, 28, 31, 34, 37, 41, 43];\nconst set4 = [1, 2, 3, 48, 51, 54, 34, 35, 36, 19, 22, 25];\nconst set5 = [4, 5, 6, 47, 50, 53, 31, 32, 33, 20, 23, 26];\nconst set6 = [7, 8, 9, 46, 49, 52, 28, 29, 30, 21, 24, 27];\nconst set7 = [10, 11, 12, 46, 47, 48, 43, 44, 45, 25, 26, 27];\nconst set8 = [13, 14, 15, 49, 50, 51, 40, 41, 42, 22, 23, 24];\nconst set9 = [16, 17, 18, 52, 53, 54, 37, 38, 39, 19, 20, 21];\nconst cubeset1 = [24, 15, 6, 3, 0, 9, 18, 21, 12];\nconst cubeset2 = [25, 16, 7, 4, 1, 10, 19, 22, 13];\nconst cubeset3 = [26, 17, 8, 5, 2, 11, 20, 23, 14];\nconst cubeset4 = [24, 25, 26, 23, 20, 19, 18, 21, 22]; //\nconst cubeset5 = [15, 16, 17, 14, 11, 10, 9, 12, 13]; //\nconst cubeset6 = [6, 7, 8, 5, 2, 1, 0, 3, 4]; //\nconst cubeset7 = [6, 7, 8, 17, 26, 25, 24, 15, 16];\nconst cubeset8 = [3, 4, 5, 14, 23, 22, 21, 12, 13];\nconst cubeset9 = [0, 1, 2, 11, 20, 19, 18, 9, 10];\nlet set;\nconst rubiksCubeMatrixWithIdentifiers = [\n//imitialcubeno,initialplaneno,initialPlanename,newcubeno,newcubeplane,newplanename\n// 1\n[[[24, 1, \"Cube024_3\", 24, 1, \"Cube024_3\"], [25, 2, \"Cube025_3\", 25, 2, \"Cube025_3\"], [26, 3, \"Cube026_3\", 26, 3, \"Cube026_3\"]], [[15, 4, \"Cube015_2\", 15, 15, \"Cube015_2\"], [16, 5, \"Cube016_2\", 16, 5, \"Cube016_2\"], [17, 6, \"Cube017_2\", 17, 6, \"Cube017_2\"]], [[6, 7, \"Cube006_2\", 6, 7, \"Cube006_2\"], [7, 8, \"Cube007_2\", 7, 8, \"Cube007_2\"], [8, 9, \"Cube008_2\", 8, 9, \"Cube008_2\"]]],\n// 2\n[[[6, 10, \"Cube006_4\", 6, 10, \"Cube006_4\"], [7, 11, \"Cube007_3\", 7, 11, \"Cube007_3\"], [8, 12, \"Cube008_4\", 8, 12, \"Cube008_4\"]], [[3, 13, \"Cube003_3\", 3, 13, \"Cube003_3\"], [4, 14, \"Cube004_2\", 4, 14, \"Cube004_2\"], [5, 15, \"Cube005_3\", 5, 15, \"Cube005_3\"]], [[0, 16, \"Cube000_3\", 0, 16, \"Cube000_3\"], [1, 17, \"Cube001_3\", 1, 17, \"Cube001_3\"], [2, 18, \"Cube002_4\", 2, 18, \"Cube002_4\"]]],\n// 3\n[[[24, 25, \"Cube024_4\", 24, 25, \"Cube024_4\"], [15, 26, \"Cube015_3\", 15, 26, \"Cube015_3\"], [6, 27, \"Cube006_3\", 6, 27, \"Cube006_3\"]], [[21, 22, \"Cube021_3\", 21, 22, \"Cube021_3\"], [12, 23, \"Cube012_2\", 12, 23, \"Cube012_2\"], [3, 24, \"Cube003_2\", 5, 24, \"Cube003_2\"]], [[18, 19, \"Cube018_4\", 18, 19, \"Cube018_4\"], [9, 20, \"Cube009_3\", 9, 20, \"Cube009_3\"], [0, 21, \"Cube000_2\", 0, 21, \"Cube000_2\"]]],\n// 4\n[[[0, 30, \"Cube000_1\", 0, 30, \"Cube000_1\"], [1, 29, \"Cube001_2\", 1, 29, \"Cube001_2\"], [2, 28, \"Cube002_3\", 2, 28, \"Cube002_3\"]], [[9, 33, \"Cube009_2\", 9, 33, \"Cube009_2\"], [10, 32, \"Cube010_2\", 10, 32, \"Cube010_2\"], [11, 31, \"Cube011_3\", 11, 31, \"Cube011_3\"]], [[18, 36, \"Cube018_3\", 18, 36, \"Cube018_3\"], [19, 35, \"Cube019_3\", 19, 35, \"Cube019_3\"], [20, 34, \"Cube020_4\", 20, 34, \"Cube020_4\"]]],\n// 5\n[[[26, 43, \"Cube026_2\", 26, 43, \"Cube026_2\"], [25, 44, \"Cube025_2\", 25, 44, \"Cube025_2\"], [24, 45, \"Cube024_2\", 24, 45, \"Cube024_2\"]], [[23, 40, \"Cube023_2\", 23, 40, \"Cube023_2\"], [22, 41, \"Cube022_2\", 22, 41, \"Cube022_2\"], [21, 42, \"Cube021_2\", 21, 42, \"Cube021_2\"]], [[20, 37, \"Cube020_2\", 20, 37, \"Cube020_2\"], [19, 38, \"Cube019_2\", 19, 38, \"Cube019_2\"], [18, 39, \"Cube018_2\", 18, 39, \"Cube018_2\"]]],\n// 6\n[[[8, 46, \"Cube008_3\", 8, 46, \"Cube008_3\"], [17, 47, \"Cube017_3\", 17, 47, \"Cube017_3\"], [26, 48, \"Cube026_4\", 26, 48, \"Cube026_4\"]], [[5, 49, \"Cube005_2\", 5, 49, \"Cube005_2\"], [14, 50, \"Cube014_2\", 14, 50, \"Cube014_2\"], [23, 51, \"Cube023_3\", 23, 51, \"Cube023_3\"]], [[2, 52, \"Cube002_1\", 2, 52, \"Cube002_1\"], [11, 53, \"Cube011_2\", 11, 53, \"Cube011_2\"], [20, 54, \"Cube020_3\", 20, 54, \"Cube020_3\"]]]];\nconst rotateSet = setIndex => {\n  const rotatedSet = rubiksCubeMatrixWithIdentifiers[setIndex].map(column => {\n    return column.map(([number, name]) => [number + 9, name]);\n  });\n  // console.log(rotatedSet);\n  rubiksCubeMatrixWithIdentifiers[setIndex] = rotatedSet;\n};\nexport const useMouseHandlers = () => {\n  _s();\n  const [downnew, setDownNew] = useState(null);\n  const [downnewCube, setDownNewCube] = useState(null);\n  const [setrot, setSetrot] = useState(null);\n  const [xyzdirection, setxyzdirection] = useState(null);\n  const [direction, setdirection] = useState(null);\n  let xyz;\n  const handleMouseDown = down => {\n    setDownNew(down);\n  };\n  const handleMouseDownCube = down => {\n    setDownNewCube(down);\n  };\n  const handleMouseUpCube = up => {};\n  const handleMouseUp = up => {\n    let first, end;\n    if (downnew) {\n      const nameToSearchDown = downnew;\n      console.log(nameToSearchDown);\n      const nameToSearchUp = up;\n      for (let i = 0; i < rubiksCubeMatrixWithIdentifiers.length; i++) {\n        for (let j = 0; j < rubiksCubeMatrixWithIdentifiers[i].length; j++) {\n          for (let k = 0; k < rubiksCubeMatrixWithIdentifiers[i][j].length; k++) {\n            const [cube, plane, name, newcube, newPlane, newname] = rubiksCubeMatrixWithIdentifiers[i][j][k];\n            if (name === nameToSearchDown) {\n              console.log(`Found corresponding number Down: ${plane}  ${cube}`);\n              first = plane;\n            }\n            if (name === nameToSearchUp) {\n              console.log(`Found corresponding number Up: ${plane} ${cube}`);\n              // rotateSet(i);\n              end = plane;\n            }\n            const isInSet = set => set.includes(first) && set.includes(end);\n            if (isInSet(set1)) {\n              // console.log(\"Both first and end are present in set1\");\n              //1\n              set = cubeset1;\n              setxyzdirection(\"x\");\n              xyz = x;\n              // return\n            } else if (isInSet(set2)) {\n              // console.log(\"Both first and end are present in set2\");\n              //2\n              set = cubeset2;\n              setxyzdirection(\"x\");\n              xyz = x;\n              // return;\n            } else if (isInSet(set3)) {\n              // console.log(\"Both first and end are present in set3\");\n              //3\n              set = cubeset3;\n              setxyzdirection(\"x\");\n              xyz = x;\n              // return;\n            } else if (isInSet(set4)) {\n              // console.log(\"Both first and end are present in set4\");\n              //4\n              set = cubeset4;\n              setxyzdirection(\"z\");\n              xyz = z;\n              // return;\n            } else if (isInSet(set5)) {\n              // console.log(\"Both first and end are present in set5\");\n              //5\n              set = cubeset5;\n              setxyzdirection(\"z\");\n              xyz = z;\n              // return;\n            } else if (isInSet(set6)) {\n              // console.log(\"Both first and end are present in set6\");\n              //6\n              set = cubeset6;\n              setxyzdirection(\"z\");\n              xyz = z;\n              // return;\n            } else if (isInSet(set7)) {\n              // console.log(\"Both first and end are present in set7\");\n              //7\n              set = cubeset7;\n              setxyzdirection(\"y\");\n              xyz = y;\n              // return;\n            } else if (isInSet(set8)) {\n              // console.log(\"Both first and end are present in set8\");\n              //8\n              set = cubeset8;\n              setxyzdirection(\"y\");\n              xyz = y;\n              // return;\n            } else if (isInSet(set9)) {\n              // console.log(\"Both first and end are present in set9\");\n              //9\n              set = cubeset9;\n              setxyzdirection(\"y\");\n              xyz = y;\n              // return;\n            } else {\n              // console.log(\"First and/or end are not present in any set\");\n            }\n            setSetrot(set);\n            console.log(\"xyzdirection\" + xyzdirection);\n            if (xyzdirection != \"x\") {\n              if (end < first) {\n                setdirection(\"c\");\n              } else if (end > first) {\n                setdirection(\"a\");\n              }\n            } else {\n              console.log(\"ok\");\n              if (end < first) {\n                setdirection(\"c\");\n              } else if (end > first) {\n                setdirection(\"a\");\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  console.log(setrot);\n  return {\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseDownCube,\n    handleMouseUpCube,\n    set: setrot,\n    xyzdirection: xyzdirection,\n    direction: direction\n  };\n};\n_s(useMouseHandlers, \"2upISNbsrU23f0P5Dhuu1x0/Wvg=\");","map":{"version":3,"names":["useState","set1","set2","set3","set4","set5","set6","set7","set8","set9","cubeset1","cubeset2","cubeset3","cubeset4","cubeset5","cubeset6","cubeset7","cubeset8","cubeset9","set","rubiksCubeMatrixWithIdentifiers","rotateSet","setIndex","rotatedSet","map","column","number","name","useMouseHandlers","_s","downnew","setDownNew","downnewCube","setDownNewCube","setrot","setSetrot","xyzdirection","setxyzdirection","direction","setdirection","xyz","handleMouseDown","down","handleMouseDownCube","handleMouseUpCube","up","handleMouseUp","first","end","nameToSearchDown","console","log","nameToSearchUp","i","length","j","k","cube","plane","newcube","newPlane","newname","isInSet","includes","x","z","y"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/mouseEventHandlers.js"],"sourcesContent":["// mouseEventHandlers.js\r\nimport {  useState } from \"react\";\r\nconst set1=[1,4,7,10,13,16,30,33,36,39,42,45];\r\nconst set2=[2,5,8,,11,14,17,29,32,35,38,41,44];\r\nconst set3=[3,6,9,12,15,18,28,31,34,37,41,43];\r\nconst set4=[1,2,3,48,51,54,34,35,36,19,22,25];\r\nconst set5=[4,5,6,47,50,53,31,32,33,20,23,26];\r\nconst set6=[7,8,9,46,49,52,28,29,30,21,24,27];\r\nconst set7=[10,11,12,46,47,48,43,44,45,25,26,27];\r\nconst set8=[13,14,15,49,50,51,40,41,42,22,23,24];\r\nconst set9=[16,17,18,52,53,54,37,38,39,19,20,21];\r\n\r\n\r\nconst cubeset1=[24,15,6,3,0,9,18,21,12];\r\nconst cubeset2=[25,16,7,4,1,10,19,22,13];\r\nconst cubeset3=[26,17,8,5,2,11,20,23,14];\r\nconst cubeset4=[24,25,26,23,20,19,18,21,22];//\r\nconst cubeset5=[15,16,17,14,11,10,9,12,13];//\r\nconst cubeset6=[6,7,8,5,2,1,0,3,4];//\r\nconst cubeset7=[6,7,8,17,26,25,24,15,16];\r\nconst cubeset8=[3,4,5,14,23,22,21,12,13];\r\nconst cubeset9=[0,1,2,11,20,19,18,9,10];\r\n\r\n\r\nlet set;\r\nconst rubiksCubeMatrixWithIdentifiers = [\r\n    //imitialcubeno,initialplaneno,initialPlanename,newcubeno,newcubeplane,newplanename\r\n    // 1\r\n    [\r\n      [[24,1, \"Cube024_3\",24,1,\"Cube024_3\"], [25,2, \"Cube025_3\",25,2,\"Cube025_3\"], [26,3, \"Cube026_3\",26,3, \"Cube026_3\"]],\r\n      [[15,4, \"Cube015_2\",15,15, \"Cube015_2\"], [16,5, \"Cube016_2\",16,5,\"Cube016_2\"], [17,6, \"Cube017_2\",17,6,\"Cube017_2\"]],\r\n      [[6,7, \"Cube006_2\",6,7,\"Cube006_2\"], [7,8, \"Cube007_2\",7,8, \"Cube007_2\"], [8,9, \"Cube008_2\",8,9,\"Cube008_2\"]],\r\n    ],\r\n    // 2\r\n    [\r\n      [[6,10, \"Cube006_4\",6,10, \"Cube006_4\"], [7,11, \"Cube007_3\",7,11,\"Cube007_3\"], [8,12, \"Cube008_4\",8,12, \"Cube008_4\"]],\r\n      [[3,13, \"Cube003_3\",3,13, \"Cube003_3\"], [4,14, \"Cube004_2\",4,14,\"Cube004_2\"], [5,15, \"Cube005_3\",5,15,\"Cube005_3\"]],\r\n      [[0,16, \"Cube000_3\",0,16,\"Cube000_3\"], [1,17, \"Cube001_3\",1,17,\"Cube001_3\"], [2,18, \"Cube002_4\",2,18,\"Cube002_4\"]],\r\n    ],\r\n    // 3\r\n    [\r\n      [[24,25, \"Cube024_4\",24,25, \"Cube024_4\"], [15,26, \"Cube015_3\",15,26,\"Cube015_3\"], [6,27, \"Cube006_3\",6,27,\"Cube006_3\"]],\r\n      [[21,22, \"Cube021_3\",21,22,\"Cube021_3\"], [12,23, \"Cube012_2\",12,23,\"Cube012_2\"], [3,24, \"Cube003_2\",5,24,\"Cube003_2\"]],\r\n      [[18,19, \"Cube018_4\",18,19, \"Cube018_4\"], [9,20, \"Cube009_3\",9,20,\"Cube009_3\"], [0,21, \"Cube000_2\",0,21,\"Cube000_2\"]],\r\n    ],\r\n    // 4\r\n    [\r\n      [[0,30, \"Cube000_1\",0,30,\"Cube000_1\"], [1,29, \"Cube001_2\",1,29,\"Cube001_2\"], [2,28, \"Cube002_3\",2,28, \"Cube002_3\"]],\r\n      [[9,33, \"Cube009_2\",9,33, \"Cube009_2\"], [10,32, \"Cube010_2\",10,32, \"Cube010_2\"], [11,31, \"Cube011_3\",11,31, \"Cube011_3\"]],\r\n      [[18,36, \"Cube018_3\",18,36,\"Cube018_3\"], [19,35, \"Cube019_3\",19,35, \"Cube019_3\"], [20,34, \"Cube020_4\",20,34,\"Cube020_4\"]],\r\n    ],\r\n    // 5\r\n    [\r\n      [[26,43, \"Cube026_2\",26,43, \"Cube026_2\"], [25,44, \"Cube025_2\",25,44,\"Cube025_2\"], [24,45, \"Cube024_2\",24,45,\"Cube024_2\"]],\r\n      [[23,40, \"Cube023_2\",23,40, \"Cube023_2\"], [22,41, \"Cube022_2\",22,41, \"Cube022_2\"], [21,42, \"Cube021_2\",21,42,\"Cube021_2\"]],\r\n      [[20,37, \"Cube020_2\",20,37, \"Cube020_2\"], [19,38, \"Cube019_2\",19,38, \"Cube019_2\"], [18,39, \"Cube018_2\",18,39,\"Cube018_2\"]],\r\n    ],\r\n    // 6\r\n    [\r\n      [[8,46, \"Cube008_3\",8,46, \"Cube008_3\"], [17,47, \"Cube017_3\",17,47, \"Cube017_3\"], [26,48, \"Cube026_4\",26,48,\"Cube026_4\"]],\r\n      [[5,49, \"Cube005_2\",5,49, \"Cube005_2\"], [14,50, \"Cube014_2\",14,50,\"Cube014_2\"], [23,51, \"Cube023_3\",23,51, \"Cube023_3\"]],\r\n      [[2,52, \"Cube002_1\",2,52,\"Cube002_1\"], [11,53, \"Cube011_2\",11,53, \"Cube011_2\"], [20,54, \"Cube020_3\",20,54,\"Cube020_3\"]],\r\n    ],\r\n];\r\n\r\nconst rotateSet = (setIndex) => {\r\n    const rotatedSet = rubiksCubeMatrixWithIdentifiers[setIndex].map((column) => {\r\n      return column.map(([number, name]) => [number + 9, name]);\r\n    });\r\n// console.log(rotatedSet);\r\n    rubiksCubeMatrixWithIdentifiers[setIndex] = rotatedSet;\r\n  };\r\n\r\n\r\nexport const useMouseHandlers = () => {\r\n  const [downnew, setDownNew] = useState(null);\r\n  const [downnewCube, setDownNewCube] = useState(null);\r\n  const [setrot, setSetrot] = useState(null); \r\n  const [xyzdirection, setxyzdirection] = useState(null); \r\n  const [direction, setdirection] = useState(null); \r\nlet xyz;\r\n  const handleMouseDown = (down) => {\r\n    setDownNew(down);\r\n  };\r\n\r\n  const handleMouseDownCube = (down) => {\r\n    setDownNewCube(down);\r\n  };\r\n\r\n  const handleMouseUpCube = (up) => {\r\n  };\r\n\r\n\r\n\r\n  const handleMouseUp = (up) => {\r\n\r\nlet first,end;\r\n    if (downnew) {\r\n        const nameToSearchDown = downnew;\r\n        console.log(nameToSearchDown);\r\n        const nameToSearchUp = up;\r\n        for (let i = 0; i < rubiksCubeMatrixWithIdentifiers.length; i++) {\r\n          for (let j = 0; j < rubiksCubeMatrixWithIdentifiers[i].length; j++) {\r\n            for (let k = 0; k < rubiksCubeMatrixWithIdentifiers[i][j].length; k++) {\r\n              const [cube,plane, name,newcube,newPlane,newname] = rubiksCubeMatrixWithIdentifiers[i][j][k];\r\n              if (name === nameToSearchDown) {\r\n                console.log(`Found corresponding number Down: ${plane}  ${cube}`);\r\n                first = plane;\r\n              }\r\n              if (name === nameToSearchUp) {\r\n                console.log(`Found corresponding number Up: ${plane} ${cube}`);\r\n                // rotateSet(i);\r\n                end = plane;\r\n                \r\n              }\r\n              const isInSet = (set) => set.includes(first) && set.includes(end);\r\n                if (isInSet(set1)) {\r\n                    // console.log(\"Both first and end are present in set1\");\r\n                    //1\r\n                    set=cubeset1;\r\n                    setxyzdirection(\"x\");\r\n                    xyz=x;\r\n                    // return\r\n                  } else if (isInSet(set2)) {\r\n                    // console.log(\"Both first and end are present in set2\");\r\n                    //2\r\n                    set=cubeset2;\r\n                    setxyzdirection(\"x\");\r\n                    xyz=x;\r\n                    // return;\r\n                  } else if (isInSet(set3)) {\r\n                    // console.log(\"Both first and end are present in set3\");\r\n                    //3\r\n                    set=cubeset3;\r\n                    setxyzdirection(\"x\");\r\n                    xyz=x;\r\n                    // return;\r\n                  } else if (isInSet(set4)) {\r\n                    // console.log(\"Both first and end are present in set4\");\r\n                    //4\r\n                    set=cubeset4;\r\n                    setxyzdirection(\"z\");\r\n                    xyz=z;\r\n                    // return;\r\n                  } else if (isInSet(set5)) {\r\n                    // console.log(\"Both first and end are present in set5\");\r\n                    //5\r\n                    set=cubeset5;\r\n                    setxyzdirection(\"z\");\r\n                    xyz=z;\r\n                    // return;\r\n                  } else if (isInSet(set6)) {\r\n                    // console.log(\"Both first and end are present in set6\");\r\n                    //6\r\n                    set=cubeset6;\r\n                    setxyzdirection(\"z\");\r\n                    xyz=z;\r\n                    // return;\r\n                  } else if (isInSet(set7)) {\r\n                    // console.log(\"Both first and end are present in set7\");\r\n                    //7\r\n                    set=cubeset7;\r\n                    setxyzdirection(\"y\");\r\n                    xyz=y;\r\n                    // return;\r\n                  } else if (isInSet(set8)) {\r\n                    // console.log(\"Both first and end are present in set8\");\r\n                    //8\r\n                    set=cubeset8;\r\n                    setxyzdirection(\"y\");\r\n                    xyz=y;\r\n                    // return;\r\n                  } else if (isInSet(set9)) {\r\n                    // console.log(\"Both first and end are present in set9\");\r\n                    //9\r\n                    set=cubeset9;\r\n                    setxyzdirection(\"y\");\r\n                    xyz=y;\r\n                    // return;\r\n                  } else {\r\n                    // console.log(\"First and/or end are not present in any set\");\r\n                  }\r\n\r\n                  setSetrot(set);\r\nconsole.log(\"xyzdirection\"+xyzdirection);\r\n                  if(xyzdirection!=\"x\"){\r\n                    if(end<first){\r\n                      setdirection(\"c\");\r\n                  }else if(end>first){\r\n                      setdirection(\"a\");\r\n                  }\r\n                  }\r\n                  else{\r\n                    console.log(\"ok\");\r\n                    if(end<first){\r\n                      setdirection(\"c\");\r\n                  }else if(end>first){\r\n                      setdirection(\"a\");\r\n                  }\r\n                  }\r\n               \r\n             \r\n            }\r\n          }\r\n        }\r\n    }\r\n\r\n\r\n  };\r\nconsole.log(setrot);\r\n  return { handleMouseDown, handleMouseUp,handleMouseDownCube,handleMouseUpCube, set: setrot ,xyzdirection:xyzdirection,direction:direction};\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}