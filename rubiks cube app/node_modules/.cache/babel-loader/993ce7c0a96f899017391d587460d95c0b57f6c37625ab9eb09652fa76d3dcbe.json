{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport * as THREE from \"three\";\nimport { useRef, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nconst rotationSpeed = 0.02;\nexport const useRubiksCubeRotations = (orbitControlsRef, nodesSubset) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const rotatingRef = useRef(false);\n  const rotate = (axis, angle) => {\n    const quaternion = new THREE.Quaternion().setFromAxisAngle(axis, angle);\n    for (const node of nodesSubset) {\n      node.applyQuaternion(quaternion);\n    }\n  };\n  const rotateFront = () => {\n    if (!rotatingRef.current) {\n      rotatingRef.current = true;\n      rotate(new THREE.Vector3(0, 0, 1), Math.PI / 2);\n      rotatingRef.current = false;\n    }\n  };\n\n  // Add more rotation functions for other faces (e.g., rotateTop, rotateBottom, etc.)\n\n  _s(useFrame(_s(() => {\n    _s();\n    if (orbitControlsRef.current) {\n      orbitControlsRef.current.addEventListener(\"change\", () => {\n        orbitControlsRef.current.enabled = false;\n      });\n      useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeyPress);\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\n      }, []);\n      const handleKeyPress = event => {\n        switch (event.key) {\n          case \"r\":\n            rotateFront();\n            break;\n          // Add more cases for other keys to trigger rotations\n          default:\n            break;\n        }\n      };\n    }\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return null;\n};\n_s2(useRubiksCubeRotations, \"E6mV5jNezhXP6jp2Vx+zqvNA9kY=\", false, function () {\n  return [useFrame];\n});","map":{"version":3,"names":["THREE","useRef","useEffect","useFrame","rotationSpeed","useRubiksCubeRotations","orbitControlsRef","nodesSubset","_s2","_s","$RefreshSig$","rotatingRef","rotate","axis","angle","quaternion","Quaternion","setFromAxisAngle","node","applyQuaternion","rotateFront","current","Vector3","Math","PI","addEventListener","enabled","document","handleKeyPress","removeEventListener","event","key"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubicCubeRotations.js"],"sourcesContent":["import * as THREE from \"three\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nconst rotationSpeed = 0.02;\r\n\r\nexport const useRubiksCubeRotations = (orbitControlsRef, nodesSubset) => {\r\n  const rotatingRef = useRef(false);\r\n\r\n  const rotate = (axis, angle) => {\r\n    const quaternion = new THREE.Quaternion().setFromAxisAngle(axis, angle);\r\n    for (const node of nodesSubset) {\r\n      node.applyQuaternion(quaternion);\r\n    }\r\n  };\r\n\r\n  const rotateFront = () => {\r\n    if (!rotatingRef.current) {\r\n      rotatingRef.current = true;\r\n      rotate(new THREE.Vector3(0, 0, 1), Math.PI / 2);\r\n      rotatingRef.current = false;\r\n    }\r\n  };\r\n\r\n  // Add more rotation functions for other faces (e.g., rotateTop, rotateBottom, etc.)\r\n\r\n  useFrame(() => {\r\n    if (orbitControlsRef.current) {\r\n      orbitControlsRef.current.addEventListener(\"change\", () => {\r\n        orbitControlsRef.current.enabled = false;\r\n      });\r\n\r\n      useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyPress);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyPress);\r\n      }, []);\r\n\r\n      const handleKeyPress = (event) => {\r\n        switch (event.key) {\r\n          case \"r\":\r\n            rotateFront();\r\n            break;\r\n          // Add more cases for other keys to trigger rotations\r\n          default:\r\n            break;\r\n        }\r\n      };\r\n    }\r\n  });\r\n\r\n  return null;\r\n};\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,MAAMC,aAAa,GAAG,IAAI;AAE1B,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,gBAAgB,EAAEC,WAAW,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACvE,MAAMC,WAAW,GAAGV,MAAM,CAAC,KAAK,CAAC;EAEjC,MAAMW,MAAM,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9B,MAAMC,UAAU,GAAG,IAAIf,KAAK,CAACgB,UAAU,CAAC,CAAC,CAACC,gBAAgB,CAACJ,IAAI,EAAEC,KAAK,CAAC;IACvE,KAAK,MAAMI,IAAI,IAAIX,WAAW,EAAE;MAC9BW,IAAI,CAACC,eAAe,CAACJ,UAAU,CAAC;IAClC;EACF,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACT,WAAW,CAACU,OAAO,EAAE;MACxBV,WAAW,CAACU,OAAO,GAAG,IAAI;MAC1BT,MAAM,CAAC,IAAIZ,KAAK,CAACsB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;MAC/Cb,WAAW,CAACU,OAAO,GAAG,KAAK;IAC7B;EACF,CAAC;;EAED;;EAEAZ,EAAA,CAAAN,QAAQ,CAAAM,EAAA,CAAC,MAAM;IAAAA,EAAA;IACb,IAAIH,gBAAgB,CAACe,OAAO,EAAE;MAC5Bf,gBAAgB,CAACe,OAAO,CAACI,gBAAgB,CAAC,QAAQ,EAAE,MAAM;QACxDnB,gBAAgB,CAACe,OAAO,CAACK,OAAO,GAAG,KAAK;MAC1C,CAAC,CAAC;MAEFxB,SAAS,CAAC,MAAM;QACdyB,QAAQ,CAACF,gBAAgB,CAAC,SAAS,EAAEG,cAAc,CAAC;QACpD,OAAO,MAAMD,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAED,cAAc,CAAC;MACtE,CAAC,EAAE,EAAE,CAAC;MAEN,MAAMA,cAAc,GAAIE,KAAK,IAAK;QAChC,QAAQA,KAAK,CAACC,GAAG;UACf,KAAK,GAAG;YACNX,WAAW,CAAC,CAAC;YACb;UACF;UACA;YACE;QACJ;MACF,CAAC;IACH;EACF,CAAC,kCAAC;EAEF,OAAO,IAAI;AACb,CAAC;AAACZ,GAAA,CA7CWH,sBAAsB;EAAA,QAoBjCF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}