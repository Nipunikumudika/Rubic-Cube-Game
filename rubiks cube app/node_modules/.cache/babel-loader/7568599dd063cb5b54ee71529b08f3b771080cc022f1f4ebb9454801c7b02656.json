{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport { Vector2, Raycaster } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset,\n  drag,\n  onDragChange\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const orbitRef = useRef();\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const groupRef = useRef();\n  const [mouseCoordinates, setMouseCoordinates] = useState(null);\n  const {\n    camera,\n    gl\n  } = useThree();\n  const raycaster = new Raycaster();\n  const mouse = new Vector2();\n  const handlePointerMove = event => {\n    // Calculate mouse coordinates in normalized device space\n    mouse.x = event.clientX / gl.domElement.clientWidth * 2 - 1;\n    mouse.y = -(event.clientY / gl.domElement.clientHeight) * 2 + 1;\n\n    // Update the picking ray with the camera and mouse position\n    raycaster.setFromCamera(mouse, camera);\n\n    // Check for intersections\n    const intersects = raycaster.intersectObjects(cubeRefs.current.map(ref => ref.current));\n    if (intersects.length > 0) {\n      // Set the mouse coordinates in world space\n      setMouseCoordinates(intersects[0].point);\n    } else {\n      setMouseCoordinates(null);\n    }\n  };\n  const handlePointerDown = event => {\n    onDragChange(false);\n    window.addEventListener(\"pointermove\", handlePointerMove, {\n      passive: true\n    });\n    window.addEventListener(\"pointerup\", handlePointerUp, {\n      passive: true\n    });\n    event.stopPropagation();\n  };\n  const handlePointerUp = () => {\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    onDragChange(true);\n  };\n  useFrame(() => {\n    orbitRef.current.enabled = drag;\n    orbitRef.current.update();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      ref: groupRef,\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[index] = {\n          current: ref\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), mouseCoordinates && /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: mouseCoordinates,\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.05, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"rlFJk+IV+XrX8HsKxLAPKjWO9qM=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","useState","OrbitControls","useFrame","useThree","Vector2","Raycaster","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","drag","onDragChange","_s","cubeRefs","orbitRef","initialRotation","Math","PI","groupRef","mouseCoordinates","setMouseCoordinates","camera","gl","raycaster","mouse","handlePointerMove","event","x","clientX","domElement","clientWidth","y","clientY","clientHeight","setFromCamera","intersects","intersectObjects","current","map","ref","length","point","handlePointerDown","window","addEventListener","passive","handlePointerUp","stopPropagation","removeEventListener","enabled","update","children","scale","rotation","onPointerDown","node","index","object","fileName","_jsxFileName","lineNumber","columnNumber","position","args","color","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport { Vector2, Raycaster } from \"three\";\r\n\r\nconst RubiksCubeModel = ({ nodesSubset, drag, onDragChange }) => {\r\n  const cubeRefs = useRef([]);\r\n  const orbitRef = useRef();\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const groupRef = useRef();\r\n  const [mouseCoordinates, setMouseCoordinates] = useState(null);\r\n\r\n  const { camera, gl } = useThree();\r\n  const raycaster = new Raycaster();\r\n  const mouse = new Vector2();\r\n\r\n  const handlePointerMove = (event) => {\r\n    // Calculate mouse coordinates in normalized device space\r\n    mouse.x = (event.clientX / gl.domElement.clientWidth) * 2 - 1;\r\n    mouse.y = -(event.clientY / gl.domElement.clientHeight) * 2 + 1;\r\n\r\n    // Update the picking ray with the camera and mouse position\r\n    raycaster.setFromCamera(mouse, camera);\r\n\r\n    // Check for intersections\r\n    const intersects = raycaster.intersectObjects(cubeRefs.current.map((ref) => ref.current));\r\n\r\n    if (intersects.length > 0) {\r\n      // Set the mouse coordinates in world space\r\n      setMouseCoordinates(intersects[0].point);\r\n    } else {\r\n      setMouseCoordinates(null);\r\n    }\r\n  };\r\n\r\n  const handlePointerDown = (event) => {\r\n    onDragChange(false);\r\n    window.addEventListener(\"pointermove\", handlePointerMove, { passive: true });\r\n    window.addEventListener(\"pointerup\", handlePointerUp, { passive: true });\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handlePointerUp = () => {\r\n    window.removeEventListener(\"pointermove\", handlePointerMove);\r\n    window.removeEventListener(\"pointerup\", handlePointerUp);\r\n    onDragChange(true);\r\n  };\r\n\r\n  useFrame(() => {\r\n    orbitRef.current.enabled = drag;\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group>\r\n      <OrbitControls ref={orbitRef} />\r\n      {mouseCoordinates && (\r\n        <mesh position={mouseCoordinates}>\r\n          <sphereGeometry args={[0.05, 32, 32]} />\r\n          <meshBasicMaterial color=\"red\" />\r\n        </mesh>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}