{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\nimport RubiksCubeModel from \"./RubiksCubeModel\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraController = () => {\n  _s();\n  const [rotateCamera, setRotateCamera] = useState(false);\n  const handleDocumentClick = event => {\n    // Replace 'model' with the actual class or id of your model\n    if (!event.target.closest('.model')) {\n      // Clicked outside the model, enable camera rotation\n      setRotateCamera(true);\n    } else {\n      // Clicked inside the model, disable camera rotation\n      setRotateCamera(false);\n    }\n  };\n  useEffect(() => {\n    // Attach event listener to the document for clicks\n    document.addEventListener('click', handleDocumentClick);\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, []); // Empty dependency array to run the effect once on mount\n\n  const handleCameraRotation = () => {\n    if (rotateCamera) {\n      // Implement your camera rotation logic here\n      console.log('Rotate the camera');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCameraRotation,\n        children: \"Rotate Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(CameraController, \"plIHSMUgoPZsFIWaOIpLUw7IgKg=\");\n_c = CameraController;\nexport default CameraController;\nvar _c;\n$RefreshReg$(_c, \"CameraController\");","map":{"version":3,"names":["RubiksCubeModel","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraController","_s","rotateCamera","setRotateCamera","handleDocumentClick","event","target","closest","document","addEventListener","removeEventListener","handleCameraRotation","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Canvas","Suspense","fallback","nodesSubset","nodesSubset1","nodesSubset2","nodesSubset3","position","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n \n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\nimport RubiksCubeModel from \"./RubiksCubeModel\";\n\nimport React, { useState, useEffect } from 'react';\n\nconst CameraController = () => {\n  const [rotateCamera, setRotateCamera] = useState(false);\n\n  const handleDocumentClick = (event) => {\n    // Replace 'model' with the actual class or id of your model\n    if (!event.target.closest('.model')) {\n      // Clicked outside the model, enable camera rotation\n      setRotateCamera(true);\n    } else {\n      // Clicked inside the model, disable camera rotation\n      setRotateCamera(false);\n    }\n  };\n\n  useEffect(() => {\n    // Attach event listener to the document for clicks\n    document.addEventListener('click', handleDocumentClick);\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, []); // Empty dependency array to run the effect once on mount\n\n  const handleCameraRotation = () => {\n    if (rotateCamera) {\n      // Implement your camera rotation logic here\n      console.log('Rotate the camera');\n    }\n  };\n\n  return (\n    <>\n     <div>\n      <button onClick={handleCameraRotation}>Rotate Camera</button>\n      \n    </div>\n    <Canvas>\n       <ambientLight />\n      <Suspense fallback={null}>\n         <RubiksCubeModel nodesSubset={nodesSubset1} />\n         <RubiksCubeModel nodesSubset={nodesSubset2} />\n         <RubiksCubeModel nodesSubset={nodesSubset3} />\n       </Suspense>\n       <pointLight position={[10, 10, 10]} />\n     </Canvas>\n    </>\n   \n  );\n};\n\nexport default CameraController;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,eAAe,MAAM,mBAAmB;AAE/C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,mBAAmB,GAAIC,KAAK,IAAK;IACrC;IACA,IAAI,CAACA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;MACnC;MACAJ,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACL;MACAA,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd;IACAa,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEL,mBAAmB,CAAC;;IAEvD;IACA,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEN,mBAAmB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIT,YAAY,EAAE;MAChB;MACAU,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACCjB,OAAA;MAAAiB,QAAA,eACCjB,OAAA;QAAQkB,OAAO,EAAEJ,oBAAqB;QAAAG,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1D,CAAC,eACNtB,OAAA,CAACuB,MAAM;MAAAN,QAAA,gBACJjB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eACjBtB,OAAA,CAACwB,QAAQ;QAACC,QAAQ,EAAE,IAAK;QAAAR,QAAA,gBACtBjB,OAAA,CAACL,eAAe;UAAC+B,WAAW,EAAEC;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACL,eAAe;UAAC+B,WAAW,EAAEE;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACL,eAAe;UAAC+B,WAAW,EAAEG;QAAa;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACXtB,OAAA;QAAY8B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACR,CAAC;AAGP,CAAC;AAAClB,EAAA,CAjDID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}