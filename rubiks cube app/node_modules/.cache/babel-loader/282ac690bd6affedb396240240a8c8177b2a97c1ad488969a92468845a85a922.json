{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as TWEEN from 'tween.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  index,\n  nodesSubset,\n  drag,\n  onDragChange,\n  mouseDownPlane,\n  mouseUpPlane,\n  mouseDownCube,\n  set,\n  xyzdirection,\n  direction\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const orbitRef = useRef();\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  // const initialRotation = [0, 0, 0];\n  const groupRef = useRef();\n  let rotationindex;\n  let checkup;\n  const handlePointerDown = event => {\n    const clickedPlane = groupRef.current.children[0].children.find(child => child === event.object);\n    if (clickedPlane) {\n      mouseDownPlane(clickedPlane.name);\n      mouseDownCube(index);\n    }\n    checkup = 1;\n    onDragChange(false);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n    event.stopPropagation();\n  };\n  useEffect(() => {\n    rotationindex = set;\n    Dragging(rotationindex);\n  }, [set]);\n  const handlePointerUp = async event => {\n    if (checkup == null) {\n      const clickedPlane = groupRef.current.children[0].children.find(child => child === event.object);\n      if (clickedPlane) {\n        mouseUpPlane(clickedPlane.name);\n      }\n      window.removeEventListener(\"pointerup\", handlePointerUp);\n      event.stopPropagation();\n    }\n    onDragChange(true);\n  };\n  const Dragging = async cubeIndices => {\n    if (cubeIndices != null) {\n      if (cubeIndices.includes(index)) {\n        if (direction === \"a\") {\n          Up();\n        } else if (direction === \"c\") {\n          Down();\n          console.log(\"down\");\n        }\n      }\n    }\n  };\n\n  // const animateRotation = (target, endRotation, duration) => {\n  //   return new Promise((resolve) => {\n  //     new TWEEN.Tween(target.rotation)\n  //       .to(endRotation, duration)\n  //       .onComplete(() => resolve())\n  //       .start();\n  //   });\n  // };\n\n  // const Up = async () => {\n  //   console.log(\"down\");\n\n  //   let initialRotation = groupRef.current.rotation.clone();\n\n  //   if (xyzdirection === \"x\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.x -= Math.PI / 30;\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //     }\n  //     console.log(groupRef.current.rotation);\n  //   } else if (xyzdirection === \"y\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.y -= Math.PI / 30;\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //     }\n  //   } else if (xyzdirection === \"z\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.z -= Math.PI / 30;\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //     }\n  //   }\n  // };\n\n  // const Down = async () => {\n  //   let initialRotation = groupRef.current.rotation.clone(); \n  //   if (xyzdirection === \"x\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.x += Math.PI / 30;\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //       console.log(i);\n  //     }\n  //     console.log(groupRef.current.rotation);\n  //   } else if (xyzdirection === \"y\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.y += Math.PI / 30;\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //     }\n  //   } else if (xyzdirection === \"z\") {\n  //     for (let i = 0; i < 15; i++) {\n  //       initialRotation.z += Math.PI / 30;\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\n  //     }\n  //   }\n  // };\n\n  const rotateAroundWorldAxis = (object, axis, radians) => {\n    const rotationMatrix = new THREE.Matrix4();\n    rotationMatrix.makeRotationAxis(axis.normalize(), radians);\n    object.matrix.multiply(rotationMatrix);\n    object.rotation.setFromRotationMatrix(object.matrix);\n  };\n  const rotateGroupAroundWorldX = async (group, radians) => {\n    const axis = new THREE.Vector3(1, 0, 0); // X-axis\n\n    for (let i = 0; i < 15; i++) {\n      rotateAroundWorldAxis(group, axis, radians / 15);\n      await animateRotation(group, group.rotation, 100);\n    }\n  };\n  const Up = async () => {\n    await rotateGroupAroundWorldX(groupRef.current, Math.PI / 2); // Rotate 90 degrees\n  };\n  const Down = async () => {\n    await rotateGroupAroundWorldX(groupRef.current, -Math.PI / 2); // Rotate -90 degrees\n  };\n  useFrame(() => {\n    orbitRef.current.enabled = drag;\n    orbitRef.current.update();\n    TWEEN.update();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      className: \"group\",\n      ref: groupRef,\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      onPointerUp: handlePointerUp,\n      position: [0, 0, 0],\n      children: nodesSubset.map((node, nodeIndex) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[nodeIndex] = ref\n      }, nodeIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitRef,\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"axesHelper\", {\n      args: [5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"WTrdMV6XHQQtmWVDv63KzAtrK/4=\", false, function () {\n  return [useFrame];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useEffect","useRef","OrbitControls","useFrame","TWEEN","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","index","nodesSubset","drag","onDragChange","mouseDownPlane","mouseUpPlane","mouseDownCube","set","xyzdirection","direction","_s","cubeRefs","orbitRef","initialRotation","Math","PI","groupRef","rotationindex","checkup","handlePointerDown","event","clickedPlane","current","children","find","child","object","name","window","addEventListener","handlePointerUp","stopPropagation","Dragging","removeEventListener","cubeIndices","includes","Up","Down","console","log","rotateAroundWorldAxis","axis","radians","rotationMatrix","THREE","Matrix4","makeRotationAxis","normalize","matrix","multiply","rotation","setFromRotationMatrix","rotateGroupAroundWorldX","group","Vector3","i","animateRotation","enabled","update","className","ref","scale","onPointerDown","onPointerUp","position","map","node","nodeIndex","fileName","_jsxFileName","lineNumber","columnNumber","enableZoom","args","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport * as TWEEN from 'tween.js';\r\n\r\n\r\nconst RubiksCubeModel = ({\r\n  index,\r\n  nodesSubset,\r\n  drag,\r\n  onDragChange,\r\n  mouseDownPlane,\r\n  mouseUpPlane,\r\n  mouseDownCube,\r\n  set,\r\n  xyzdirection,\r\n  direction,\r\n}) => {\r\n  const cubeRefs = useRef([]);\r\n  const orbitRef = useRef();\r\n  const initialRotation = [Math.PI / 6, Math.PI/4, 0];\r\n  // const initialRotation = [0, 0, 0];\r\n  const groupRef = useRef();\r\n  let rotationindex;\r\n\r\n  let checkup;\r\n  const handlePointerDown = (event) => {\r\n    const clickedPlane = groupRef.current.children[0].children.find(\r\n      (child) => child === event.object\r\n    );\r\n    if (clickedPlane) {\r\n      mouseDownPlane(clickedPlane.name);\r\n      mouseDownCube(index);\r\n    }\r\n    checkup = 1;\r\n    onDragChange(false);\r\n    window.addEventListener(\"pointerup\", handlePointerUp);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    rotationindex = set;\r\n    Dragging(rotationindex);\r\n  }, [set]);\r\n\r\n  const handlePointerUp = async (event) => {\r\n    if (checkup == null) {\r\n      const clickedPlane = groupRef.current.children[0].children.find(\r\n        (child) => child === event.object\r\n      );\r\n      if (clickedPlane) {\r\n        mouseUpPlane(clickedPlane.name);\r\n      }\r\n      window.removeEventListener(\"pointerup\", handlePointerUp);\r\n      event.stopPropagation();\r\n    }\r\n    onDragChange(true);\r\n  };\r\n\r\n  const Dragging = async (cubeIndices) => {\r\n    if (cubeIndices != null) {\r\n      if (cubeIndices.includes(index)) {\r\n        if (direction === \"a\") {\r\n          Up();  \r\n        } else if(direction === \"c\"){\r\n          Down();\r\n          console.log(\"down\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // const animateRotation = (target, endRotation, duration) => {\r\n  //   return new Promise((resolve) => {\r\n  //     new TWEEN.Tween(target.rotation)\r\n  //       .to(endRotation, duration)\r\n  //       .onComplete(() => resolve())\r\n  //       .start();\r\n  //   });\r\n  // };\r\n\r\n\r\n\r\n  // const Up = async () => {\r\n  //   console.log(\"down\");\r\n\r\n  //   let initialRotation = groupRef.current.rotation.clone();\r\n  \r\n  //   if (xyzdirection === \"x\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.x -= Math.PI / 30;\r\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //     }\r\n  //     console.log(groupRef.current.rotation);\r\n  //   } else if (xyzdirection === \"y\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.y -= Math.PI / 30;\r\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //     }\r\n  //   } else if (xyzdirection === \"z\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.z -= Math.PI / 30;\r\n  //       await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //     }\r\n  //   }\r\n  // };\r\n  \r\n\r\n\r\n\r\n  // const Down = async () => {\r\n  //   let initialRotation = groupRef.current.rotation.clone(); \r\n  //   if (xyzdirection === \"x\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.x += Math.PI / 30;\r\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //       console.log(i);\r\n  //     }\r\n  //     console.log(groupRef.current.rotation);\r\n  //   } else if (xyzdirection === \"y\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.y += Math.PI / 30;\r\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //     }\r\n  //   } else if (xyzdirection === \"z\") {\r\n  //     for (let i = 0; i < 15; i++) {\r\n  //       initialRotation.z += Math.PI / 30;\r\n  //     await animateRotation(groupRef.current, { x: initialRotation.x, y: initialRotation.y, z: initialRotation.z }, 100);\r\n  //     }\r\n  //   }\r\n  // };\r\n  \r\n  \r\n\r\n  const rotateAroundWorldAxis = (object, axis, radians) => {\r\n    const rotationMatrix = new THREE.Matrix4();\r\n    rotationMatrix.makeRotationAxis(axis.normalize(), radians);\r\n    object.matrix.multiply(rotationMatrix);\r\n    object.rotation.setFromRotationMatrix(object.matrix);\r\n  };\r\n  \r\n  const rotateGroupAroundWorldX = async (group, radians) => {\r\n    const axis = new THREE.Vector3(1, 0, 0); // X-axis\r\n  \r\n    for (let i = 0; i < 15; i++) {\r\n      rotateAroundWorldAxis(group, axis, radians / 15);\r\n      await animateRotation(group, group.rotation, 100);\r\n    }\r\n  };\r\n  \r\n  const Up = async () => {\r\n    await rotateGroupAroundWorldX(groupRef.current, Math.PI / 2); // Rotate 90 degrees\r\n  };\r\n  \r\n  const Down = async () => {\r\n    await rotateGroupAroundWorldX(groupRef.current, -Math.PI / 2); // Rotate -90 degrees\r\n  };\r\n\r\n  \r\n  \r\n  useFrame(() => {\r\n    orbitRef.current.enabled = drag;\r\n    orbitRef.current.update();\r\n    TWEEN.update()\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group\r\n        className=\"group\"\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerUp={handlePointerUp}\r\n        position={[0, 0, 0]}\r\n      >\r\n        {nodesSubset.map((node, nodeIndex) => (\r\n          <primitive\r\n            key={nodeIndex}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[nodeIndex] = ref)} \r\n          />\r\n        ))}\r\n      </group>\r\n      <OrbitControls ref={orbitRef} enableZoom={false} />\r\n      <axesHelper args={[5]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}