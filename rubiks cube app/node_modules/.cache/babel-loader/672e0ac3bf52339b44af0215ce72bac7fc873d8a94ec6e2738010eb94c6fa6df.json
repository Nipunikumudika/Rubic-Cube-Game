{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useMemo, useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"uW7yytMC9TFRF8aATEwdhN7RMdg=\", false, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation\n}) => {\n  _s2();\n  const cubeRefs = useRef([]);\n  const [isDragging, setDragging] = useState(false);\n  const [startY, setStartY] = useState(null);\n  let rot = 0;\n\n  // const handlePointerDown = (event) => {\n  //   console.log(Math.PI/2);\n  //   event.stopPropagation();\n  //   setDragging(true);    \n  // };\n\n  const handlePointerDown = event => {\n    setStartY(event.clientY);\n    // Add event listeners for pointer move and pointer up\n    console.log('point down');\n    window.addEventListener('pointermove', handlePointerMove);\n    window.addEventListener('pointerup', handlePointerUp);\n    event.stopPropagation();\n  };\n  const handlePointerMove = event => {\n    console.log('Move');\n    console.log(startY);\n    if (startY !== null) {\n      const deltaY = event.clientY - startY;\n      console.log(deltaY);\n      // Check the direction of the drag (upward or downward)\n      if (deltaY > 0) {\n        // Dragging downward\n        console.log('Dragging downward');\n      } else if (deltaY < 0) {\n        // Dragging upward\n        console.log('Dragging upward');\n      }\n    }\n  };\n  const handlePointerUp = () => {\n    console.log('point up');\n    // Clean up event listeners when dragging stops\n    window.removeEventListener('pointermove', handlePointerMove);\n    window.removeEventListener('pointerup', handlePointerUp);\n    setStartY(null);\n    setDragging(true);\n  };\n  useFrame(() => {\n    if (isDragging) {\n      //console.log(rot<Math.PI/2);\n      cubeRefs.current.forEach((cubeRef, index) => {\n        cubeRef.current.rotation.z += 0.01;\n        rot = cubeRef.current.rotation.z + 0.001;\n        if (rot % (Math.PI / 2) <= 0.01) {\n          setDragging(false);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    onPointerDown: handlePointerDown,\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node,\n      ref: ref => cubeRefs.current[index] = {\n        current: ref\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"y9ij/6TrMV5clGWT1Z9nB+iyArQ=\", false, function () {\n  return [useFrame];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useRef","useState","useEffect","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","nodesSubset1","children","slice","nodesSubset2","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","fallback","position","RubiksCubeModel","nodesSubset","setRotation","_c","_s2","cubeRefs","isDragging","setDragging","startY","setStartY","rot","handlePointerDown","event","clientY","console","log","window","addEventListener","handlePointerMove","handlePointerUp","stopPropagation","deltaY","removeEventListener","current","forEach","cubeRef","index","z","scale","onPointerDown","map","node","object","ref","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["import React, { Suspense, useMemo,useRef,useState ,useEffect} from 'react';\nimport { Canvas ,useFrame} from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\nconst RubiksCube = () => {\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]);//only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]);//two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n\n  return (\n    <Canvas>\n      <ambientLight />\n      {/* <OrbitControls enableZoom={false} /> */}\n      <Suspense fallback={null}>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel nodesSubset={nodesSubset1} rotation={rotationSubset1} setRotation={setRotationSubset1}/>\n        </group>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel nodesSubset={nodesSubset2} rotation={rotationSubset2} setRotation={setRotationSubset2}/>\n        </group>\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nconst RubiksCubeModel = ({ nodesSubset,rotation, setRotation }) => {\n  const cubeRefs = useRef([]);\n  const [isDragging, setDragging] = useState(false);\n  const [startY, setStartY] = useState(null);\n let rot=0;\n\n  // const handlePointerDown = (event) => {\n  //   console.log(Math.PI/2);\n  //   event.stopPropagation();\n  //   setDragging(true);    \n  // };\n\n  const handlePointerDown = (event) => {\n    setStartY(event.clientY);\n    // Add event listeners for pointer move and pointer up\n    console.log('point down');\n    window.addEventListener('pointermove', handlePointerMove);\n    window.addEventListener('pointerup', handlePointerUp);\n    event.stopPropagation();\n  };\n\n  const handlePointerMove = (event) => {\n    console.log('Move');\n    console.log(startY);\n\n    if (startY !== null) {\n      const deltaY = event.clientY - startY;\n      console.log(deltaY);\n      // Check the direction of the drag (upward or downward)\n      if (deltaY > 0) {\n        // Dragging downward\n        console.log('Dragging downward');\n      } else if (deltaY < 0) {\n        // Dragging upward\n        console.log('Dragging upward');\n      }\n    }\n  };\n\n  const handlePointerUp = () => {\n    console.log('point up');\n    // Clean up event listeners when dragging stops\n    window.removeEventListener('pointermove', handlePointerMove);\n    window.removeEventListener('pointerup', handlePointerUp);\n    setStartY(null);  \n    setDragging(true); \n  };\n\n  useFrame(() => {\n    if (isDragging ) {\n      //console.log(rot<Math.PI/2);\n      cubeRefs.current.forEach((cubeRef, index) => {\n        cubeRef.current.rotation.z += 0.01;\n        rot=cubeRef.current.rotation.z+0.001;\n        if (rot %( Math.PI / 2)<=0.01) {\n          setDragging(false);\n        }\n      });\n    }\n  });\n\n\n\n  return (\n    <group scale={[0.3, 0.3, 0.3]} onPointerDown={handlePointerDown}>\n      {nodesSubset.map((node, index) => (\n        <primitive\n          key={index}\n          object={node}\n          ref={(ref) => (cubeRefs.current[index] = { current: ref })}\n        />\n      ))}\n    </group>\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}