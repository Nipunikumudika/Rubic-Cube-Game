{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, Suspense, useState } from 'react';\nimport { Canvas, useFrame, extend } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\n// Extend three.js with the OrbitControls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls\n});\nconst RotatablePart = ({\n  object,\n  enableRotation\n}) => {\n  _s();\n  const part = useRef();\n  useFrame(() => {\n    if (enableRotation && part.current) {\n      part.current.rotation.x += 0.01; // Adjust rotation speed as needed\n    }\n  });\n\n  // Set the scale for the part you want to rotate\n  object.scale.set(1, 1, 1);\n\n  // Conditional rendering based on enableRotation prop\n  if (enableRotation) {\n    return /*#__PURE__*/_jsxDEV(\"primitive\", {\n      ref: part,\n      object: object\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null;\n  }\n};\n_s(RotatablePart, \"jqfz7ZItnmtEz4Sw9zFsGhxAuGg=\", false, function () {\n  return [useFrame];\n});\n_c = RotatablePart;\nconst RubiksCube = () => {\n  _s2();\n  const [isRotating, setRotating] = useState(false);\n  const handlePointerMissed = () => {\n    setRotating(false);\n  };\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    onPointerMissed: handlePointerMissed,\n    onMouseDown: () => setRotating(true),\n    onMouseUp: () => setRotating(false),\n    onTouchStart: () => setRotating(true),\n    onTouchEnd: () => setRotating(false),\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(RotatablePart, {\n        object: scene.children[0],\n        enableRotation: isRotating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RotatablePart, {\n        object: scene.children[1],\n        enableRotation: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCube, \"GkVZ/caw7raorDZPnOoX0kf2B1g=\", true);\n_c2 = RubiksCube;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatablePart\");\n$RefreshReg$(_c2, \"RubiksCube\");","map":{"version":3,"names":["React","useRef","Suspense","useState","Canvas","useFrame","extend","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","RotatablePart","object","enableRotation","_s","part","current","rotation","x","scale","set","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","RubiksCube","_s2","isRotating","setRotating","handlePointerMissed","scene","useLoader","onPointerMissed","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","children","fallback","enableZoom","position","_c2","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { useRef, Suspense, useState } from 'react';\nimport { Canvas, useFrame, extend } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\n// Extend three.js with the OrbitControls\nextend({ OrbitControls });\n\nconst RotatablePart = ({ object, enableRotation }) => {\n  const part = useRef();\n\n  useFrame(() => {\n    if (enableRotation && part.current) {\n      part.current.rotation.x += 0.01; // Adjust rotation speed as needed\n    }\n  });\n\n  // Set the scale for the part you want to rotate\n  object.scale.set(1, 1, 1);\n\n  // Conditional rendering based on enableRotation prop\n  if (enableRotation) {\n    return <primitive ref={part} object={object} />;\n  } else {\n    return null;\n  }\n};\n\nconst RubiksCube = () => {\n  const [isRotating, setRotating] = useState(false);\n\n  const handlePointerMissed = () => {\n    setRotating(false);\n  };\n\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  return (\n   \n    <Canvas\n      onPointerMissed={handlePointerMissed}\n      onMouseDown={() => setRotating(true)}\n      onMouseUp={() => setRotating(false)}\n      onTouchStart={() => setRotating(true)}\n      onTouchEnd={() => setRotating(false)}\n    >\n      <ambientLight />\n      <Suspense fallback={null}>\n        {/* Enable rotation for the first child */}\n        <RotatablePart object={scene.children[0]} enableRotation={isRotating} />\n        {/* Disable rotation for the second child */}\n        <RotatablePart object={scene.children[1]} enableRotation={false} />\n      </Suspense>\n      <OrbitControls enableZoom={false} />\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}