{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect, useState } from \"react\";\n// // import { OrbitControls } from \"@react-three/drei\";\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// import { Canvas, useThree } from \"react-three-fiber\";\n// import * as THREE from \"three\";\n// import { CameraControls } from \"@react-three/drei\";\n\n// const RubiksCubeModel = ({ nodesSubset }) => {\n\n//   const cubeRefs = useRef([]);\n//   const startYRef = useRef(0);\n//   const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n//   const groupRef = useRef();\n//   const [lockOrbitControls, setLockOrbitControls] = useState(true);\n// let a=1;\n//   let controls;\n//   const { camera, gl } = useThree();\n//   const CameraController = () => {\n\n//     useEffect(\n//       () => {\n//         controls = new OrbitControls(camera, gl.domElement,lockOrbitControls);\n//         if(a==0){\n//           controls.enabled=false;\n//           console.log(\"okkkkkkkkkkkkkk\");\n//         }\n//         controls.minDistance = 3;\n//         controls.maxDistance = 20;\n//         return () => {\n//           controls.dispose();\n//         };\n//       },\n//       [camera, gl,lockOrbitControls]\n//     );\n//     return null;\n//   };\n\n//   const handlePointerDown = (event) => {\n//     if (controls) {\n//       controls.enabled = false;\n//       controls.dispose();\n//       controls.update();\n//     }\n\n//     console.log(\"down\");\n//     startYRef.current = event.clientY;\n//     if (event.target.tagName === \"CANVAS\") {\n//       console.log(\"outside true\");\n//     } else {\n//       console.log(\"inside false\");\n//     }\n\n//     window.addEventListener(\"pointermove\", handlePointerMove);\n//     window.addEventListener(\"pointerup\", handlePointerUp);\n//     event.stopPropagation();\n//   };\n\n//   let deltaY;\n\n//   const handlePointerMove = (event) => {\n//     console.log(\"move\");\n//     const startY = startYRef.current;\n//     if (startY !== null) {\n//       deltaY = event.clientY - startY;\n//     }\n//   };\n\n//   let targetRot = 0;\n\n//   const handlePointerUp = async () => {\n//     console.log(\"up\");\n//     window.removeEventListener(\"pointermove\", handlePointerMove);\n//     window.removeEventListener(\"pointerup\", handlePointerUp);\n//     if (deltaY > 0) {\n//       cubeRefs.current.forEach((cubeRef, index) => {\n//         targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n//       });\n\n//       DraggingDown();\n//       // controls.enableRotate = true;\n//       deltaY = 0;\n//     } else if (deltaY < 0) {\n//       cubeRefs.current.forEach((cubeRef, index) => {\n//         targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n//         console.log(cubeRef.current.rotation.z);\n//       });\n\n//       DraggingUp();\n//       // controls.enableRotate = true;\n//       deltaY = 0;\n//     }\n//   };\n\n//   const DraggingDown = async () => {\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n//         cubeRef.current.rotation.z += Math.PI / 10;\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\n//         await new Promise((resolve) => setTimeout(resolve, 1));\n//       }\n//     });\n//   };\n\n//   const DraggingUp = async () => {\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n//         cubeRef.current.rotation.z -= Math.PI / 10;\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\n//         await new Promise((resolve) => setTimeout(resolve, 1));\n//       }\n//     });\n//   };\n\n//   return (\n//     <>\n\n//       <group\n//         ref={groupRef}\n//         scale={[0.3, 0.3, 0.3]}\n//         rotation={initialRotation}\n//         onPointerDown={handlePointerDown}\n//       >\n//         {nodesSubset.map((node, index) => (\n//           <primitive\n//             key={index}\n//             object={node}\n//             ref={(ref) => (cubeRefs.current[index] = { current: ref })}\n//           />\n//         ))}\n//       </group>\n//       <CameraController />\n//     </>\n//   );\n// };\n\n// export default RubiksCubeModel;\n\nimport React, { useEffect, useRef } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = () => {\n  _s();\n  const scene = useRef();\n  const pivot = useRef();\n  const cubes = [];\n  scene.background = new THREE.Color(0x222222);\n  const camera = new THREE.PerspectiveCamera(75, 600 / 450, 0.1, 1000);\n  camera.position.set(10, 8, 10);\n  const renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\")\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(600, 450);\n  const raycaster = new THREE.Raycaster();\n  const pointer = new THREE.Vector2();\n  const radStep = Math.PI / 2 / 50;\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.enabled = false;\n  let draggable = {\n    isDragging: false,\n    cube: null,\n    direction: null,\n    position: null,\n    mouseX: 0,\n    mouseY: 0\n  };\n  let pan = {\n    isPanning: false,\n    mouseX: 0,\n    mouseY: 0\n  };\n  const cubesColors = [[[[0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x000000], [0x000000, 0xffd500, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x009b48], [0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x000000], [0x000000, 0xffd500, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x009b48], [0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x000000], [0x000000, 0xffd500, 0xb90000, 0x000000, 0xff5900, 0x000000]]], [[[0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000], [0x000000, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48], [0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000], [0x000000, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48], [0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000], [0x000000, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000]]], [[[0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48], [0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000], [0xffffff, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000]], [[0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48], [0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000], [0xffffff, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000]], [[0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48], [0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000], [0xffffff, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000]]]];\n  const onMouseDown = event => {\n    pointer.x = event.clientX / 600 * 2 - 1;\n    pointer.y = -(event.clientY / 450) * 2 + 1;\n    raycaster.setFromCamera(pointer, camera);\n    const intersects = raycaster.intersectObjects(cubes, false);\n    if (draggable.intersect == null) {\n      draggable.intersect = intersects[0];\n    }\n    if (intersects.length > 0) {\n      controls.enabled = false;\n      draggable.isDragging = true;\n      draggable.mouseX = event.clientX;\n      draggable.mouseY = event.clientY;\n      draggable.cube = intersects[0].object;\n      const intersectPoint = new THREE.Vector3(...intersects[0].point.toArray().map(c => +c.toFixed(3)));\n      const objPos = new THREE.Vector3(...intersects[0].object.position.toArray().map(c => +c.toFixed(3)));\n      if (intersectPoint.z == objPos.z + 1) {\n        draggable.direction = \"front\";\n      } else if (intersectPoint.y == objPos.y + 1) {\n        draggable.direction = \"top\";\n      } else if (intersectPoint.x == objPos.x + 1) {\n        draggable.direction = \"side\";\n      }\n    } else if (!controls.enabled) {\n      pan.isPanning = true;\n      pan.mouseX = event.clientX;\n      pan.mouseY = event.clientY;\n    }\n  };\n  const onMouseUp = () => {\n    draggable.isDragging = false;\n    pan.isPanning = false;\n  };\n  const onMouseMove = event => {\n    if (draggable.isDragging) {\n      if (event.clientY > draggable.mouseY + 50 || event.clientY < draggable.mouseY - 50) {\n        if (draggable.direction == \"side\") {\n          doRotation(\"z\", Math.sign(event.clientY - draggable.mouseY) * -1, draggable.cube);\n          draggable.isDragging = false;\n        } else if (draggable.direction == \"front\") {\n          doRotation(\"x\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n          draggable.isDragging = false;\n        }\n      } else if (event.clientX > draggable.mouseX + 20 && event.clientY < draggable.mouseY - 20 || event.clientX < draggable.mouseX - 20 && event.clientY > draggable.mouseY + 20) {\n        if (draggable.direction == \"top\") {\n          doRotation(\"x\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n          draggable.isDragging = false;\n        } else {\n          doRotation(\"y\", Math.sign(event.clientX - draggable.mouseX), draggable.cube);\n          draggable.isDragging = false;\n        }\n      } else if (event.clientX < draggable.mouseX - 20 && event.clientY < draggable.mouseY - 20 || event.clientX > draggable.mouseX + 20 && event.clientY > draggable.mouseY + 20) {\n        if (draggable.direction == \"top\") {\n          doRotation(\"z\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\n          draggable.isDragging = false;\n        } else {\n          doRotation(\"y\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\n          draggable.isDragging = false;\n        }\n      }\n    } else if (pan.isPanning) {\n      if (event.clientX > pan.mouseX + 20 || event.clientX < pan.mouseX - 20) {\n        for (let i = 0; i < 27; i++) {\n          pivot.attach(cubes[i]);\n        }\n        rotateOnAxis(\"y\", Math.sign(event.clientX - pan.mouseX));\n        pan.isPanning = false;\n      } else if (event.clientY > pan.mouseY + 20 || event.clientY < pan.mouseY - 20) {\n        for (let i = 0; i < 27; i++) {\n          pivot.attach(cubes[i]);\n        }\n        if (event.clientX > 600 / 2) {\n          rotateOnAxis(\"z\", Math.sign(event.clientY - pan.mouseY) * -1);\n        } else {\n          rotateOnAxis(\"x\", Math.sign(event.clientY - pan.mouseY));\n        }\n        pan.isPanning = false;\n      }\n    }\n  };\n  const createCubes = () => {\n    let cubeIndex = 0;\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n    function getMaterial(colors) {\n      const mat = [];\n      for (let i = 0; i < 6; i++) {\n        mat[i] = new THREE.MeshStandardMaterial({\n          color: colors[i]\n        });\n      }\n      return mat;\n    }\n    for (let x = -1; x <= 1; x += 1) {\n      for (let y = -1; y <= 1; y += 1) {\n        for (let z = -1; z <= 1; z += 1) {\n          const mat = getMaterial(cubesColors[x + 1][y + 1][z + 1]);\n          const cube = new THREE.Mesh(geometry, mat);\n          cube.position.set(x * 2.1, y * 2.1, z * 2.1);\n          cube.userData.index = cubeIndex;\n          cubeIndex++;\n          cubes.push(cube);\n          scene.add(cube);\n        }\n      }\n    }\n  };\n  const doRotation = (axis, direction, cube) => {\n    for (let i = 0; i < 27; i++) {\n      if (Math.abs(cubes[i].position[axis] - cube.position[axis]) < 1) {\n        pivot.attach(cubes[i]);\n      }\n    }\n    rotateOnAxis(axis, direction);\n  };\n  const rotateOnAxis = (axis, direction, angle = Math.PI / 2, done = 0) => {\n    if (done >= angle) {\n      let len = pivot.children.length;\n      for (let i = 0; i < len; i++) {\n        scene.attach(pivot.children[0]);\n      }\n      pivot.rotation.set(0, 0, 0);\n      return;\n    }\n    done += radStep;\n    switch (axis) {\n      case \"x\":\n        {\n          pivot.rotateX(radStep * direction);\n          break;\n        }\n      case \"y\":\n        {\n          pivot.rotateY(radStep * direction);\n          break;\n        }\n      case \"z\":\n        {\n          pivot.rotateZ(radStep * direction);\n          break;\n        }\n    }\n    requestAnimationFrame(() => rotateOnAxis(axis, direction, angle, done));\n  };\n  useEffect(() => {\n    createCubes();\n    window.addEventListener('pointerdown', onMouseDown);\n    window.addEventListener('pointermove', onMouseMove);\n    window.addEventListener('pointerup', onMouseUp);\n    return () => {\n      window.removeEventListener('pointerdown', onMouseDown);\n      window.removeEventListener('pointermove', onMouseMove);\n      window.removeEventListener('pointerup', onMouseUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [10, 8, 10],\n      fov: 75,\n      near: 0.1,\n      far: 1000\n    },\n    onCreated: ({\n      gl\n    }) => {\n      gl.setSize(600, 450);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      color: 0xffffff,\n      intensity: 0.69\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [1.5, 5, 3],\n      color: 0xffffff,\n      intensity: 0.36\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [-1.5, -5, -3],\n      color: 0xffffff,\n      intensity: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n      makeDefault: true,\n      position: [10, 8, 10],\n      fov: 75,\n      near: 0.1,\n      far: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: pivot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), cubes.map((cube, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: cube.ref,\n      position: cube.position,\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [2, 2, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), cube.materials.map((color, i) => /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCubeModel, \"Rc5bG4QID8SVhEQkPTJZa5TJ+Y8=\");\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useEffect","useRef","Canvas","OrbitControls","PerspectiveCamera","THREE","jsxDEV","_jsxDEV","RubiksCubeModel","_s","scene","pivot","cubes","background","Color","camera","position","set","renderer","WebGLRenderer","canvas","document","querySelector","setPixelRatio","window","devicePixelRatio","setSize","raycaster","Raycaster","pointer","Vector2","radStep","Math","PI","controls","domElement","enabled","draggable","isDragging","cube","direction","mouseX","mouseY","pan","isPanning","cubesColors","onMouseDown","event","x","clientX","y","clientY","setFromCamera","intersects","intersectObjects","intersect","length","object","intersectPoint","Vector3","point","toArray","map","c","toFixed","objPos","z","onMouseUp","onMouseMove","doRotation","sign","i","attach","rotateOnAxis","createCubes","cubeIndex","geometry","BoxGeometry","getMaterial","colors","mat","MeshStandardMaterial","color","Mesh","userData","index","push","add","axis","abs","angle","done","len","children","rotation","rotateX","rotateY","rotateZ","requestAnimationFrame","addEventListener","removeEventListener","fov","near","far","onCreated","gl","intensity","fileName","_jsxFileName","lineNumber","columnNumber","makeDefault","ref","args","materials","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["// import React, { useRef, useEffect, useState } from \"react\";\r\n// // import { OrbitControls } from \"@react-three/drei\";\r\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n// import { Canvas, useThree } from \"react-three-fiber\";\r\n// import * as THREE from \"three\";\r\n// import { CameraControls } from \"@react-three/drei\";\r\n\r\n// const RubiksCubeModel = ({ nodesSubset }) => {\r\n\r\n//   const cubeRefs = useRef([]);\r\n//   const startYRef = useRef(0);\r\n//   const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n//   const groupRef = useRef();\r\n//   const [lockOrbitControls, setLockOrbitControls] = useState(true);\r\n// let a=1;\r\n//   let controls;\r\n//   const { camera, gl } = useThree();\r\n//   const CameraController = () => {\r\n  \r\n    \r\n//     useEffect(\r\n//       () => {\r\n//         controls = new OrbitControls(camera, gl.domElement,lockOrbitControls);\r\n//         if(a==0){\r\n//           controls.enabled=false;\r\n//           console.log(\"okkkkkkkkkkkkkk\");\r\n//         }\r\n//         controls.minDistance = 3;\r\n//         controls.maxDistance = 20;\r\n//         return () => {\r\n//           controls.dispose();\r\n//         };\r\n//       },\r\n//       [camera, gl,lockOrbitControls]\r\n//     );\r\n//     return null;\r\n//   };\r\n\r\n//   const handlePointerDown = (event) => {\r\n//     if (controls) {\r\n//       controls.enabled = false;\r\n//       controls.dispose();\r\n//       controls.update();\r\n//     }\r\n\r\n \r\n//     console.log(\"down\");\r\n//     startYRef.current = event.clientY;\r\n//     if (event.target.tagName === \"CANVAS\") {\r\n//       console.log(\"outside true\");\r\n//     } else {\r\n//       console.log(\"inside false\");\r\n//     }\r\n\r\n//     window.addEventListener(\"pointermove\", handlePointerMove);\r\n//     window.addEventListener(\"pointerup\", handlePointerUp);\r\n//     event.stopPropagation();\r\n//   };\r\n\r\n//   let deltaY;\r\n\r\n//   const handlePointerMove = (event) => {\r\n//     console.log(\"move\");\r\n//     const startY = startYRef.current;\r\n//     if (startY !== null) {\r\n//       deltaY = event.clientY - startY;\r\n//     }\r\n//   };\r\n\r\n//   let targetRot = 0;\r\n\r\n//   const handlePointerUp = async () => {\r\n//     console.log(\"up\");\r\n//     window.removeEventListener(\"pointermove\", handlePointerMove);\r\n//     window.removeEventListener(\"pointerup\", handlePointerUp);\r\n//     if (deltaY > 0) {\r\n//       cubeRefs.current.forEach((cubeRef, index) => {\r\n//         targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n//       });\r\n\r\n//       DraggingDown();\r\n//       // controls.enableRotate = true;\r\n//       deltaY = 0;\r\n//     } else if (deltaY < 0) {\r\n//       cubeRefs.current.forEach((cubeRef, index) => {\r\n//         targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n//         console.log(cubeRef.current.rotation.z);\r\n//       });\r\n\r\n//       DraggingUp();\r\n//       // controls.enableRotate = true;\r\n//       deltaY = 0;\r\n//     }\r\n//   };\r\n\r\n//   const DraggingDown = async () => {\r\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\r\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n//         cubeRef.current.rotation.z += Math.PI / 10;\r\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\r\n//         await new Promise((resolve) => setTimeout(resolve, 1));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   const DraggingUp = async () => {\r\n//     cubeRefs.current.forEach(async (cubeRef, index) => {\r\n//       while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n//         cubeRef.current.rotation.z -= Math.PI / 10;\r\n//         await new Promise((resolve) => requestAnimationFrame(resolve));\r\n//         await new Promise((resolve) => setTimeout(resolve, 1));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n\r\n//       <group\r\n//         ref={groupRef}\r\n//         scale={[0.3, 0.3, 0.3]}\r\n//         rotation={initialRotation}\r\n//         onPointerDown={handlePointerDown}\r\n//       >\r\n//         {nodesSubset.map((node, index) => (\r\n//           <primitive\r\n//             key={index}\r\n//             object={node}\r\n//             ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n//           />\r\n//         ))}\r\n//       </group>\r\n//       <CameraController />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default RubiksCubeModel;\r\n\r\n\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Canvas } from 'react-three-fiber';\r\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\nconst RubiksCubeModel = () => {\r\n  const scene = useRef();\r\n  const pivot = useRef();\r\n  const cubes = [];\r\n  scene.background = new THREE.Color(0x222222);\r\n  \r\n  const camera = new THREE.PerspectiveCamera(75, 600 / 450, 0.1, 1000);\r\n  camera.position.set(10, 8, 10);\r\n  \r\n  const renderer = new THREE.WebGLRenderer({ canvas: document.querySelector(\"#canvas\") });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(600, 450);\r\n  \r\n  const raycaster = new THREE.Raycaster();\r\n  const pointer = new THREE.Vector2();\r\n  \r\n  const radStep = Math.PI / 2 / 50;\r\n  \r\n  const controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enabled = false;\r\n\r\n  let draggable = {\r\n      isDragging: false,\r\n      cube: null,\r\n      direction: null,\r\n      position: null,\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n  };\r\n  \r\n  let pan = {\r\n      isPanning: false,\r\n      mouseX: 0,\r\n      mouseY: 0\r\n  };\r\n\r\n  \r\n  const cubesColors = [\r\n    [\r\n        [\r\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0xffd500, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0xffd500, 0x000000, 0x000000, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0xffd500, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0x000000, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x009b48 ],\r\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0x000000, 0x000000 ],\r\n            [ 0xffffff, 0x000000, 0x000000, 0x0045ad, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0xffffff, 0x000000, 0x000000, 0x000000, 0xff5900, 0x000000 ],\r\n        ],\r\n        [\r\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x009b48 ],\r\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0x000000, 0x000000 ],\r\n            [ 0xffffff, 0x000000, 0xb90000, 0x000000, 0xff5900, 0x000000 ],\r\n        ]\r\n    ],\r\n];\r\n\r\n  const onMouseDown = (event) => {\r\n    pointer.x = (event.clientX /600) * 2 - 1;\r\n    pointer.y = - (event.clientY / 450) * 2 + 1;\r\n\r\n    raycaster.setFromCamera(pointer, camera);\r\n\r\n    const intersects = raycaster.intersectObjects(cubes, false);\r\n\r\n    if (draggable.intersect == null) {\r\n        draggable.intersect = intersects[0];\r\n    }\r\n\r\n    if (intersects.length > 0) {\r\n        controls.enabled = false;\r\n\r\n        draggable.isDragging = true;\r\n        draggable.mouseX = event.clientX;\r\n        draggable.mouseY = event.clientY;\r\n\r\n        draggable.cube = intersects[0].object;\r\n\r\n        const intersectPoint = new THREE.Vector3(...intersects[0].point.toArray().map(c => +(c.toFixed(3))));\r\n        const objPos = new THREE.Vector3(...intersects[0].object.position.toArray().map(c => +(c.toFixed(3))));\r\n\r\n        if (intersectPoint.z == objPos.z + 1) {\r\n            draggable.direction = \"front\";\r\n        }\r\n        else if (intersectPoint.y == objPos.y + 1) {\r\n            draggable.direction = \"top\";\r\n        }\r\n        else if (intersectPoint.x == objPos.x + 1) {\r\n            draggable.direction = \"side\";\r\n        }\r\n    }\r\n    else if(!controls.enabled){\r\n        pan.isPanning = true;\r\n        pan.mouseX = event.clientX;\r\n        pan.mouseY = event.clientY;\r\n    }\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    draggable.isDragging = false;\r\n    pan.isPanning = false;\r\n  };\r\n\r\n  const onMouseMove = (event) => {\r\n    if (draggable.isDragging) {\r\n      if (event.clientY > draggable.mouseY + 50 || event.clientY < draggable.mouseY - 50) {\r\n          if (draggable.direction == \"side\") {\r\n              doRotation(\"z\", Math.sign(event.clientY - draggable.mouseY) * -1, draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n          else if (draggable.direction == \"front\") {\r\n              doRotation(\"x\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n      }\r\n      else if ((event.clientX > draggable.mouseX + 20 && event.clientY < draggable.mouseY - 20) ||\r\n               (event.clientX < draggable.mouseX - 20 && event.clientY > draggable.mouseY + 20)) {\r\n          if (draggable.direction == \"top\") {\r\n              doRotation(\"x\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n          else {\r\n              doRotation(\"y\", Math.sign(event.clientX - draggable.mouseX), draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n      }\r\n      else if ((event.clientX < draggable.mouseX - 20 && event.clientY < draggable.mouseY - 20) ||\r\n               (event.clientX > draggable.mouseX + 20 && event.clientY > draggable.mouseY + 20)) {\r\n          if (draggable.direction == \"top\") {\r\n              doRotation(\"z\", Math.sign(event.clientX - draggable.mouseX) * -1, draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n          else {\r\n              doRotation(\"y\", Math.sign(event.clientY - draggable.mouseY), draggable.cube);\r\n              draggable.isDragging = false;\r\n          }\r\n      }\r\n  }\r\n  else if(pan.isPanning) {\r\n      if(event.clientX > pan.mouseX + 20 || event.clientX < pan.mouseX - 20) {\r\n          for(let i = 0; i < 27; i++) {\r\n              pivot.attach(cubes[i]);\r\n          }\r\n\r\n          rotateOnAxis(\"y\", Math.sign(event.clientX - pan.mouseX));\r\n\r\n          pan.isPanning = false;\r\n      }\r\n      else if(event.clientY > pan.mouseY + 20 || event.clientY < pan.mouseY - 20) {\r\n          for(let i = 0; i < 27; i++) {\r\n              pivot.attach(cubes[i]);\r\n          }\r\n\r\n          if(event.clientX > 600 / 2) {\r\n              rotateOnAxis(\"z\", Math.sign(event.clientY - pan.mouseY) * -1); \r\n          } \r\n          else {\r\n              rotateOnAxis(\"x\", Math.sign(event.clientY - pan.mouseY));\r\n          }\r\n\r\n          pan.isPanning = false;\r\n      }\r\n  }\r\n  };\r\n\r\n  const createCubes = () => {\r\n    let cubeIndex = 0;\r\n\r\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\r\n\r\n    function getMaterial(colors) {\r\n        const mat = [];\r\n        for(let i = 0; i < 6; i++) {\r\n            mat[i] = new THREE.MeshStandardMaterial({color: colors[i]});\r\n        }\r\n        return mat;\r\n    }\r\n\r\n    for (let x = -1; x <= 1; x += 1) {\r\n        for (let y = -1; y <= 1; y += 1) {\r\n            for (let z = -1; z <= 1; z += 1) {                \r\n                const mat = getMaterial(cubesColors[x + 1][y + 1][z + 1]);\r\n                const cube = new THREE.Mesh(geometry, mat);\r\n                \r\n                cube.position.set(x * 2.1, y * 2.1, z * 2.1);\r\n                cube.userData.index = cubeIndex;\r\n                cubeIndex++;\r\n\r\n                cubes.push(cube);\r\n                scene.add(cube);\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n  const doRotation = (axis, direction, cube) => {\r\n    for(let i = 0; i < 27; i++) {\r\n      if(Math.abs(cubes[i].position[axis] - cube.position[axis]) < 1) {\r\n          pivot.attach(cubes[i]);\r\n      }\r\n  }\r\n\r\n  rotateOnAxis(axis, direction);\r\n  };\r\n\r\n  const rotateOnAxis = (axis, direction, angle = Math.PI / 2, done = 0) => {\r\n    if (done >= angle) {\r\n      let len = pivot.children.length;\r\n      for (let i = 0; i < len; i++) {\r\n          scene.attach(pivot.children[0]);\r\n      }\r\n\r\n      pivot.rotation.set(0, 0, 0);\r\n\r\n      return;\r\n  }\r\n\r\n  done += radStep;\r\n\r\n  switch (axis) {\r\n      case \"x\": { pivot.rotateX(radStep * direction); break; }\r\n      case \"y\": { pivot.rotateY(radStep * direction); break; }\r\n      case \"z\": { pivot.rotateZ(radStep * direction); break; }\r\n  }\r\n\r\n  requestAnimationFrame(() => rotateOnAxis(axis, direction, angle, done));\r\n  };\r\n\r\n  useEffect(() => {\r\n    createCubes();\r\n\r\n    window.addEventListener('pointerdown', onMouseDown);\r\n    window.addEventListener('pointermove', onMouseMove);\r\n    window.addEventListener('pointerup', onMouseUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('pointerdown', onMouseDown);\r\n      window.removeEventListener('pointermove', onMouseMove);\r\n      window.removeEventListener('pointerup', onMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Canvas\r\n      camera={{ position: [10, 8, 10], fov: 75, near: 0.1, far: 1000 }}\r\n      onCreated={({ gl }) => {\r\n        gl.setSize(600, 450);\r\n      }}\r\n    >\r\n      <ambientLight color={0xffffff} intensity={0.69} />\r\n      <directionalLight position={[1.5, 5, 3]} color={0xffffff} intensity={0.36} />\r\n      <directionalLight position={[-1.5, -5, -3]} color={0xffffff} intensity={0} />\r\n\r\n      <PerspectiveCamera makeDefault position={[10, 8, 10]} fov={75} near={0.1} far={1000} />\r\n\r\n      <group ref={pivot} />\r\n\r\n      {/* Your cubes rendering logic here */}\r\n      {cubes.map((cube, index) => (\r\n        <mesh key={index} ref={cube.ref} position={cube.position}>\r\n          <boxGeometry args={[2, 2, 2]} />\r\n          {cube.materials.map((color, i) => (\r\n            <meshStandardMaterial key={i} color={color} />\r\n          ))}\r\n        </mesh>\r\n      ))}\r\n\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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AE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,CACJ,EACD,CACI,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,CACJ,EACD,CACI,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CACjE,EACD,CACI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,EAC9D,CAAE,Q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"},"metadata":{},"sourceType":"module","externalDependencies":[]}