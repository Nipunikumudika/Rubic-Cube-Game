{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { Suspense, useMemo, useState } from \"react\";\n// import { Canvas } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n// import \"./App.css\";\n// import { useLoader } from \"react-three-fiber\";\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\n// import * as THREE from 'three';\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n//   const [drag, setDrag] = useState(true);\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\n//   const generateNodesSubset = useMemo(() => {\n//     const subsets = [];\n\n//     for (let i = 0; i <= 26; i++) {\n//       subsets.push(scene.children.slice(i, i + 1));\n//     }\n//     return subsets;\n//   }, [scene]);\n\n//   const handleDragChange = (newDrag) => {\n//     setDrag(newDrag);\n//   };\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         {generateNodesSubset.map((nodesSubset, index) => (\n//           <RubiksCubeModel\n//             index={index}\n//             key={index}\n//             nodesSubset={nodesSubset}\n//             drag={drag}\n//             onDragChange={handleDragChange}\n//             mouseDownPlane={handleMouseDown}\n//             mouseUpPlane={handleMouseUp}\n//             mouseDownCube={handleMouseDownCube}\n//             set={set}\n//             xyzdirection={xyzdirection}\n//             direction={direction}\n//           />\n//         ))}\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n// export default RubiksCube;\n\nimport React, { Suspense, useMemo, useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const {\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseDownCube,\n    set,\n    xyzdirection,\n    direction\n  } = useMouseHandlers();\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"NbcLgr1pNTpxM6+BsLy9XdmzbsY=\", true, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation\n}) => {\n  _s2();\n  const cubeRefs = useRef([]);\n  const [isDragging, setDragging] = useState(false);\n  let rot = 0;\n  const handlePointerDown = event => {\n    console.log(Math.PI / 2);\n    event.stopPropagation();\n    setDragging(true);\n  };\n  useFrame(() => {\n    if (isDragging) {\n      console.log(rot < Math.PI / 2);\n      cubeRefs.current.forEach((cubeRef, index) => {\n        cubeRef.current.rotation.z += 0.01;\n        rot = cubeRef.current.rotation.z + 0.001;\n        if (rot % (Math.PI / 2) <= 0.01) {\n          setDragging(false);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    onPointerDown: handlePointerDown,\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node,\n      ref: ref => cubeRefs.current[index] = {\n        current: ref\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"sq0GutISCAzEOaLjVvQl5NyzhoM=\", false, function () {\n  return [useFrame];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useRef","useState","useEffect","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","handleMouseDown","handleMouseUp","handleMouseDownCube","xyzdirection","direction","useMouseHandlers","nodesSubset1","children","slice","nodesSubset2","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","fallback","position","RubiksCubeModel","nodesSubset","setRotation","_c","_s2","cubeRefs","isDragging","setDragging","rot","handlePointerDown","event","console","log","stopPropagation","current","forEach","cubeRef","index","z","scale","onPointerDown","map","node","object","ref","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useState } from \"react\";\r\n// import { Canvas } from \"react-three-fiber\";\r\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\r\n// import RubiksCubeModel from \"./RubiksCubeModel\";\r\n// import \"./App.css\";\r\n// import { useLoader } from \"react-three-fiber\";\r\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\r\n// import * as THREE from 'three';\r\n\r\n// const RubiksCube = () => {\r\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\r\n//   const [drag, setDrag] = useState(true);\r\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\r\n//   const generateNodesSubset = useMemo(() => {\r\n//     const subsets = [];\r\n    \r\n\r\n//     for (let i = 0; i <= 26; i++) {\r\n//       subsets.push(scene.children.slice(i, i + 1));\r\n//     }\r\n//     return subsets;\r\n//   }, [scene]);\r\n\r\n//   const handleDragChange = (newDrag) => {\r\n//     setDrag(newDrag);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <Canvas>\r\n//       <ambientLight />\r\n//       <Suspense fallback={null}>\r\n//         {generateNodesSubset.map((nodesSubset, index) => (\r\n//           <RubiksCubeModel\r\n//             index={index}\r\n//             key={index}\r\n//             nodesSubset={nodesSubset}\r\n//             drag={drag}\r\n//             onDragChange={handleDragChange}\r\n//             mouseDownPlane={handleMouseDown}\r\n//             mouseUpPlane={handleMouseUp}\r\n//             mouseDownCube={handleMouseDownCube}\r\n//             set={set}\r\n//             xyzdirection={xyzdirection}\r\n//             direction={direction}\r\n//           />\r\n//         ))}\r\n//       </Suspense>\r\n//       <pointLight position={[10, 10, 10]} />\r\n//     </Canvas>\r\n//   );\r\n// };\r\n// export default RubiksCube;\r\n\r\n\r\n\r\nimport React, { Suspense, useMemo,useRef,useState ,useEffect} from 'react';\r\nimport { Canvas ,useFrame} from 'react-three-fiber';\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\r\nimport { useLoader } from 'react-three-fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport './App.css';\r\n\r\nconst RubiksCube = () => {\r\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  scene.rotation.set(...initialRotation);\r\n  const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\r\n  \r\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]);//only one layer\r\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]);//two layers\r\n\r\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\r\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\r\n\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      {/* <OrbitControls enableZoom={false} /> */}\r\n      <Suspense fallback={null}>\r\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\r\n          <RubiksCubeModel nodesSubset={nodesSubset1} rotation={rotationSubset1} setRotation={setRotationSubset1}/>\r\n        </group>\r\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\r\n          <RubiksCubeModel nodesSubset={nodesSubset2} rotation={rotationSubset2} setRotation={setRotationSubset2}/>\r\n        </group>\r\n      </Suspense>\r\n      <pointLight position={[10, 10, 10]} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nconst RubiksCubeModel = ({ nodesSubset,rotation, setRotation }) => {\r\n  const cubeRefs = useRef([]);\r\n  const [isDragging, setDragging] = useState(false);\r\n let rot=0;\r\n\r\n  const handlePointerDown = (event) => {\r\n    console.log(Math.PI/2);\r\n    event.stopPropagation();\r\n    setDragging(true);    \r\n  };\r\n\r\n  useFrame(() => {\r\n    if (isDragging ) {\r\n      console.log(rot<Math.PI/2);\r\n      cubeRefs.current.forEach((cubeRef, index) => {\r\n        cubeRef.current.rotation.z += 0.01;\r\n        rot=cubeRef.current.rotation.z+0.001;\r\n        if (rot %( Math.PI / 2)<=0.01) {\r\n          setDragging(false);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <group scale={[0.3, 0.3, 0.3]} onPointerDown={handlePointerDown}>\r\n      {nodesSubset.map((node, index) => (\r\n        <primitive\r\n          key={index}\r\n          object={node}\r\n          ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default RubiksCube;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}