{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { Suspense, useMemo, useState } from \"react\";\n// import { Canvas } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n// import \"./App.css\";\n// import { useLoader } from \"react-three-fiber\";\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\n// import * as THREE from 'three';\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n//   const [drag, setDrag] = useState(true);\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\n//   const generateNodesSubset = useMemo(() => {\n//     const subsets = [];\n\n//     for (let i = 0; i <= 26; i++) {\n//       subsets.push(scene.children.slice(i, i + 1));\n//     }\n//     return subsets;\n//   }, [scene]);\n\n//   const handleDragChange = (newDrag) => {\n//     setDrag(newDrag);\n//   };\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         {generateNodesSubset.map((nodesSubset, index) => (\n//           <RubiksCubeModel\n//             index={index}\n//             key={index}\n//             nodesSubset={nodesSubset}\n//             drag={drag}\n//             onDragChange={handleDragChange}\n//             mouseDownPlane={handleMouseDown}\n//             mouseUpPlane={handleMouseUp}\n//             mouseDownCube={handleMouseDownCube}\n//             set={set}\n//             xyzdirection={xyzdirection}\n//             direction={direction}\n//           />\n//         ))}\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n// export default RubiksCube;\n\n// App.js\nimport React, { useState } from 'react';\nimport RubikCube from './Cube';\nconst App = () => {\n  _s();\n  const [rotation, setRotation] = useState(0);\n  const handleRotateX = () => {\n    setRotation(rotation + Math.PI / 2); // Rotate by 90 degrees\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RubikCube, {\n      rotation: [rotation, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRotateX,\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KtFf5RGYOqNhGWz4PZT7B8M7m1w=\");\n_c = App;\nexport default App;\n\n// Cube.js\n\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cube = () => {\n  _s2();\n  const cubeRef = useRef();\n  useFrame(() => {\n    // Rotate the cube slowly\n    cubeRef.current.rotation.x += 0.005;\n    cubeRef.current.rotation.y += 0.005;\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: cubeRef,\n    children: [[...Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attachArray: \"material\",\n      color: 0xffffff\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(Cube, \"4PEmrkJPcv/PSeT1vRzFauLPG/s=\", false, function () {\n  return [useFrame];\n});\n_c2 = Cube;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Cube\");","map":{"version":3,"names":["React","useState","RubikCube","App","_s","rotation","setRotation","handleRotateX","Math","PI","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Canvas","useFrame","jsxDEV","Cube","_s2","cubeRef","useRef","current","x","y","ref","Array","map","_","index","attachArray","color","args","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useState } from \"react\";\r\n// import { Canvas } from \"react-three-fiber\";\r\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\r\n// import RubiksCubeModel from \"./RubiksCubeModel\";\r\n// import \"./App.css\";\r\n// import { useLoader } from \"react-three-fiber\";\r\n// import { useMouseHandlers } from \"./mouseEventHandlers\";\r\n// import * as THREE from 'three';\r\n\r\n// const RubiksCube = () => {\r\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\r\n//   const [drag, setDrag] = useState(true);\r\n//   const { handleMouseDown, handleMouseUp,handleMouseDownCube,set,xyzdirection,direction } = useMouseHandlers();\r\n//   const generateNodesSubset = useMemo(() => {\r\n//     const subsets = [];\r\n    \r\n\r\n//     for (let i = 0; i <= 26; i++) {\r\n//       subsets.push(scene.children.slice(i, i + 1));\r\n//     }\r\n//     return subsets;\r\n//   }, [scene]);\r\n\r\n//   const handleDragChange = (newDrag) => {\r\n//     setDrag(newDrag);\r\n//   };\r\n\r\n\r\n\r\n//   return (\r\n//     <Canvas>\r\n//       <ambientLight />\r\n//       <Suspense fallback={null}>\r\n//         {generateNodesSubset.map((nodesSubset, index) => (\r\n//           <RubiksCubeModel\r\n//             index={index}\r\n//             key={index}\r\n//             nodesSubset={nodesSubset}\r\n//             drag={drag}\r\n//             onDragChange={handleDragChange}\r\n//             mouseDownPlane={handleMouseDown}\r\n//             mouseUpPlane={handleMouseUp}\r\n//             mouseDownCube={handleMouseDownCube}\r\n//             set={set}\r\n//             xyzdirection={xyzdirection}\r\n//             direction={direction}\r\n//           />\r\n//         ))}\r\n//       </Suspense>\r\n//       <pointLight position={[10, 10, 10]} />\r\n//     </Canvas>\r\n//   );\r\n// };\r\n// export default RubiksCube;\r\n\r\n\r\n\r\n// App.js\r\nimport React, { useState } from 'react';\r\nimport RubikCube from './Cube';\r\n\r\nconst App = () => {\r\n  const [rotation, setRotation] = useState(0);\r\n\r\n  const handleRotateX = () => {\r\n    setRotation(rotation + Math.PI / 2); // Rotate by 90 degrees\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RubikCube rotation={[rotation, 0, 0]} />\r\n      <button onClick={handleRotateX}>Rotate X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n// Cube.js\r\n\r\nimport { Canvas, useFrame } from 'react-three-fiber';\r\n\r\nconst Cube = () => {\r\n  const cubeRef = useRef();\r\n\r\n  useFrame(() => {\r\n    // Rotate the cube slowly\r\n    cubeRef.current.rotation.x += 0.005;\r\n    cubeRef.current.rotation.y += 0.005;\r\n  });\r\n\r\n  return (\r\n    <mesh ref={cubeRef}>\r\n      {/* Create the six faces of the cube */}\r\n      {[...Array(6)].map((_, index) => (\r\n        <meshStandardMaterial key={index} attachArray=\"material\" color={0xffffff} />\r\n      ))}\r\n      <boxGeometry args={[1, 1, 1]} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,QAAQ;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BD,WAAW,CAACD,QAAQ,GAAGG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACR,SAAS;MAACG,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCL,OAAA;MAAQM,OAAO,EAAET,aAAc;MAAAI,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACX,EAAA,CAbID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAeT,eAAeA,GAAG;;AAGlB;;AAEA,SAASe,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAV,OAAA;AAErD,MAAMW,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjB,MAAMC,OAAO,GAAGC,MAAM,CAAC,CAAC;EAExBL,QAAQ,CAAC,MAAM;IACb;IACAI,OAAO,CAACE,OAAO,CAACpB,QAAQ,CAACqB,CAAC,IAAI,KAAK;IACnCH,OAAO,CAACE,OAAO,CAACpB,QAAQ,CAACsB,CAAC,IAAI,KAAK;EACrC,CAAC,CAAC;EAEF,oBACEjB,OAAA;IAAMkB,GAAG,EAAEL,OAAQ;IAAAZ,QAAA,GAEhB,CAAC,GAAGkB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC1BtB,OAAA;MAAkCuB,WAAW,EAAC,UAAU;MAACC,KAAK,EAAE;IAAS,GAA9CF,KAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAC5E,CAAC,eACFL,OAAA;MAAayB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEX,CAAC;AAACO,GAAA,CAlBID,IAAI;EAAA,QAGRF,QAAQ;AAAA;AAAAiB,GAAA,GAHJf,IAAI;AAAA,IAAAJ,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}