{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { useDrag } from 'react-use-gesture';\n// import { Html } from 'drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingObject = () => {\n  _s();\n  const meshRef = useRef();\n  const [isDragging, setDragging] = useState(false);\n  const bind = useDrag(({\n    offset: [x, y],\n    down\n  }) => {\n    if (isDragging || down) {\n      setDragging(true);\n\n      // Calculate the rotation based on mouse drag\n      const rotationFactor = 0.005;\n      const rotationY = x * rotationFactor;\n      const rotationX = y * rotationFactor;\n\n      // Apply the rotation to the mesh\n      meshRef.current.rotation.x += rotationX;\n      meshRef.current.rotation.y += rotationY;\n    } else {\n      setDragging(false);\n    }\n  }, {\n    eventOptions: {\n      capture: true\n    } // Ensure the drag event captures the target element\n  });\n  useFrame(() => {\n    // Optionally, you can update the object's state or perform other animations here\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    ...bind(),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingObject, \"GoBCWaQBwOcRRMwyDAfB4d3mUy8=\", false, function () {\n  return [useDrag, useFrame];\n});\n_c = RotatingObject;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5]\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RotatingObject, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RotatingObject\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","useState","Canvas","useFrame","useDrag","jsxDEV","_jsxDEV","RotatingObject","_s","meshRef","isDragging","setDragging","bind","offset","x","y","down","rotationFactor","rotationY","rotationX","current","rotation","eventOptions","capture","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","App","camera","position","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["// import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\n// import { Canvas, useFrame } from \"react-three-fiber\";\n// import { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\n// import { useLoader } from \"react-three-fiber\";\n\n// import \"./App.css\";\n// import RubiksCubeModel from \"./RubiksCubeModel\";\n\n\n// const RubiksCube = () => {\n//   const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n\n//   const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n//   const nodesSubset2 = useMemo(() => scene.children.slice(9, 18), [scene]); //two layers\n//   const nodesSubset3 = useMemo(() => scene.children.slice(18, 27), [scene]); //two layers\n\n \n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <Suspense fallback={null}>\n//         <RubiksCubeModel nodesSubset={nodesSubset1} />\n//         <RubiksCubeModel nodesSubset={nodesSubset2} />\n//         <RubiksCubeModel nodesSubset={nodesSubset3} />\n//       </Suspense>\n//       <pointLight position={[10, 10, 10]} />\n//     </Canvas>\n//   );\n// };\n\n// export default RubiksCube;\n\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { useDrag } from 'react-use-gesture';\n// import { Html } from 'drei';\n\nconst RotatingObject = () => {\n  const meshRef = useRef();\n  const [isDragging, setDragging] = useState(false);\n\n  const bind = useDrag(\n    ({ offset: [x, y], down }) => {\n      if (isDragging || down) {\n        setDragging(true);\n\n        // Calculate the rotation based on mouse drag\n        const rotationFactor = 0.005;\n        const rotationY = x * rotationFactor;\n        const rotationX = y * rotationFactor;\n\n        // Apply the rotation to the mesh\n        meshRef.current.rotation.x += rotationX;\n        meshRef.current.rotation.y += rotationY;\n      } else {\n        setDragging(false);\n      }\n    },\n    {\n      eventOptions: { capture: true }, // Ensure the drag event captures the target element\n    }\n  );\n\n  useFrame(() => {\n    // Optionally, you can update the object's state or perform other animations here\n  });\n\n  return (\n    <mesh ref={meshRef} {...bind()}>\n      {/* Your 3D object geometry and material go here */}\n      <boxGeometry args={[1, 1, 1]} />\n      <meshBasicMaterial color=\"blue\" />\n\n    </mesh>\n  );\n};\n\nconst App = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 5] }}>\n      <ambientLight />\n      <RotatingObject />\n    </Canvas>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AACpD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,MAAM,CAAC,CAAC;EACxB,MAAM,CAACU,UAAU,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,IAAI,GAAGR,OAAO,CAClB,CAAC;IAAES,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC;IAAEC;EAAK,CAAC,KAAK;IAC5B,IAAIN,UAAU,IAAIM,IAAI,EAAE;MACtBL,WAAW,CAAC,IAAI,CAAC;;MAEjB;MACA,MAAMM,cAAc,GAAG,KAAK;MAC5B,MAAMC,SAAS,GAAGJ,CAAC,GAAGG,cAAc;MACpC,MAAME,SAAS,GAAGJ,CAAC,GAAGE,cAAc;;MAEpC;MACAR,OAAO,CAACW,OAAO,CAACC,QAAQ,CAACP,CAAC,IAAIK,SAAS;MACvCV,OAAO,CAACW,OAAO,CAACC,QAAQ,CAACN,CAAC,IAAIG,SAAS;IACzC,CAAC,MAAM;MACLP,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC,EACD;IACEW,YAAY,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAE;EACnC,CACF,CAAC;EAEDpB,QAAQ,CAAC,MAAM;IACb;EAAA,CACD,CAAC;EAEF,oBACEG,OAAA;IAAMkB,GAAG,EAAEf,OAAQ;IAAA,GAAKG,IAAI,CAAC,CAAC;IAAAa,QAAA,gBAE5BnB,OAAA;MAAaoB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCxB,OAAA;MAAmByB,KAAK,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEX,CAAC;AAACtB,EAAA,CAtCID,cAAc;EAAA,QAILH,OAAO,EAsBpBD,QAAQ;AAAA;AAAA6B,EAAA,GA1BJzB,cAAc;AAwCpB,MAAM0B,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACE3B,OAAA,CAACJ,MAAM;IAACgC,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAE;IAAAV,QAAA,gBACtCnB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAChBxB,OAAA,CAACC,cAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEb,CAAC;AAACM,GAAA,GAPIH,GAAG;AAST,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}