{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useMemo, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]);\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]);\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset2,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"uW7yytMC9TFRF8aATEwdhN7RMdg=\", false, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation\n}) => {\n  _s2();\n  useFrame(() => {\n    // You can customize the rotation logic based on user interaction (e.g., mouse drag)\n    // Here, we're rotating the cube around the y-axis when the mouse is dragged\n    setRotation([rotation[0], rotation[1] + 0.01, rotation[2]]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"xC67171NPRcCAzsbrenetil66NI=\", false, function () {\n  return [useFrame];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useState","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","nodesSubset1","children","slice","nodesSubset2","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","enableZoom","fallback","position","RubiksCubeModel","nodesSubset","setRotation","_c","_s2","scale","map","node","index","object","_c2","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { Suspense, useMemo, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\nconst RubiksCube = () => {\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]);\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]);\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <OrbitControls enableZoom={false} />\n      <Suspense fallback={null}>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset1}\n            rotation={rotationSubset1}\n            setRotation={setRotationSubset1}\n          />\n        </group>\n        <group position={[0, 0, 0]} rotation={rotationSubset2}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset2}\n            rotation={rotationSubset2}\n            setRotation={setRotationSubset2}\n          />\n        </group>\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nconst RubiksCubeModel = ({ nodesSubset, rotation, setRotation }) => {\n  useFrame(() => {\n    // You can customize the rotation logic based on user interaction (e.g., mouse drag)\n    // Here, we're rotating the cube around the y-axis when the mouse is dragged\n    setRotation([rotation[0], rotation[1] + 0.01, rotation[2]]);\n  });\n\n  return (\n    <group scale={[0.3, 0.3, 0.3]}>\n      {nodesSubset.map((node, index) => (\n        <primitive key={index} object={node} />\n      ))}\n    </group>\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}