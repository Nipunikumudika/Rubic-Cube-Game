{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\LargerCube.js\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport { Canvas, useThree } from 'react-three-fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxWithDifferentFaceColors = () => {\n  // Define different colors for each face\n  const colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff00ff, 0x00ffff];\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: /*#__PURE__*/_jsxDEV(BoxWithDifferentFaceColorsImpl, {\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = BoxWithDifferentFaceColors;\nconst BoxWithDifferentFaceColorsImpl = ({\n  colors\n}) => {\n  _s();\n  const {\n    size\n  } = useThree();\n  const boxSize = 2;\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [(index % 2 === 0 ? -1 : 1) * (size.width / 4), Math.floor(index / 2) * (boxSize + 1), 0],\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        attach: \"geometry\",\n        args: [boxSize, boxSize, boxSize]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attachArray: \"material\",\n        color: new THREE.Color(color)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(BoxWithDifferentFaceColorsImpl, \"G0ceUR46evMRftqUmPEUX/3MYSo=\", false, function () {\n  return [useThree];\n});\n_c2 = BoxWithDifferentFaceColorsImpl;\nexport default BoxWithDifferentFaceColors;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoxWithDifferentFaceColors\");\n$RefreshReg$(_c2, \"BoxWithDifferentFaceColorsImpl\");","map":{"version":3,"names":["THREE","Canvas","useThree","jsxDEV","_jsxDEV","BoxWithDifferentFaceColors","colors","children","BoxWithDifferentFaceColorsImpl","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","size","boxSize","map","color","index","position","width","Math","floor","attach","args","attachArray","Color","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/LargerCube.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport { Canvas, useThree } from 'react-three-fiber';\r\n\r\nconst BoxWithDifferentFaceColors = () => {\r\n  // Define different colors for each face\r\n  const colors = [0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff00ff, 0x00ffff];\r\n\r\n  return (\r\n    <Canvas>\r\n      <BoxWithDifferentFaceColorsImpl colors={colors} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nconst BoxWithDifferentFaceColorsImpl = ({ colors }) => {\r\n  const { size } = useThree();\r\n  const boxSize = 2;\r\n\r\n  return (\r\n    <group>\r\n      {colors.map((color, index) => (\r\n        <mesh\r\n          key={index}\r\n          position={[\r\n            (index % 2 === 0 ? -1 : 1) * (size.width / 4),\r\n            Math.floor(index / 2) * (boxSize + 1),\r\n            0,\r\n          ]}\r\n        >\r\n          <boxBufferGeometry attach=\"geometry\" args={[boxSize, boxSize, boxSize]} />\r\n          <meshStandardMaterial attachArray=\"material\" color={new THREE.Color(color)} />\r\n        </mesh>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default BoxWithDifferentFaceColors;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EACvC;EACA,MAAMC,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAE3E,oBACEF,OAAA,CAACH,MAAM;IAAAM,QAAA,eACLH,OAAA,CAACI,8BAA8B;MAACF,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEb,CAAC;AAACC,EAAA,GATIR,0BAA0B;AAWhC,MAAMG,8BAA8B,GAAGA,CAAC;EAAEF;AAAO,CAAC,KAAK;EAAAQ,EAAA;EACrD,MAAM;IAAEC;EAAK,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC3B,MAAMc,OAAO,GAAG,CAAC;EAEjB,oBACEZ,OAAA;IAAAG,QAAA,EACGD,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBf,OAAA;MAEEgB,QAAQ,EAAE,CACR,CAACD,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAKJ,IAAI,CAACM,KAAK,GAAG,CAAC,CAAC,EAC7CC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAG,CAAC,CAAC,IAAIH,OAAO,GAAG,CAAC,CAAC,EACrC,CAAC,CACD;MAAAT,QAAA,gBAEFH,OAAA;QAAmBoB,MAAM,EAAC,UAAU;QAACC,IAAI,EAAE,CAACT,OAAO,EAAEA,OAAO,EAAEA,OAAO;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1ER,OAAA;QAAsBsB,WAAW,EAAC,UAAU;QAACR,KAAK,EAAE,IAAIlB,KAAK,CAAC2B,KAAK,CAACT,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GARzEO,KAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACE,EAAA,CArBIN,8BAA8B;EAAA,QACjBN,QAAQ;AAAA;AAAA0B,GAAA,GADrBpB,8BAA8B;AAuBpC,eAAeH,0BAA0B;AAAC,IAAAQ,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}