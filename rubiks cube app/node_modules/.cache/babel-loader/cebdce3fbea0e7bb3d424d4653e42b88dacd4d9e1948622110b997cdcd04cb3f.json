{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\rubik cube app\\\\rubiks-cube-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  scene.scale.set(0.3, 0.3, 0.3);\n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n\n  // You can use the state to manage cube rotations\n  const [rotation, setRotation] = useState([0, 0, 0]);\n  useFrame(() => {\n    // Apply the rotation to the Rubik's Cube\n    scene.rotation.set(rotation[0], rotation[1], rotation[2]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(RubiksCubeModel, \"JHv8/kPJBQcjnlzkTeDMvJJjb5c=\", false, function () {\n  return [useLoader, useFrame];\n});\n_c = RubiksCubeModel;\nconst RubiksCube = () => {\n  // Function to handle cube rotations based on the set (e.g., top, middle, bottom)\n  const rotateCubeSet = setNumber => {\n    // Define the rotation angles based on the setNumber\n    let rotationAngles = [0, 0, 0];\n    switch (setNumber) {\n      case 1:\n        rotationAngles = [Math.PI / 2, 0, 0]; // Rotate the top set\n        break;\n      // Add cases for other sets\n\n      default:\n        break;\n    }\n\n    // Update the rotation state to trigger the rotation in useFrame\n    setRotation(rotationAngles);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        enableZoom: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => rotateCubeSet(1),\n      children: \"Rotate Top Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c2 = RubiksCube;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCubeModel\");\n$RefreshReg$(_c2, \"RubiksCube\");","map":{"version":3,"names":["React","Suspense","useState","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCubeModel","_s","scene","scale","set","rotation","Math","PI","setRotation","object","fileName","_jsxFileName","lineNumber","columnNumber","_c","RubiksCube","rotateCubeSet","setNumber","rotationAngles","children","enableZoom","fallback","position","onClick","_c2","$RefreshReg$"],"sources":["E:/projects/rubik cube app/rubiks-cube-app/src/App.js"],"sourcesContent":["import React, { Suspense, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\n\nconst RubiksCubeModel = () => {\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  scene.scale.set(0.3, 0.3, 0.3);\n  scene.rotation.set(Math.PI / 6, Math.PI / 4, 0);\n\n  // You can use the state to manage cube rotations\n  const [rotation, setRotation] = useState([0, 0, 0]);\n\n  useFrame(() => {\n    // Apply the rotation to the Rubik's Cube\n    scene.rotation.set(rotation[0], rotation[1], rotation[2]);\n  });\n\n  return <primitive object={scene} />;\n};\n\nconst RubiksCube = () => {\n  // Function to handle cube rotations based on the set (e.g., top, middle, bottom)\n  const rotateCubeSet = (setNumber) => {\n    // Define the rotation angles based on the setNumber\n    let rotationAngles = [0, 0, 0];\n    switch (setNumber) {\n      case 1:\n        rotationAngles = [Math.PI / 2, 0, 0]; // Rotate the top set\n        break;\n      // Add cases for other sets\n\n      default:\n        break;\n    }\n\n    // Update the rotation state to trigger the rotation in useFrame\n    setRotation(rotationAngles);\n  };\n\n  return (\n    <div>\n<Canvas>\n      <ambientLight />\n      <OrbitControls enableZoom={false} />\n      <Suspense fallback={null}>\n        <RubiksCubeModel />\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n\n      \n    </Canvas>\n    <button onClick={() => rotateCubeSet(1)}>Rotate Top Set</button>\n    </div>\n    \n\n  );\n};\n\nexport default RubiksCube;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}