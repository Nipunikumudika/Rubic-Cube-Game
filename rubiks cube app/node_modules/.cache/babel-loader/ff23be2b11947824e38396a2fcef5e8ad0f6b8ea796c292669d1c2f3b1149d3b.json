{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useRef, useState, useEffect, createElement } from 'react';\nimport { useThree, useLoader } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { AudioListener, AudioLoader } from 'three';\nconst PositionalAudio = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      url,\n      distance = 1,\n      loop = true\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, [\"url\", \"distance\", \"loop\"]);\n  const sound = useRef();\n  const {\n    camera\n  } = useThree();\n  const [listener] = useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  useEffect(() => {\n    const _sound = sound.current;\n    if (_sound) {\n      _sound.setBuffer(buffer);\n      _sound.setRefDistance(distance);\n      _sound.setLoop(loop);\n      _sound.play();\n    }\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n      if (_sound) {\n        _sound.stop();\n        _sound.disconnect();\n      }\n    };\n  }, [buffer, camera, distance, listener, loop]);\n  return /*#__PURE__*/createElement(\"positionalAudio\", _extends({\n    ref: mergeRefs([sound, ref]),\n    args: [listener]\n  }, props));\n});\nexport { PositionalAudio };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}