{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\LargerCube.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport * as THREE from 'three';\nimport { Vector2 } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LargeCube() {\n  _s();\n  const meshRef = useRef();\n  const {\n    camera,\n    raycaster,\n    mouse\n  } = useThree();\n  const intersectedFaces = useRef([]);\n  const handleIntersection = () => {\n    raycaster.setFromCamera(mouse, camera);\n    const intersects = raycaster.intersectObject(meshRef.current);\n    if (intersects.length > 0) {\n      const faceIndex = intersects[0].faceIndex;\n      if (!intersectedFaces.current.includes(faceIndex)) {\n        // Handle the click on the face with index faceIndex\n        console.log(\"Clicked on face:\", faceIndex);\n        intersectedFaces.current.push(faceIndex);\n      }\n    }\n  };\n  useFrame(() => {\n    handleIntersection();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    rotation: [Math.PI / 6, Math.PI / 4, 0],\n    onClick: () => {\n      // This click handler is not used, as we are handling clicks on individual faces\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      attach: \"geometry\",\n      args: [1.8, 1.8, 1.8]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"#6be092\",\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(LargeCube, \"lQhG7kWAwNqyFDAR+Cx0vzUrjHc=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = LargeCube;\nexport default LargeCube;\nvar _c;\n$RefreshReg$(_c, \"LargeCube\");","map":{"version":3,"names":["useRef","useFrame","useThree","THREE","Vector2","jsxDEV","_jsxDEV","LargeCube","_s","meshRef","camera","raycaster","mouse","intersectedFaces","handleIntersection","setFromCamera","intersects","intersectObject","current","length","faceIndex","includes","console","log","push","ref","rotation","Math","PI","onClick","children","attach","args","fileName","_jsxFileName","lineNumber","columnNumber","color","wireframe","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/LargerCube.js"],"sourcesContent":["import { useRef } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport * as THREE from 'three';\r\nimport { Vector2 } from 'three';\r\n\r\nfunction LargeCube() {\r\n  const meshRef = useRef();\r\n  const { camera, raycaster, mouse } = useThree();\r\n\r\n  const intersectedFaces = useRef([]);\r\n\r\n  const handleIntersection = () => {\r\n    raycaster.setFromCamera(mouse, camera);\r\n\r\n    const intersects = raycaster.intersectObject(meshRef.current);\r\n\r\n    if (intersects.length > 0) {\r\n      const faceIndex = intersects[0].faceIndex;\r\n      if (!intersectedFaces.current.includes(faceIndex)) {\r\n        // Handle the click on the face with index faceIndex\r\n        console.log(\"Clicked on face:\", faceIndex);\r\n        intersectedFaces.current.push(faceIndex);\r\n      }\r\n    }\r\n  };\r\n\r\n  useFrame(() => {\r\n    handleIntersection();\r\n  });\r\n\r\n  return (\r\n    <mesh\r\n      ref={meshRef}\r\n      rotation={[Math.PI / 6, Math.PI / 4, 0]}\r\n      onClick={() => {\r\n        // This click handler is not used, as we are handling clicks on individual faces\r\n      }}\r\n    >\r\n      <boxGeometry attach=\"geometry\" args={[1.8, 1.8, 1.8]} />\r\n      <meshStandardMaterial attach=\"material\" color=\"#6be092\" wireframe={true} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default LargeCube;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,mBAAmB;AACtD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGT,MAAM,CAAC,CAAC;EACxB,MAAM;IAAEU,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE/C,MAAMW,gBAAgB,GAAGb,MAAM,CAAC,EAAE,CAAC;EAEnC,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,SAAS,CAACI,aAAa,CAACH,KAAK,EAAEF,MAAM,CAAC;IAEtC,MAAMM,UAAU,GAAGL,SAAS,CAACM,eAAe,CAACR,OAAO,CAACS,OAAO,CAAC;IAE7D,IAAIF,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMC,SAAS,GAAGJ,UAAU,CAAC,CAAC,CAAC,CAACI,SAAS;MACzC,IAAI,CAACP,gBAAgB,CAACK,OAAO,CAACG,QAAQ,CAACD,SAAS,CAAC,EAAE;QACjD;QACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,SAAS,CAAC;QAC1CP,gBAAgB,CAACK,OAAO,CAACM,IAAI,CAACJ,SAAS,CAAC;MAC1C;IACF;EACF,CAAC;EAEDnB,QAAQ,CAAC,MAAM;IACba,kBAAkB,CAAC,CAAC;EACtB,CAAC,CAAC;EAEF,oBACER,OAAA;IACEmB,GAAG,EAAEhB,OAAQ;IACbiB,QAAQ,EAAE,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAED,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAE;IACxCC,OAAO,EAAEA,CAAA,KAAM;MACb;IAAA,CACA;IAAAC,QAAA,gBAEFxB,OAAA;MAAayB,MAAM,EAAC,UAAU;MAACC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxD9B,OAAA;MAAsByB,MAAM,EAAC,UAAU;MAACM,KAAK,EAAC,SAAS;MAACC,SAAS,EAAE;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEX;AAAC5B,EAAA,CArCQD,SAAS;EAAA,QAEqBL,QAAQ,EAmB7CD,QAAQ;AAAA;AAAAsC,EAAA,GArBDhC,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}