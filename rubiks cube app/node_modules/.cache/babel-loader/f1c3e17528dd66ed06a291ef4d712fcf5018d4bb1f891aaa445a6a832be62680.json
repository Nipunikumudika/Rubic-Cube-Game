{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useMemo, useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\nimport { useLoader } from 'react-three-fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, '/rubikcube.gltf');\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"uW7yytMC9TFRF8aATEwdhN7RMdg=\", false, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation\n}) => {\n  _s2();\n  const cubeRefs = useRef([]);\n  // const [isDraggingUp, setDraggingUp] = useState(false);\n  // const [isDraggingDown, setDraggingDown] = useState(false);\n  const startYRef = useRef(null);\n  let rot = 0;\n  const handlePointerDown = event => {\n    startYRef.current = event.clientY;\n    window.addEventListener('pointermove', handlePointerMove);\n    window.addEventListener('pointerup', handlePointerUp);\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    const startY = startYRef.current;\n    if (startY !== null) {\n      deltaY = event.clientY - startY;\n    }\n  };\n  let targetRot;\n  const handlePointerUp = () => {\n    window.removeEventListener('pointermove', handlePointerMove);\n    window.removeEventListener('pointerup', handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n      });\n      DraggingDown();\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n      });\n      DraggingUp();\n    }\n  };\n  const DraggingDown = () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.01) {\n        cubeRef.current.rotation.z += Math.PI / 100;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 5));\n      }\n    });\n  };\n  const DraggingUp = () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.01) {\n        cubeRef.current.rotation.z -= Math.PI / 100;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 5));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    onPointerDown: handlePointerDown,\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node,\n      ref: ref => cubeRefs.current[index] = {\n        current: ref\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"N8fs7JrcmZZFEZd85/Q8sKzlfjQ=\");\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useRef","useState","useEffect","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","nodesSubset1","children","slice","nodesSubset2","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","fallback","position","RubiksCubeModel","nodesSubset","setRotation","_c","_s2","cubeRefs","startYRef","rot","handlePointerDown","event","current","clientY","window","addEventListener","handlePointerMove","handlePointerUp","stopPropagation","deltaY","startY","targetRot","removeEventListener","forEach","cubeRef","index","z","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","scale","onPointerDown","map","node","object","ref","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["import React, { Suspense, useMemo,useRef,useState ,useEffect} from 'react';\r\nimport { Canvas ,useFrame} from 'react-three-fiber';\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader';\r\nimport { useLoader } from 'react-three-fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport './App.css';\r\n\r\nconst RubiksCube = () => {\r\n  const { scene } = useLoader(GLTFLoader, '/rubikcube.gltf');\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  scene.rotation.set(...initialRotation);\r\n\r\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]);//only one layer\r\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]);//two layers\r\n\r\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\r\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\r\n\r\n  return (\r\n    <Canvas>\r\n      <ambientLight />\r\n      {/* <OrbitControls enableZoom={false} /> */}\r\n      <Suspense fallback={null}>\r\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\r\n          <RubiksCubeModel nodesSubset={nodesSubset1} rotation={rotationSubset1} setRotation={setRotationSubset1}/>\r\n        </group>\r\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\r\n          <RubiksCubeModel nodesSubset={nodesSubset2} rotation={rotationSubset2} setRotation={setRotationSubset2}/>\r\n        </group>\r\n      </Suspense>\r\n      <pointLight position={[10, 10, 10]} />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nconst RubiksCubeModel = ({ nodesSubset,rotation, setRotation }) => {\r\n  const cubeRefs = useRef([]);\r\n  // const [isDraggingUp, setDraggingUp] = useState(false);\r\n  // const [isDraggingDown, setDraggingDown] = useState(false);\r\n  const startYRef = useRef(null);\r\n  let rot=0;\r\n\r\n  const handlePointerDown = (event) => {\r\n    startYRef.current = event.clientY;\r\n    window.addEventListener('pointermove', handlePointerMove);\r\n    window.addEventListener('pointerup', handlePointerUp);\r\n    event.stopPropagation();\r\n  };\r\n\r\n  let deltaY;\r\n\r\n  const handlePointerMove = (event) => {\r\n    const startY = startYRef.current;\r\n    if (startY !== null) {\r\n      deltaY = event.clientY - startY;\r\n     \r\n    }\r\n  };\r\n  let targetRot;\r\n  const handlePointerUp = () => {\r\n    window.removeEventListener('pointermove', handlePointerMove);\r\n    window.removeEventListener('pointerup', handlePointerUp);\r\n    if (deltaY > 0) {\r\n      \r\n      cubeRefs.current.forEach((cubeRef, index) => {\r\n        targetRot=cubeRef.current.rotation.z+(Math.PI/2);\r\n      }); \r\n      DraggingDown();\r\n    } else if (deltaY < 0) {\r\n      cubeRefs.current.forEach((cubeRef, index) => {\r\n        targetRot=cubeRef.current.rotation.z-(Math.PI/2);\r\n      }); \r\n      DraggingUp();\r\n    }\r\n  };\r\n\r\n  const DraggingDown = ()=>{\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.01) {\r\n        cubeRef.current.rotation.z += Math.PI / 100;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 5));\r\n      }\r\n      });\r\n  }\r\n\r\n  const DraggingUp = ()=>{\r\n    cubeRefs.current.forEach(async (cubeRef, index) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.01) {\r\n        cubeRef.current.rotation.z -= Math.PI / 100;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 5));\r\n      }\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <group scale={[0.3, 0.3, 0.3]} onPointerDown={handlePointerDown}>\r\n      {nodesSubset.map((node, index) => (\r\n        <primitive\r\n          key={index}\r\n          object={node}\r\n          ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default RubiksCube;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}