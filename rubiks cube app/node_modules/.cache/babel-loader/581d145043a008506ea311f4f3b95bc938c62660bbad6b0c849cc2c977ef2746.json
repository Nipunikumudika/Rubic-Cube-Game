{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\RubiksCubeModel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport { Vector2, Raycaster } from \"three\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RubiksCubeModel = ({\n  nodesSubset,\n  drag,\n  onDragChange\n}) => {\n  _s();\n  const cubeRefs = useRef([]);\n  const orbitRef = useRef();\n  const startYRef = useRef(0);\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  const groupRef = useRef();\n  const [mouse, setMouse] = useState(new THREE.Vector2());\n  const [startY, setStartY] = useState(null);\n  const {\n    camera\n  } = useThree();\n  const pointer = new THREE.Vector2();\n  const raycaster = new THREE.Raycaster();\n  let x, y, z, endY;\n  const handlePointerDown = event => {\n    y = event.clientY;\n    console.log(\"start \" + y);\n    pointer.x = event.clientX / window.innerWidth * 2 - 1;\n    pointer.y = event.clientY / window.innerHeight * 2 - 1;\n    raycaster.setFromCamera(pointer, camera);\n\n    // Get the polar and azimuthal angles\n    const polarAngle = orbitRef.current.getPolarAngle();\n    const azimuthalAngle = orbitRef.current.getAzimuthalAngle();\n    console.log(\"Polar Angle:\", polarAngle);\n    console.log(\"Azimuthal Angle:\", azimuthalAngle);\n\n    // console.log(y);\n    // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    startYRef.current = event.clientY;\n    onDragChange(false);\n    window.addEventListener(\"pointermove\", handlePointerMove, {\n      passive: true\n    });\n    window.addEventListener(\"pointerup\", handlePointerUp, {\n      passive: true\n    });\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    if (y !== null) {\n      endY = event.clientY;\n      deltaY = endY - startY;\n    }\n  };\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    console.log(\"end \" + endY);\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n      });\n      DraggingDown();\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach(cubeRef => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n      });\n      DraggingUp();\n      deltaY = 0;\n    }\n    onDragChange(true);\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async cubeRef => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 10;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n    onDragChange(true);\n  };\n  useFrame(() => {\n    orbitRef.current.enabled = drag;\n    orbitRef.current.update();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      classname: \"group\",\n      ref: groupRef,\n      scale: [0.3, 0.3, 0.3],\n      rotation: initialRotation,\n      onPointerDown: handlePointerDown,\n      children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n        object: node,\n        ref: ref => cubeRefs.current[index] = {\n          current: ref\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      ref: orbitRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"axesHelper\", {\n      args: [5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RubiksCubeModel, \"K1uGSp0gLXeOEtoNm1D1jpO27kA=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = RubiksCubeModel;\nexport default RubiksCubeModel;\nvar _c;\n$RefreshReg$(_c, \"RubiksCubeModel\");","map":{"version":3,"names":["React","useRef","useState","OrbitControls","useFrame","useThree","Vector2","Raycaster","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","RubiksCubeModel","nodesSubset","drag","onDragChange","_s","cubeRefs","orbitRef","startYRef","initialRotation","Math","PI","groupRef","mouse","setMouse","startY","setStartY","camera","pointer","raycaster","x","y","z","endY","handlePointerDown","event","clientY","console","log","clientX","window","innerWidth","innerHeight","setFromCamera","polarAngle","current","getPolarAngle","azimuthalAngle","getAzimuthalAngle","addEventListener","handlePointerMove","passive","handlePointerUp","stopPropagation","deltaY","targetRot","removeEventListener","forEach","cubeRef","rotation","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","enabled","update","children","classname","ref","scale","onPointerDown","map","node","index","object","fileName","_jsxFileName","lineNumber","columnNumber","args","_c","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/RubiksCubeModel.js"],"sourcesContent":["import React, { useRef,useState } from \"react\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport { useFrame,useThree } from \"react-three-fiber\";\r\nimport { Vector2, Raycaster } from \"three\";\r\nimport * as THREE from 'three';\r\n\r\nconst RubiksCubeModel = ({ nodesSubset, drag, onDragChange }) => {\r\n  const cubeRefs = useRef([]);\r\n  const orbitRef = useRef();\r\n  const startYRef = useRef(0);\r\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\r\n  const groupRef = useRef();\r\n  const [mouse, setMouse] = useState(new THREE.Vector2());\r\n  const [startY, setStartY] = useState(null);\r\n  const { camera } = useThree();\r\n\r\n  const pointer = new THREE.Vector2;\r\n  const raycaster = new THREE.Raycaster();\r\n\r\nlet x,y,z,endY;\r\n  const handlePointerDown = (event) => {\r\n  y=event.clientY;\r\n  console.log(\"start \"+y);\r\npointer.x=(event.clientX/window.innerWidth)*2-1;\r\npointer.y=(event.clientY/window.innerHeight)*2-1;\r\n\r\nraycaster.setFromCamera(pointer, camera);\r\n\r\n    // Get the polar and azimuthal angles\r\n    const polarAngle = orbitRef.current.getPolarAngle();\r\n    const azimuthalAngle = orbitRef.current.getAzimuthalAngle();\r\n\r\n    console.log(\"Polar Angle:\", polarAngle);\r\n    console.log(\"Azimuthal Angle:\", azimuthalAngle);\r\n\r\n    \r\n// console.log(y);\r\n    // mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    startYRef.current = event.clientY;\r\n    onDragChange(false);\r\n    window.addEventListener(\"pointermove\", handlePointerMove, { passive: true });\r\n    window.addEventListener(\"pointerup\", handlePointerUp, { passive: true });\r\n    event.stopPropagation();\r\n  };\r\n\r\n  let deltaY;\r\n\r\n  const handlePointerMove = (event) => {\r\n\r\n    \r\n    if (y !== null) {\r\n      endY = event.clientY\r\n\r\n      \r\n      deltaY = endY - startY;\r\n    }\r\n  };\r\n\r\n  let targetRot = 0;\r\n\r\n  const handlePointerUp = async () => {\r\n    console.log(\"end \"+endY);\r\n    window.removeEventListener(\"pointermove\", handlePointerMove);\r\n    window.removeEventListener(\"pointerup\", handlePointerUp);\r\n    if (deltaY > 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\r\n      });\r\n      DraggingDown();\r\n      deltaY = 0;\r\n    } else if (deltaY < 0) {\r\n      cubeRefs.current.forEach((cubeRef) => {\r\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\r\n      });\r\n      DraggingUp();\r\n      deltaY = 0;\r\n    }\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingDown = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z += Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  const DraggingUp = async () => {\r\n    cubeRefs.current.forEach(async (cubeRef) => {\r\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\r\n        cubeRef.current.rotation.z -= Math.PI / 10;\r\n        await new Promise((resolve) => requestAnimationFrame(resolve));\r\n        await new Promise((resolve) => setTimeout(resolve, 1));\r\n      }\r\n    });\r\n    onDragChange(true);\r\n  };\r\n\r\n  useFrame(() => {\r\n    orbitRef.current.enabled = drag;\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <group classname=\"group\"\r\n        ref={groupRef}\r\n        scale={[0.3, 0.3, 0.3]}\r\n        rotation={initialRotation}\r\n        onPointerDown={handlePointerDown}\r\n      >\r\n        {nodesSubset.map((node, index) => (\r\n          <primitive\r\n            key={index}\r\n            object={node}\r\n            ref={(ref) => (cubeRefs.current[index] = { current: ref })}\r\n          />\r\n        ))}\r\n      </group>\r\n      <OrbitControls ref={orbitRef}  />\r\n      <axesHelper args={[5]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RubiksCubeModel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}