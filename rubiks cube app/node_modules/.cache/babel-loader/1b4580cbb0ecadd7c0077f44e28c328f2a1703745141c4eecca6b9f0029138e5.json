{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\React rubik cube app\\\\Rubic-Cube-Game\\\\rubiks cube app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RubiksCube = () => {\n  _s();\n  const {\n    scene\n  } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enableZoom: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: [/*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset1,\n          rotation: rotationSubset1,\n          setRotation: setRotationSubset1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        position: [0, 0, 0],\n        rotation: rotationSubset1,\n        children: /*#__PURE__*/_jsxDEV(RubiksCubeModel, {\n          nodesSubset: nodesSubset2,\n          rotation: rotationSubset2,\n          setRotation: setRotationSubset2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RubiksCube, \"uW7yytMC9TFRF8aATEwdhN7RMdg=\", false, function () {\n  return [useLoader];\n});\n_c = RubiksCube;\nconst RubiksCubeModel = ({\n  nodesSubset,\n  rotation,\n  setRotation\n}) => {\n  _s2();\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(null);\n  //console.log(target.rotation);\n  const canvasRef = useRef();\n  const handlePointerDown = event => {\n    console.log(rotation);\n    console.log(\"down\");\n    startYRef.current = event.clientY;\n    window.addEventListener(\"pointermove\", handlePointerMove);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n    event.stopPropagation();\n  };\n  let deltaY;\n  const handlePointerMove = event => {\n    console.log(\"move\");\n    const startY = startYRef.current;\n    if (startY !== null) {\n      deltaY = event.clientY - startY;\n    }\n  };\n  const getCanvasOffset = () => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  };\n\n  // Usage example\n  const canvasOffset = getCanvasOffset();\n  const startYRelativeToCanvas = startY - canvasOffset.top;\n  let targetRot = 0;\n  const handlePointerUp = async () => {\n    console.log(\"up\");\n    window.removeEventListener(\"pointermove\", handlePointerMove);\n    window.removeEventListener(\"pointerup\", handlePointerUp);\n    if (deltaY > 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z + Math.PI / 2;\n        console.log(targetRot);\n      });\n      DraggingDown();\n      deltaY = 0;\n    } else if (deltaY < 0) {\n      cubeRefs.current.forEach((cubeRef, index) => {\n        targetRot = cubeRef.current.rotation.z - Math.PI / 2;\n        console.log(\"why\");\n      });\n      DraggingUp();\n      deltaY = 0;\n    }\n  };\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 30;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 30;\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => setTimeout(resolve, 1));\n      }\n    });\n  };\n  useFrame(() => {\n    // Your animation logic here...\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    scale: [0.3, 0.3, 0.3],\n    onPointerDown: handlePointerDown,\n    children: nodesSubset.map((node, index) => /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: node,\n      ref: ref => cubeRefs.current[index] = {\n        current: ref\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s2(RubiksCubeModel, \"Zi36PFUof1IWG4IMPjOsziC+jFg=\", false, function () {\n  return [useFrame];\n});\n_c2 = RubiksCubeModel;\nexport default RubiksCube;\nvar _c, _c2;\n$RefreshReg$(_c, \"RubiksCube\");\n$RefreshReg$(_c2, \"RubiksCubeModel\");","map":{"version":3,"names":["React","Suspense","useMemo","useRef","useState","useEffect","Canvas","useFrame","GLTFLoader","useLoader","OrbitControls","jsxDEV","_jsxDEV","RubiksCube","_s","scene","initialRotation","Math","PI","rotation","set","nodesSubset1","children","slice","nodesSubset2","rotationSubset1","setRotationSubset1","rotationSubset2","setRotationSubset2","fileName","_jsxFileName","lineNumber","columnNumber","enableZoom","fallback","position","RubiksCubeModel","nodesSubset","setRotation","_c","_s2","cubeRefs","startYRef","canvasRef","handlePointerDown","event","console","log","current","clientY","window","addEventListener","handlePointerMove","handlePointerUp","stopPropagation","deltaY","startY","getCanvasOffset","canvas","rect","getBoundingClientRect","left","scrollX","top","scrollY","canvasOffset","startYRelativeToCanvas","targetRot","removeEventListener","forEach","cubeRef","index","z","DraggingDown","DraggingUp","abs","Promise","resolve","requestAnimationFrame","setTimeout","scale","onPointerDown","map","node","object","ref","_c2","$RefreshReg$"],"sources":["E:/projects/React rubik cube app/Rubic-Cube-Game/rubiks cube app/src/App.js"],"sourcesContent":["import React, { Suspense, useMemo, useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader\";\nimport { useLoader } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport \"./App.css\";\n\nconst RubiksCube = () => {\n  const { scene } = useLoader(GLTFLoader, \"/rubikcube.gltf\");\n  const initialRotation = [Math.PI / 6, Math.PI / 4, 0];\n  scene.rotation.set(...initialRotation);\n\n  const nodesSubset1 = useMemo(() => scene.children.slice(0, 9), [scene]); //only one layer\n  const nodesSubset2 = useMemo(() => scene.children.slice(9), [scene]); //two layers\n\n  const [rotationSubset1, setRotationSubset1] = useState(initialRotation);\n  const [rotationSubset2, setRotationSubset2] = useState(initialRotation);\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <OrbitControls enableZoom={false} />\n      <Suspense fallback={null}>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset1}\n            rotation={rotationSubset1}\n            setRotation={setRotationSubset1}\n          />\n        </group>\n        <group position={[0, 0, 0]} rotation={rotationSubset1}>\n          <RubiksCubeModel\n            nodesSubset={nodesSubset2}\n            rotation={rotationSubset2}\n            setRotation={setRotationSubset2}\n          />\n        </group>\n      </Suspense>\n      <pointLight position={[10, 10, 10]} />\n    </Canvas>\n  );\n};\n\nconst RubiksCubeModel = ({ nodesSubset, rotation, setRotation }) => {\n  const cubeRefs = useRef([]);\n  const startYRef = useRef(null);\n  //console.log(target.rotation);\n  const canvasRef = useRef();\n  \n  const handlePointerDown = (event) => {\n    console.log(rotation);\n      console.log(\"down\");\n      startYRef.current = event.clientY;\n      window.addEventListener(\"pointermove\", handlePointerMove);\n      window.addEventListener(\"pointerup\", handlePointerUp);\n      event.stopPropagation();\n    \n  };\n\n  let deltaY;\n\n  const handlePointerMove = (event) => {\n      console.log(\"move\");\n      const startY = startYRef.current;\n      if (startY !== null) {\n        deltaY = event.clientY - startY;\n      }\n    \n  };\n\n\n\n  const getCanvasOffset = () => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY,\n    };\n  };\n\n  // Usage example\n  const canvasOffset = getCanvasOffset();\n  const startYRelativeToCanvas = startY - canvasOffset.top;\n\n\n\n  let targetRot=0;\n  const handlePointerUp =async () => {\n      console.log(\"up\");\n      window.removeEventListener(\"pointermove\", handlePointerMove);\n      window.removeEventListener(\"pointerup\", handlePointerUp);\n      if (deltaY > 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z + (Math.PI / 2);\n          console.log(targetRot);\n        });\n        DraggingDown();\n        deltaY = 0;\n      } else if (deltaY < 0) {\n        cubeRefs.current.forEach((cubeRef, index) => {\n          targetRot = cubeRef.current.rotation.z - (Math.PI / 2);\n          console.log(\"why\");\n        });\n        DraggingUp();\n        deltaY = 0;\n      }\n    \n  };\n\n  const DraggingDown = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z += Math.PI / 30;\n        await new Promise((resolve) => requestAnimationFrame(resolve));\n        await new Promise((resolve) => setTimeout(resolve, 1));\n      }\n    });\n  };\n\n  const DraggingUp = async () => {\n    cubeRefs.current.forEach(async (cubeRef, index) => {\n      while (Math.abs(cubeRef.current.rotation.z - targetRot) >= 0.001) {\n        cubeRef.current.rotation.z -= Math.PI / 30;\n        await new Promise((resolve) => requestAnimationFrame(resolve));\n        await new Promise((resolve) => setTimeout(resolve, 1));\n      }\n    });\n  };\n\n  useFrame(() => {\n    // Your animation logic here...\n  });\n  \n  return (\n    <group scale={[0.3, 0.3, 0.3]} onPointerDown={handlePointerDown}>\n      {nodesSubset.map((node, index) => (\n        <primitive\n          key={index}\n          object={node}\n          ref={(ref) => (cubeRefs.current[index] = { current: ref })}\n        />\n      ))}\n    </group>\n  );\n};\n\nexport default RubiksCube;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}