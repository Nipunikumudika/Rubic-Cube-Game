{"ast":null,"code":"import { Curve, Vector3, Vector4 } from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function (degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */) {\n  Curve.call(this);\n  this.degree = degree;\n  this.knots = knots;\n  this.controlPoints = [];\n  // Used by periodic NURBS to remove hidden spans\n  this.startKnot = startKnot || 0;\n  this.endKnot = endKnot || this.knots.length - 1;\n  for (var i = 0; i < controlPoints.length; ++i) {\n    // ensure Vector4 for control points\n    var point = controlPoints[i];\n    this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n  }\n};\nNURBSCurve.prototype = Object.create(Curve.prototype);\nNURBSCurve.prototype.constructor = NURBSCurve;\nNURBSCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]); // linear mapping t->u\n\n  // following results in (wx, wy, wz, w) homogeneous point\n  var hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n  if (hpoint.w != 1.0) {\n    // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n    hpoint.divideScalar(hpoint.w);\n  }\n  return point.set(hpoint.x, hpoint.y, hpoint.z);\n};\nNURBSCurve.prototype.getTangent = function (t, optionalTarget) {\n  var tangent = optionalTarget || new Vector3();\n  var u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n  var ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n  tangent.copy(ders[1]).normalize();\n  return tangent;\n};\nexport { NURBSCurve };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}